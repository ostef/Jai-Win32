// This file was auto generated

#module_parameters (UNICODE := true);

#import "Win32/Basics" (UNICODE);
#import "Win32/GDI_Basics" (UNICODE);

// Constants

ARW_DOWN :: 4;
ARW_HIDE :: 8;
ARW_LEFT :: 0;
ARW_RIGHT :: 0;
ARW_STARTMASK :: 3;
ARW_STARTRIGHT :: 1;
ARW_STARTTOP :: 2;
ARW_UP :: 4;
ASFW_ANY :: 4294967295;
BM_CLICK :: 245;
BM_GETCHECK :: 240;
BM_GETIMAGE :: 246;
BM_GETSTATE :: 242;
BM_SETCHECK :: 241;
BM_SETDONTCLICK :: 248;
BM_SETIMAGE :: 247;
BM_SETSTATE :: 243;
BM_SETSTYLE :: 244;
BN_CLICKED :: 0;
BN_DBLCLK :: 5;
BN_DISABLE :: 4;
BN_DOUBLECLICKED :: 5;
BN_HILITE :: 2;
BN_KILLFOCUS :: 7;
BN_PAINT :: 1;
BN_PUSHED :: 2;
BN_SETFOCUS :: 6;
BN_UNHILITE :: 3;
BN_UNPUSHED :: 3;
BROADCAST_QUERY_DENY :: 1112363332;
BSM_INSTALLABLEDRIVERS :: 4;
BSM_NETDRIVER :: 2;
BSM_VXDS :: 1;
BST_FOCUS :: 8;
BST_PUSHED :: 4;
BS_3STATE :: 5;
BS_AUTO3STATE :: 6;
BS_AUTOCHECKBOX :: 3;
BS_AUTORADIOBUTTON :: 9;
BS_BITMAP :: 128;
BS_BOTTOM :: 2048;
BS_CENTER :: 768;
BS_CHECKBOX :: 2;
BS_DEFPUSHBUTTON :: 1;
BS_FLAT :: 32768;
BS_GROUPBOX :: 7;
BS_ICON :: 64;
BS_LEFT :: 256;
BS_LEFTTEXT :: 32;
BS_MULTILINE :: 8192;
BS_NOTIFY :: 16384;
BS_OWNERDRAW :: 11;
BS_PUSHBOX :: 10;
BS_PUSHBUTTON :: 0;
BS_PUSHLIKE :: 4096;
BS_RADIOBUTTON :: 4;
BS_RIGHT :: 512;
BS_RIGHTBUTTON :: 32;
BS_TEXT :: 0;
BS_TOP :: 1024;
BS_TYPEMASK :: 15;
BS_USERBUTTON :: 8;
BS_VCENTER :: 3072;
CALERT_SYSTEM :: 6;
CBN_CLOSEUP :: 8;
CBN_DBLCLK :: 2;
CBN_DROPDOWN :: 7;
CBN_EDITCHANGE :: 5;
CBN_EDITUPDATE :: 6;
CBN_ERRSPACE :: -1;
CBN_KILLFOCUS :: 4;
CBN_SELCHANGE :: 1;
CBN_SELENDCANCEL :: 10;
CBN_SELENDOK :: 9;
CBN_SETFOCUS :: 3;
CBS_AUTOHSCROLL :: 64;
CBS_DISABLENOSCROLL :: 2048;
CBS_DROPDOWN :: 2;
CBS_DROPDOWNLIST :: 3;
CBS_HASSTRINGS :: 512;
CBS_LOWERCASE :: 16384;
CBS_NOINTEGRALHEIGHT :: 1024;
CBS_OEMCONVERT :: 128;
CBS_OWNERDRAWFIXED :: 16;
CBS_OWNERDRAWVARIABLE :: 32;
CBS_SIMPLE :: 1;
CBS_SORT :: 256;
CBS_UPPERCASE :: 8192;
CB_ADDSTRING :: 323;
CB_DELETESTRING :: 324;
CB_DIR :: 325;
CB_ERR :: -1;
CB_ERRSPACE :: -2;
CB_FINDSTRING :: 332;
CB_FINDSTRINGEXACT :: 344;
CB_GETCOMBOBOXINFO :: 356;
CB_GETCOUNT :: 326;
CB_GETCURSEL :: 327;
CB_GETDROPPEDCONTROLRECT :: 338;
CB_GETDROPPEDSTATE :: 343;
CB_GETDROPPEDWIDTH :: 351;
CB_GETEDITSEL :: 320;
CB_GETEXTENDEDUI :: 342;
CB_GETHORIZONTALEXTENT :: 349;
CB_GETITEMDATA :: 336;
CB_GETITEMHEIGHT :: 340;
CB_GETLBTEXT :: 328;
CB_GETLBTEXTLEN :: 329;
CB_GETLOCALE :: 346;
CB_GETTOPINDEX :: 347;
CB_INITSTORAGE :: 353;
CB_INSERTSTRING :: 330;
CB_LIMITTEXT :: 321;
CB_MSGMAX :: 357;
CB_MULTIPLEADDSTRING :: 355;
CB_OKAY :: 0;
CB_RESETCONTENT :: 331;
CB_SELECTSTRING :: 333;
CB_SETCURSEL :: 334;
CB_SETDROPPEDWIDTH :: 352;
CB_SETEDITSEL :: 322;
CB_SETEXTENDEDUI :: 341;
CB_SETHORIZONTALEXTENT :: 350;
CB_SETITEMDATA :: 337;
CB_SETITEMHEIGHT :: 339;
CB_SETLOCALE :: 345;
CB_SETTOPINDEX :: 348;
CB_SHOWDROPDOWN :: 335;
CCHILDREN_SCROLLBAR :: 5;
CCHILDREN_TITLEBAR :: 5;
CHILDID_SELF :: 0;
COLOR_BTNHIGHLIGHT :: 20;
COLOR_BTNHILIGHT :: 20;
CONSOLE_APPLICATION_16BIT :: 0;
CONSOLE_CARET_SELECTION :: 1;
CONSOLE_CARET_VISIBLE :: 2;
CONTACTVISUALIZATION_OFF :: 0;
CONTACTVISUALIZATION_ON :: 1;
CONTACTVISUALIZATION_PRESENTATIONMODE :: 2;
CREATEPROCESS_MANIFEST_RESOURCE_ID :: 1;
CSOUND_SYSTEM :: 16;
CTLCOLOR_BTN :: 3;
CTLCOLOR_DLG :: 4;
CTLCOLOR_EDIT :: 1;
CTLCOLOR_LISTBOX :: 2;
CTLCOLOR_MAX :: 7;
CTLCOLOR_MSGBOX :: 0;
CTLCOLOR_SCROLLBAR :: 5;
CTLCOLOR_STATIC :: 6;
CURSOR_CREATION_SCALING_DEFAULT :: 2;
CURSOR_CREATION_SCALING_NONE :: 1;
CWF_CREATE_ONLY :: 1;
CW_USEDEFAULT :: -2147483648;
DCX_EXCLUDEUPDATE :: 256;
DC_HASDEFID :: 21323;
DESKTOP_CREATEMENU :: 4;
DESKTOP_CREATEWINDOW :: 2;
DESKTOP_ENUMERATE :: 64;
DESKTOP_HOOKCONTROL :: 8;
DESKTOP_JOURNALPLAYBACK :: 32;
DESKTOP_JOURNALRECORD :: 16;
DESKTOP_READOBJECTS :: 1;
DESKTOP_SWITCHDESKTOP :: 256;
DESKTOP_WRITEOBJECTS :: 128;
DEVICE_NOTIFY_ALL_INTERFACE_CLASSES :: 4;
DF_ALLOWOTHERACCOUNTHOOK :: 1;
DIFFERENCE :: 11;
DLGC_BUTTON :: 8192;
DLGC_DEFPUSHBUTTON :: 16;
DLGC_HASSETSEL :: 8;
DLGC_RADIOBUTTON :: 64;
DLGC_STATIC :: 256;
DLGC_UNDEFPUSHBUTTON :: 32;
DLGC_WANTALLKEYS :: 4;
DLGC_WANTARROWS :: 1;
DLGC_WANTCHARS :: 128;
DLGC_WANTMESSAGE :: 4;
DLGC_WANTTAB :: 2;
DLGWINDOWEXTRA :: 30;
DM_GETDEFID :: 1024;
DM_POINTERHITTEST :: 592;
DM_REPOSITION :: 1026;
DM_SETDEFID :: 1025;
DOF_DIRECTORY :: 32771;
DOF_DOCUMENT :: 32770;
DOF_EXECUTABLE :: 32769;
DOF_MULTIPLE :: 32772;
DOF_PROGMAN :: 1;
DOF_SHELLDATA :: 2;
DO_DROPFILE :: 1162627398;
DO_PRINTFILE :: 1414419024;
DS_3DLOOK :: 4;
DS_ABSALIGN :: 1;
DS_CENTER :: 2048;
DS_CENTERMOUSE :: 4096;
DS_CONTEXTHELP :: 8192;
DS_CONTROL :: 1024;
DS_FIXEDSYS :: 8;
DS_LOCALEDIT :: 32;
DS_MODALFRAME :: 128;
DS_NOFAILCREATE :: 16;
DS_NOIDLEMSG :: 256;
DS_SETFONT :: 64;
DS_SETFOREGROUND :: 512;
DS_SYSMODAL :: 2;
DS_USEPIXELS :: 32768;
DWLP_MSGRESULT :: 0;
DWL_DLGPROC :: 4;
DWL_MSGRESULT :: 0;
DWL_USER :: 8;
EC_LEFTMARGIN :: 1;
EC_RIGHTMARGIN :: 2;
EC_USEFONTINFO :: 65535;
EDD_GET_DEVICE_INTERFACE_NAME :: 1;
EDS_RAWMODE :: 2;
EDS_ROTATEDMODE :: 4;
EIMES_CANCELCOMPSTRINFOCUS :: 2;
EIMES_COMPLETECOMPSTRKILLFOCUS :: 4;
EIMES_GETCOMPSTRATONCE :: 1;
EMSIS_COMPOSITIONSTRING :: 1;
ENDSESSION_CLOSEAPP :: 1;
ENDSESSION_CRITICAL :: 1073741824;
ENDSESSION_LOGOFF :: 2147483648;
EN_AFTER_PASTE :: 2049;
EN_ALIGN_LTR_EC :: 1792;
EN_ALIGN_RTL_EC :: 1793;
EN_BEFORE_PASTE :: 2048;
EN_CHANGE :: 768;
EN_ERRSPACE :: 1280;
EN_HSCROLL :: 1537;
EN_KILLFOCUS :: 512;
EN_MAXTEXT :: 1281;
EN_SETFOCUS :: 256;
EN_UPDATE :: 1024;
EN_VSCROLL :: 1538;
ES_AUTOHSCROLL :: 128;
ES_AUTOVSCROLL :: 64;
ES_CENTER :: 1;
ES_LEFT :: 0;
ES_LOWERCASE :: 16;
ES_MULTILINE :: 4;
ES_NOHIDESEL :: 256;
ES_NUMBER :: 8192;
ES_OEMCONVERT :: 1024;
ES_PASSWORD :: 32;
ES_READONLY :: 2048;
ES_RIGHT :: 2;
ES_UPPERCASE :: 8;
ES_WANTRETURN :: 4096;
EVENT_AIA_END :: 45055;
EVENT_AIA_START :: 40960;
EVENT_CONSOLE_CARET :: 16385;
EVENT_CONSOLE_END :: 16639;
EVENT_CONSOLE_END_APPLICATION :: 16391;
EVENT_CONSOLE_LAYOUT :: 16389;
EVENT_CONSOLE_START_APPLICATION :: 16390;
EVENT_CONSOLE_UPDATE_REGION :: 16386;
EVENT_CONSOLE_UPDATE_SCROLL :: 16388;
EVENT_CONSOLE_UPDATE_SIMPLE :: 16387;
EVENT_MAX :: 2147483647;
EVENT_MIN :: 1;
EVENT_OBJECT_ACCELERATORCHANGE :: 32786;
EVENT_OBJECT_CLOAKED :: 32791;
EVENT_OBJECT_CONTENTSCROLLED :: 32789;
EVENT_OBJECT_CREATE :: 32768;
EVENT_OBJECT_DEFACTIONCHANGE :: 32785;
EVENT_OBJECT_DESCRIPTIONCHANGE :: 32781;
EVENT_OBJECT_DESTROY :: 32769;
EVENT_OBJECT_DRAGCANCEL :: 32802;
EVENT_OBJECT_DRAGCOMPLETE :: 32803;
EVENT_OBJECT_DRAGDROPPED :: 32806;
EVENT_OBJECT_DRAGENTER :: 32804;
EVENT_OBJECT_DRAGLEAVE :: 32805;
EVENT_OBJECT_DRAGSTART :: 32801;
EVENT_OBJECT_END :: 33023;
EVENT_OBJECT_FOCUS :: 32773;
EVENT_OBJECT_HELPCHANGE :: 32784;
EVENT_OBJECT_HIDE :: 32771;
EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED :: 32800;
EVENT_OBJECT_IME_CHANGE :: 32809;
EVENT_OBJECT_IME_HIDE :: 32808;
EVENT_OBJECT_IME_SHOW :: 32807;
EVENT_OBJECT_INVOKED :: 32787;
EVENT_OBJECT_LIVEREGIONCHANGED :: 32793;
EVENT_OBJECT_LOCATIONCHANGE :: 32779;
EVENT_OBJECT_NAMECHANGE :: 32780;
EVENT_OBJECT_PARENTCHANGE :: 32783;
EVENT_OBJECT_REORDER :: 32772;
EVENT_OBJECT_SELECTION :: 32774;
EVENT_OBJECT_SELECTIONADD :: 32775;
EVENT_OBJECT_SELECTIONREMOVE :: 32776;
EVENT_OBJECT_SELECTIONWITHIN :: 32777;
EVENT_OBJECT_SHOW :: 32770;
EVENT_OBJECT_STATECHANGE :: 32778;
EVENT_OBJECT_TEXTEDIT_CONVERSIONTARGETCHANGED :: 32816;
EVENT_OBJECT_TEXTSELECTIONCHANGED :: 32788;
EVENT_OBJECT_UNCLOAKED :: 32792;
EVENT_OBJECT_VALUECHANGE :: 32782;
EVENT_OEM_DEFINED_END :: 511;
EVENT_OEM_DEFINED_START :: 257;
EVENT_SYSTEM_ALERT :: 2;
EVENT_SYSTEM_ARRANGMENTPREVIEW :: 32790;
EVENT_SYSTEM_CAPTUREEND :: 9;
EVENT_SYSTEM_CAPTURESTART :: 8;
EVENT_SYSTEM_CONTEXTHELPEND :: 13;
EVENT_SYSTEM_CONTEXTHELPSTART :: 12;
EVENT_SYSTEM_DESKTOPSWITCH :: 32;
EVENT_SYSTEM_DIALOGEND :: 17;
EVENT_SYSTEM_DIALOGSTART :: 16;
EVENT_SYSTEM_DRAGDROPEND :: 15;
EVENT_SYSTEM_DRAGDROPSTART :: 14;
EVENT_SYSTEM_END :: 255;
EVENT_SYSTEM_FOREGROUND :: 3;
EVENT_SYSTEM_IME_KEY_NOTIFICATION :: 41;
EVENT_SYSTEM_MENUEND :: 5;
EVENT_SYSTEM_MENUPOPUPEND :: 7;
EVENT_SYSTEM_MENUPOPUPSTART :: 6;
EVENT_SYSTEM_MENUSTART :: 4;
EVENT_SYSTEM_MINIMIZEEND :: 23;
EVENT_SYSTEM_MINIMIZESTART :: 22;
EVENT_SYSTEM_MOVESIZEEND :: 11;
EVENT_SYSTEM_MOVESIZESTART :: 10;
EVENT_SYSTEM_SCROLLINGEND :: 19;
EVENT_SYSTEM_SCROLLINGSTART :: 18;
EVENT_SYSTEM_SOUND :: 1;
EVENT_SYSTEM_SWITCHEND :: 21;
EVENT_SYSTEM_SWITCHER_APPDROPPED :: 38;
EVENT_SYSTEM_SWITCHER_APPGRABBED :: 36;
EVENT_SYSTEM_SWITCHER_APPOVERTARGET :: 37;
EVENT_SYSTEM_SWITCHER_CANCELLED :: 39;
EVENT_SYSTEM_SWITCHSTART :: 20;
EVENT_UIA_EVENTID_END :: 20223;
EVENT_UIA_EVENTID_START :: 19968;
EVENT_UIA_PROPID_END :: 30207;
EVENT_UIA_PROPID_START :: 29952;
EWX_ARSO :: 67108864;
EWX_BOOTOPTIONS :: 16777216;
EWX_CHECK_SAFE_FOR_SERVER :: 134217728;
EWX_FORCE :: 4;
EWX_FORCEIFHUNG :: 16;
EWX_QUICKRESOLVE :: 32;
EWX_SYSTEM_INITIATED :: 268435456;
FALT :: 16;
FAPPCOMMAND_KEY :: 0;
FAPPCOMMAND_MASK :: 61440;
FAPPCOMMAND_MOUSE :: 32768;
FAPPCOMMAND_OEM :: 4096;
FCONTROL :: 8;
FE_FONTSMOOTHINGCLEARTYPE :: 2;
FE_FONTSMOOTHINGORIENTATIONBGR :: 0;
FE_FONTSMOOTHINGORIENTATIONRGB :: 1;
FE_FONTSMOOTHINGSTANDARD :: 1;
FKF_AVAILABLE :: 2;
FKF_CLICKON :: 64;
FKF_CONFIRMHOTKEY :: 8;
FKF_FILTERKEYSON :: 1;
FKF_HOTKEYACTIVE :: 4;
FKF_HOTKEYSOUND :: 16;
FKF_INDICATOR :: 32;
FNOINVERT :: 2;
FSHIFT :: 4;
FVIRTKEY :: 1;
GCF_INCLUDE_ANCESTORS :: 1;
GESTURECONFIGMAXCOUNT :: 256;
GESTUREVISUALIZATION_DOUBLETAP :: 2;
GESTUREVISUALIZATION_OFF :: 0;
GESTUREVISUALIZATION_ON :: 31;
GESTUREVISUALIZATION_PRESSANDHOLD :: 8;
GESTUREVISUALIZATION_PRESSANDTAP :: 4;
GESTUREVISUALIZATION_RIGHTTAP :: 16;
GESTUREVISUALIZATION_TAP :: 1;
GF_BEGIN :: 1;
GF_END :: 4;
GF_INERTIA :: 2;
GIDC_ARRIVAL :: 1;
GIDC_REMOVAL :: 2;
GUI_16BITTASK :: 0;
GWFS_INCLUDE_ANCESTORS :: 1;
GW_MAX :: 5;
HBMMENU_CALLBACK :: cast, no_check (HBITMAP) -1;
HBMMENU_MBAR_CLOSE :: cast, no_check (HBITMAP) 5;
HBMMENU_MBAR_CLOSE_D :: cast, no_check (HBITMAP) 6;
HBMMENU_MBAR_MINIMIZE :: cast, no_check (HBITMAP) 3;
HBMMENU_MBAR_MINIMIZE_D :: cast, no_check (HBITMAP) 7;
HBMMENU_MBAR_RESTORE :: cast, no_check (HBITMAP) 2;
HBMMENU_POPUP_CLOSE :: cast, no_check (HBITMAP) 8;
HBMMENU_POPUP_MAXIMIZE :: cast, no_check (HBITMAP) 10;
HBMMENU_POPUP_MINIMIZE :: cast, no_check (HBITMAP) 11;
HBMMENU_POPUP_RESTORE :: cast, no_check (HBITMAP) 9;
HBMMENU_SYSTEM :: cast, no_check (HBITMAP) 1;
HCBT_ACTIVATE :: 5;
HCBT_CLICKSKIPPED :: 6;
HCBT_CREATEWND :: 3;
HCBT_DESTROYWND :: 4;
HCBT_KEYSKIPPED :: 7;
HCBT_MINMAX :: 1;
HCBT_MOVESIZE :: 0;
HCBT_QS :: 2;
HCBT_SETFOCUS :: 9;
HCBT_SYSCOMMAND :: 8;
HCF_DEFAULTDESKTOP :: 512;
HCF_LOGONDESKTOP :: 256;
HC_ACTION :: 0;
HC_GETNEXT :: 1;
HC_NOREM :: 3;
HC_NOREMOVE :: 3;
HC_SKIP :: 2;
HC_SYSMODALOFF :: 5;
HC_SYSMODALON :: 4;
HELPINFO_MENUITEM :: 2;
HELPINFO_WINDOW :: 1;
HELP_COMMAND :: 258;
HELP_CONTENTS :: 3;
HELP_CONTEXT :: 1;
HELP_CONTEXTMENU :: 10;
HELP_CONTEXTPOPUP :: 8;
HELP_FINDER :: 11;
HELP_FORCEFILE :: 9;
HELP_HELPONHELP :: 4;
HELP_INDEX :: 3;
HELP_KEY :: 257;
HELP_MULTIKEY :: 513;
HELP_PARTIALKEY :: 261;
HELP_QUIT :: 2;
HELP_SETCONTENTS :: 5;
HELP_SETINDEX :: 5;
HELP_SETPOPUP_POS :: 13;
HELP_SETWINPOS :: 515;
HELP_TCARD :: 32768;
HELP_TCARD_DATA :: 16;
HELP_TCARD_OTHER_CALLER :: 17;
HELP_WM_HELP :: 12;
HIDE_WINDOW :: 0;
HKL_NEXT :: 1;
HKL_PREV :: 0;
HSHELL_ACCESSIBILITYSTATE :: 11;
HSHELL_ACTIVATESHELLWINDOW :: 3;
HSHELL_APPCOMMAND :: 12;
HSHELL_ENDTASK :: 10;
HSHELL_GETMINRECT :: 5;
HSHELL_HIGHBIT :: 32768;
HSHELL_LANGUAGE :: 8;
HSHELL_MONITORCHANGED :: 16;
HSHELL_REDRAW :: 6;
HSHELL_SYSMENU :: 9;
HSHELL_TASKMAN :: 7;
HSHELL_WINDOWACTIVATED :: 4;
HSHELL_WINDOWCREATED :: 1;
HSHELL_WINDOWDESTROYED :: 2;
HSHELL_WINDOWREPLACED :: 13;
HSHELL_WINDOWREPLACING :: 14;
HTBORDER :: 18;
HTBOTTOM :: 15;
HTBOTTOMLEFT :: 16;
HTBOTTOMRIGHT :: 17;
HTCAPTION :: 2;
HTCLIENT :: 1;
HTCLOSE :: 20;
HTERROR :: -2;
HTGROWBOX :: 4;
HTHELP :: 21;
HTHSCROLL :: 6;
HTLEFT :: 10;
HTMAXBUTTON :: 9;
HTMENU :: 5;
HTMINBUTTON :: 8;
HTNOWHERE :: 0;
HTOBJECT :: 19;
HTREDUCE :: 8;
HTRIGHT :: 11;
HTSIZE :: 4;
HTSIZEFIRST :: 10;
HTSIZELAST :: 17;
HTSYSMENU :: 3;
HTTOP :: 12;
HTTOPLEFT :: 13;
HTTOPRIGHT :: 14;
HTTRANSPARENT :: -1;
HTVSCROLL :: 7;
HTZOOM :: 9;
HWND_BOTTOM :: cast, no_check (HWND) 1;
HWND_DESKTOP :: cast, no_check (HWND) 0;
HWND_MESSAGE :: cast, no_check (HWND) -3;
HWND_NOTOPMOST :: cast, no_check (HWND) -2;
HWND_TOP :: cast, no_check (HWND) 0;
HWND_TOPMOST :: cast, no_check (HWND) -1;
ICON_BIG :: 1;
ICON_SMALL :: 0;
ICON_SMALL2 :: 2;
IDANI_CAPTION :: 3;
IDANI_OPEN :: 1;
IDC_APPSTARTING :: cast, no_check (PWSTR) 32650;
IDC_ARROW :: cast, no_check (PWSTR) 32512;
IDC_CROSS :: cast, no_check (PWSTR) 32515;
IDC_HAND :: cast, no_check (PWSTR) 32649;
IDC_HELP :: cast, no_check (PWSTR) 32651;
IDC_IBEAM :: cast, no_check (PWSTR) 32513;
IDC_ICON :: cast, no_check (PWSTR) 32641;
IDC_NO :: cast, no_check (PWSTR) 32648;
IDC_PERSON :: cast, no_check (PWSTR) 32672;
IDC_PIN :: cast, no_check (PWSTR) 32671;
IDC_SIZE :: cast, no_check (PWSTR) 32640;
IDC_SIZEALL :: cast, no_check (PWSTR) 32646;
IDC_SIZENESW :: cast, no_check (PWSTR) 32643;
IDC_SIZENS :: cast, no_check (PWSTR) 32645;
IDC_SIZENWSE :: cast, no_check (PWSTR) 32642;
IDC_SIZEWE :: cast, no_check (PWSTR) 32644;
IDC_UPARROW :: cast, no_check (PWSTR) 32516;
IDC_WAIT :: cast, no_check (PWSTR) 32514;
IDHOT_SNAPDESKTOP :: -2;
IDHOT_SNAPWINDOW :: -1;
IDH_CANCEL :: 28444;
IDH_GENERIC_HELP_BUTTON :: 28442;
IDH_HELP :: 28445;
IDH_MISSING_CONTEXT :: 28441;
IDH_NO_HELP :: 28440;
IDH_OK :: 28443;
IDI_APPLICATION :: cast, no_check (PWSTR) 32512;
IDI_ASTERISK :: cast, no_check (PWSTR) 32516;
IDI_ERROR :: 32513;
IDI_EXCLAMATION :: cast, no_check (PWSTR) 32515;
IDI_HAND :: cast, no_check (PWSTR) 32513;
IDI_INFORMATION :: 32516;
IDI_QUESTION :: cast, no_check (PWSTR) 32514;
IDI_SHIELD :: cast, no_check (PWSTR) 32518;
IDI_WARNING :: 32515;
IDI_WINLOGO :: cast, no_check (PWSTR) 32517;
IMAGE_ENHMETAFILE :: 3;
INDEXID_CONTAINER :: 0;
INDEXID_OBJECT :: 0;
INPUTLANGCHANGE_BACKWARD :: 4;
INPUTLANGCHANGE_FORWARD :: 2;
INPUTLANGCHANGE_SYSCHARSET :: 1;
ISMEX_CALLBACK :: 4;
ISMEX_NOSEND :: 0;
ISMEX_NOTIFY :: 2;
ISMEX_REPLIED :: 8;
ISMEX_SEND :: 1;
ISOLATIONAWARE_MANIFEST_RESOURCE_ID :: 2;
ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID :: 3;
ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID :: 5;
ISOLATIONPOLICY_MANIFEST_RESOURCE_ID :: 4;
KF_ALTDOWN :: 8192;
KF_DLGMODE :: 2048;
KF_EXTENDED :: 256;
KF_MENUMODE :: 4096;
KF_REPEAT :: 16384;
KF_UP :: 32768;
KL_NAMELENGTH :: 9;
LBN_DBLCLK :: 2;
LBN_ERRSPACE :: -2;
LBN_KILLFOCUS :: 5;
LBN_SELCANCEL :: 3;
LBN_SELCHANGE :: 1;
LBN_SETFOCUS :: 4;
LBS_COMBOBOX :: 32768;
LBS_DISABLENOSCROLL :: 4096;
LBS_EXTENDEDSEL :: 2048;
LBS_HASSTRINGS :: 64;
LBS_MULTICOLUMN :: 512;
LBS_MULTIPLESEL :: 8;
LBS_NODATA :: 8192;
LBS_NOINTEGRALHEIGHT :: 256;
LBS_NOREDRAW :: 4;
LBS_NOSEL :: 16384;
LBS_NOTIFY :: 1;
LBS_OWNERDRAWFIXED :: 16;
LBS_OWNERDRAWVARIABLE :: 32;
LBS_SORT :: 2;
LBS_STANDARD :: 10485763;
LBS_USETABSTOPS :: 128;
LBS_WANTKEYBOARDINPUT :: 1024;
LB_ADDFILE :: 406;
LB_ADDSTRING :: 384;
LB_CTLCODE :: 0;
LB_DELETESTRING :: 386;
LB_DIR :: 397;
LB_ERR :: -1;
LB_ERRSPACE :: -2;
LB_FINDSTRING :: 399;
LB_FINDSTRINGEXACT :: 418;
LB_GETANCHORINDEX :: 413;
LB_GETCARETINDEX :: 415;
LB_GETCOUNT :: 395;
LB_GETCURSEL :: 392;
LB_GETHORIZONTALEXTENT :: 403;
LB_GETITEMDATA :: 409;
LB_GETITEMHEIGHT :: 417;
LB_GETITEMRECT :: 408;
LB_GETLISTBOXINFO :: 434;
LB_GETLOCALE :: 422;
LB_GETSEL :: 391;
LB_GETSELCOUNT :: 400;
LB_GETSELITEMS :: 401;
LB_GETTEXT :: 393;
LB_GETTEXTLEN :: 394;
LB_GETTOPINDEX :: 398;
LB_INITSTORAGE :: 424;
LB_INSERTSTRING :: 385;
LB_ITEMFROMPOINT :: 425;
LB_MSGMAX :: 435;
LB_MULTIPLEADDSTRING :: 433;
LB_OKAY :: 0;
LB_RESETCONTENT :: 388;
LB_SELECTSTRING :: 396;
LB_SELITEMRANGE :: 411;
LB_SELITEMRANGEEX :: 387;
LB_SETANCHORINDEX :: 412;
LB_SETCARETINDEX :: 414;
LB_SETCOLUMNWIDTH :: 405;
LB_SETCOUNT :: 423;
LB_SETCURSEL :: 390;
LB_SETHORIZONTALEXTENT :: 404;
LB_SETITEMDATA :: 410;
LB_SETITEMHEIGHT :: 416;
LB_SETLOCALE :: 421;
LB_SETSEL :: 389;
LB_SETTABSTOPS :: 402;
LB_SETTOPINDEX :: 407;
LLMHF_INJECTED :: 1;
LLMHF_LOWER_IL_INJECTED :: 2;
LR_COLOR :: 2;
MAPVK_VK_TO_CHAR :: 2;
MAPVK_VK_TO_VSC :: 0;
MAPVK_VK_TO_VSC_EX :: 4;
MAPVK_VSC_TO_VK :: 1;
MAPVK_VSC_TO_VK_EX :: 3;
MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID :: 16;
MAX_LOGICALDPIOVERRIDE :: 2;
MAX_STR_BLOCKREASON :: 256;
MAX_TOUCH_COUNT :: 256;
MAX_TOUCH_PREDICTION_FILTER_TAPS :: 3;
MA_ACTIVATE :: 1;
MA_ACTIVATEANDEAT :: 2;
MA_NOACTIVATE :: 3;
MA_NOACTIVATEANDEAT :: 4;
MDIS_ALLCHILDSTYLES :: 1;
METRICS_USEDEFAULT :: -1;
MINIMUM_RESERVED_MANIFEST_RESOURCE_ID :: 1;
MIN_LOGICALDPIOVERRIDE :: -2;
MKF_AVAILABLE :: 2;
MKF_CONFIRMHOTKEY :: 8;
MKF_HOTKEYACTIVE :: 4;
MKF_HOTKEYSOUND :: 16;
MKF_INDICATOR :: 32;
MKF_LEFTBUTTONDOWN :: 16777216;
MKF_LEFTBUTTONSEL :: 268435456;
MKF_MODIFIERS :: 64;
MKF_MOUSEKEYSON :: 1;
MKF_MOUSEMODE :: 2147483648;
MKF_REPLACENUMBERS :: 128;
MKF_RIGHTBUTTONDOWN :: 33554432;
MKF_RIGHTBUTTONSEL :: 536870912;
MK_CONTROL :: 8;
MK_LBUTTON :: 1;
MK_MBUTTON :: 16;
MK_RBUTTON :: 2;
MK_SHIFT :: 4;
MK_XBUTTON1 :: 32;
MK_XBUTTON2 :: 64;
MNC_CLOSE :: 1;
MNC_EXECUTE :: 2;
MNC_IGNORE :: 0;
MNC_SELECT :: 3;
MND_CONTINUE :: 0;
MND_ENDMENU :: 1;
MNGO_NOERROR :: 1;
MNGO_NOINTERFACE :: 0;
MN_GETHMENU :: 481;
MONITORINFOF_PRIMARY :: 1;
MOUSEWHEEL_ROUTING_FOCUS :: 0;
MOUSEWHEEL_ROUTING_HYBRID :: 1;
MOUSEWHEEL_ROUTING_MOUSE_POS :: 2;
MSGF_DIALOGBOX :: 0;
MSGF_MAX :: 8;
MSGF_MENU :: 2;
MSGF_MESSAGEBOX :: 1;
MSGF_NEXTWINDOW :: 6;
MSGF_SCROLLBAR :: 5;
MSGF_USER :: 4096;
NFR_ANSI :: 1;
NFR_UNICODE :: 2;
NF_QUERY :: 3;
NF_REQUERY :: 4;
NID_EXTERNAL_PEN :: 8;
NID_EXTERNAL_TOUCH :: 2;
NID_INTEGRATED_PEN :: 4;
NID_INTEGRATED_TOUCH :: 1;
NID_MULTI_INPUT :: 64;
NID_READY :: 128;
OBM_BTNCORNERS :: 32758;
OBM_BTSIZE :: 32761;
OBM_CHECK :: 32760;
OBM_CHECKBOXES :: 32759;
OBM_CLOSE :: 32754;
OBM_COMBO :: 32738;
OBM_DNARROW :: 32752;
OBM_DNARROWD :: 32742;
OBM_DNARROWI :: 32736;
OBM_LFARROW :: 32750;
OBM_LFARROWD :: 32740;
OBM_LFARROWI :: 32734;
OBM_MNARROW :: 32739;
OBM_OLD_CLOSE :: 32767;
OBM_OLD_DNARROW :: 32764;
OBM_OLD_LFARROW :: 32762;
OBM_OLD_REDUCE :: 32757;
OBM_OLD_RESTORE :: 32755;
OBM_OLD_RGARROW :: 32763;
OBM_OLD_UPARROW :: 32765;
OBM_OLD_ZOOM :: 32756;
OBM_REDUCE :: 32749;
OBM_REDUCED :: 32746;
OBM_RESTORE :: 32747;
OBM_RESTORED :: 32744;
OBM_RGARROW :: 32751;
OBM_RGARROWD :: 32741;
OBM_RGARROWI :: 32735;
OBM_SIZE :: 32766;
OBM_UPARROW :: 32753;
OBM_UPARROWD :: 32743;
OBM_UPARROWI :: 32737;
OBM_ZOOM :: 32748;
OBM_ZOOMD :: 32745;
OCR_ICOCUR :: 32647;
OCR_ICON :: 32641;
OCR_SIZE :: 32640;
ODA_DRAWENTIRE :: 1;
ODA_FOCUS :: 4;
ODA_SELECT :: 2;
ODS_CHECKED :: 8;
ODS_COMBOBOXEDIT :: 4096;
ODS_DEFAULT :: 32;
ODS_DISABLED :: 4;
ODS_FOCUS :: 16;
ODS_GRAYED :: 2;
ODS_HOTLIGHT :: 64;
ODS_INACTIVE :: 128;
ODS_NOACCEL :: 256;
ODS_NOFOCUSRECT :: 512;
ODS_SELECTED :: 1;
OIC_BANG :: 32515;
OIC_ERROR :: 32513;
OIC_HAND :: 32513;
OIC_INFORMATION :: 32516;
OIC_NOTE :: 32516;
OIC_QUES :: 32514;
OIC_SAMPLE :: 32512;
OIC_SHIELD :: 32518;
OIC_WARNING :: 32515;
OIC_WINLOGO :: 32517;
ORD_LANGDRIVER :: 1;
PA_ACTIVATE :: 1;
PA_NOACTIVATE :: 3;
PBTF_APMRESUMEFROMFAILURE :: 1;
PBT_APMBATTERYLOW :: 9;
PBT_APMOEMEVENT :: 11;
PBT_APMPOWERSTATUSCHANGE :: 10;
PBT_APMQUERYSTANDBY :: 1;
PBT_APMQUERYSTANDBYFAILED :: 3;
PBT_APMQUERYSUSPEND :: 0;
PBT_APMQUERYSUSPENDFAILED :: 2;
PBT_APMRESUMEAUTOMATIC :: 18;
PBT_APMRESUMECRITICAL :: 6;
PBT_APMRESUMESTANDBY :: 8;
PBT_APMRESUMESUSPEND :: 7;
PBT_APMSTANDBY :: 5;
PBT_APMSUSPEND :: 4;
PBT_POWERSETTINGCHANGE :: 32787;
PDC_ARRIVAL :: 1;
PDC_MAPPING_CHANGE :: 256;
PDC_MODE_ASPECTRATIOPRESERVED :: 2048;
PDC_MODE_CENTERED :: 128;
PDC_MODE_DEFAULT :: 64;
PDC_ORIENTATION_0 :: 4;
PDC_ORIENTATION_180 :: 16;
PDC_ORIENTATION_270 :: 32;
PDC_ORIENTATION_90 :: 8;
PDC_ORIGIN :: 1024;
PDC_REMOVAL :: 2;
PDC_RESOLUTION :: 512;
PENARBITRATIONTYPE_FIS :: 2;
PENARBITRATIONTYPE_MAX :: 4;
PENARBITRATIONTYPE_NONE :: 0;
PENARBITRATIONTYPE_SPT :: 3;
PENARBITRATIONTYPE_WIN8 :: 1;
PENVISUALIZATION_CURSOR :: 32;
PENVISUALIZATION_DOUBLETAP :: 2;
PENVISUALIZATION_OFF :: 0;
PENVISUALIZATION_ON :: 35;
PENVISUALIZATION_TAP :: 1;
PEN_FLAG_BARREL :: 1;
PEN_FLAG_ERASER :: 4;
PEN_FLAG_INVERTED :: 2;
PEN_FLAG_NONE :: 0;
PEN_MASK_NONE :: 0;
PEN_MASK_PRESSURE :: 1;
PEN_MASK_ROTATION :: 2;
PEN_MASK_TILT_X :: 4;
PEN_MASK_TILT_Y :: 8;
PMB_ACTIVE :: 1;
POINTER_DEVICE_PRODUCT_STRING_MAX :: 520;
POINTER_MESSAGE_FLAG_CANCELED :: 32768;
POINTER_MESSAGE_FLAG_CONFIDENCE :: 16384;
POINTER_MESSAGE_FLAG_FIFTHBUTTON :: 256;
POINTER_MESSAGE_FLAG_FIRSTBUTTON :: 16;
POINTER_MESSAGE_FLAG_FOURTHBUTTON :: 128;
POINTER_MESSAGE_FLAG_INCONTACT :: 4;
POINTER_MESSAGE_FLAG_INRANGE :: 2;
POINTER_MESSAGE_FLAG_NEW :: 1;
POINTER_MESSAGE_FLAG_PRIMARY :: 8192;
POINTER_MESSAGE_FLAG_SECONDBUTTON :: 32;
POINTER_MESSAGE_FLAG_THIRDBUTTON :: 64;
POINTER_MOD_CTRL :: 8;
POINTER_MOD_SHIFT :: 4;
PRF_CHECKVISIBLE :: 1;
PRF_CHILDREN :: 16;
PRF_CLIENT :: 4;
PRF_ERASEBKGND :: 8;
PRF_NONCLIENT :: 2;
PRF_OWNED :: 32;
PWR_CRITICALRESUME :: 3;
PWR_FAIL :: -1;
PWR_OK :: 1;
PWR_SUSPENDREQUEST :: 1;
PWR_SUSPENDRESUME :: 2;
PW_RENDERFULLCONTENT :: 2;
QS_POINTER :: 4096;
QS_TOUCH :: 2048;
RES_CURSOR :: 2;
RES_ICON :: 1;
RIDEV_EXMODEMASK :: 240;
RIM_INPUT :: 0;
RIM_INPUTSINK :: 1;
RIM_TYPEMAX :: 2;
RI_KEY_BREAK :: 1;
RI_KEY_E0 :: 2;
RI_KEY_E1 :: 4;
RI_KEY_MAKE :: 0;
RI_KEY_TERMSRV_SET_LED :: 8;
RI_KEY_TERMSRV_SHADOW :: 16;
RI_MOUSE_BUTTON_1_DOWN :: 1;
RI_MOUSE_BUTTON_1_UP :: 2;
RI_MOUSE_BUTTON_2_DOWN :: 4;
RI_MOUSE_BUTTON_2_UP :: 8;
RI_MOUSE_BUTTON_3_DOWN :: 16;
RI_MOUSE_BUTTON_3_UP :: 32;
RI_MOUSE_BUTTON_4_DOWN :: 64;
RI_MOUSE_BUTTON_4_UP :: 128;
RI_MOUSE_BUTTON_5_DOWN :: 256;
RI_MOUSE_BUTTON_5_UP :: 512;
RI_MOUSE_HWHEEL :: 2048;
RI_MOUSE_LEFT_BUTTON_DOWN :: 1;
RI_MOUSE_LEFT_BUTTON_UP :: 2;
RI_MOUSE_MIDDLE_BUTTON_DOWN :: 16;
RI_MOUSE_MIDDLE_BUTTON_UP :: 32;
RI_MOUSE_RIGHT_BUTTON_DOWN :: 4;
RI_MOUSE_RIGHT_BUTTON_UP :: 8;
RI_MOUSE_WHEEL :: 1024;
RT_ACCELERATOR :: cast, no_check (PWSTR) 9;
RT_ANICURSOR :: cast, no_check (PWSTR) 21;
RT_ANIICON :: cast, no_check (PWSTR) 22;
RT_BITMAP :: cast, no_check (PWSTR) 2;
RT_CURSOR :: cast, no_check (PWSTR) 1;
RT_DIALOG :: cast, no_check (PWSTR) 5;
RT_DLGINCLUDE :: cast, no_check (PWSTR) 17;
RT_FONT :: cast, no_check (PWSTR) 8;
RT_FONTDIR :: cast, no_check (PWSTR) 7;
RT_HTML :: cast, no_check (PWSTR) 23;
RT_ICON :: cast, no_check (PWSTR) 3;
RT_MANIFEST :: 24;
RT_MENU :: cast, no_check (PWSTR) 4;
RT_MESSAGETABLE :: cast, no_check (PWSTR) 11;
RT_PLUGPLAY :: cast, no_check (PWSTR) 19;
RT_VERSION :: cast, no_check (PWSTR) 16;
RT_VXD :: cast, no_check (PWSTR) 20;
SBM_ENABLE_ARROWS :: 228;
SBM_GETPOS :: 225;
SBM_GETRANGE :: 227;
SBM_GETSCROLLBARINFO :: 235;
SBM_GETSCROLLINFO :: 234;
SBM_SETPOS :: 224;
SBM_SETRANGE :: 226;
SBM_SETRANGEREDRAW :: 230;
SBM_SETSCROLLINFO :: 233;
SBS_BOTTOMALIGN :: 4;
SBS_HORZ :: 0;
SBS_LEFTALIGN :: 2;
SBS_RIGHTALIGN :: 4;
SBS_SIZEBOX :: 8;
SBS_SIZEBOXBOTTOMRIGHTALIGN :: 4;
SBS_SIZEBOXTOPLEFTALIGN :: 2;
SBS_SIZEGRIP :: 16;
SBS_TOPALIGN :: 2;
SBS_VERT :: 1;
SB_BOTTOM :: 7;
SB_ENDSCROLL :: 8;
SB_LEFT :: 6;
SB_LINEDOWN :: 1;
SB_LINELEFT :: 0;
SB_LINERIGHT :: 1;
SB_LINEUP :: 0;
SB_PAGEDOWN :: 3;
SB_PAGELEFT :: 2;
SB_PAGERIGHT :: 3;
SB_PAGEUP :: 2;
SB_RIGHT :: 7;
SB_THUMBPOSITION :: 4;
SB_THUMBTRACK :: 5;
SB_TOP :: 6;
SCF_ISSECURE :: 1;
SC_ARRANGE :: 61712;
SC_CLOSE :: 61536;
SC_CONTEXTHELP :: 61824;
SC_DEFAULT :: 61792;
SC_HOTKEY :: 61776;
SC_HSCROLL :: 61568;
SC_ICON :: 61472;
SC_KEYMENU :: 61696;
SC_MAXIMIZE :: 61488;
SC_MINIMIZE :: 61472;
SC_MONITORPOWER :: 61808;
SC_MOUSEMENU :: 61584;
SC_MOVE :: 61456;
SC_NEXTWINDOW :: 61504;
SC_PREVWINDOW :: 61520;
SC_RESTORE :: 61728;
SC_SEPARATOR :: 61455;
SC_SIZE :: 61440;
SC_TASKLIST :: 61744;
SC_VSCROLL :: 61552;
SC_ZOOM :: 61488;
SHOW_FULLSCREEN :: 3;
SHOW_ICONWINDOW :: 2;
SHOW_OPENNOACTIVATE :: 4;
SHOW_OPENWINDOW :: 1;
SIZEFULLSCREEN :: 2;
SIZEICONIC :: 1;
SIZENORMAL :: 0;
SIZEZOOMHIDE :: 4;
SIZEZOOMSHOW :: 3;
SIZE_MAXHIDE :: 4;
SIZE_MAXIMIZED :: 2;
SIZE_MAXSHOW :: 3;
SIZE_MINIMIZED :: 1;
SIZE_RESTORED :: 0;
SM_CARETBLINKINGENABLED :: 8194;
SM_CMETRICS :: 76;
SM_RESERVED1 :: 24;
SM_RESERVED2 :: 25;
SM_RESERVED3 :: 26;
SM_RESERVED4 :: 27;
SM_SYSTEMDOCKED :: 8196;
SOUND_SYSTEM_APPEND :: 14;
SOUND_SYSTEM_APPSTART :: 12;
SOUND_SYSTEM_BEEP :: 3;
SOUND_SYSTEM_ERROR :: 4;
SOUND_SYSTEM_FAULT :: 13;
SOUND_SYSTEM_INFORMATION :: 7;
SOUND_SYSTEM_MAXIMIZE :: 8;
SOUND_SYSTEM_MENUCOMMAND :: 15;
SOUND_SYSTEM_MENUPOPUP :: 16;
SOUND_SYSTEM_MINIMIZE :: 9;
SOUND_SYSTEM_QUESTION :: 5;
SOUND_SYSTEM_RESTOREDOWN :: 11;
SOUND_SYSTEM_RESTOREUP :: 10;
SOUND_SYSTEM_SHUTDOWN :: 2;
SOUND_SYSTEM_STARTUP :: 1;
SOUND_SYSTEM_WARNING :: 6;
SS_BITMAP :: 14;
SS_BLACKFRAME :: 7;
SS_BLACKRECT :: 4;
SS_CENTER :: 1;
SS_CENTERIMAGE :: 512;
SS_EDITCONTROL :: 8192;
SS_ELLIPSISMASK :: 49152;
SS_ENDELLIPSIS :: 16384;
SS_ENHMETAFILE :: 15;
SS_ETCHEDFRAME :: 18;
SS_ETCHEDHORZ :: 16;
SS_ETCHEDVERT :: 17;
SS_GRAYFRAME :: 8;
SS_GRAYRECT :: 5;
SS_ICON :: 3;
SS_LEFT :: 0;
SS_LEFTNOWORDWRAP :: 12;
SS_NOPREFIX :: 128;
SS_NOTIFY :: 256;
SS_OWNERDRAW :: 13;
SS_PATHELLIPSIS :: 32768;
SS_REALSIZECONTROL :: 64;
SS_REALSIZEIMAGE :: 2048;
SS_RIGHT :: 2;
SS_RIGHTJUST :: 1024;
SS_SIMPLE :: 11;
SS_SUNKEN :: 4096;
SS_TYPEMASK :: 31;
SS_USERITEM :: 10;
SS_WHITEFRAME :: 9;
SS_WHITERECT :: 6;
SS_WORDELLIPSIS :: 49152;
STATE_SYSTEM_ALERT_HIGH :: 268435456;
STATE_SYSTEM_ALERT_LOW :: 67108864;
STATE_SYSTEM_ALERT_MEDIUM :: 134217728;
STATE_SYSTEM_ANIMATED :: 16384;
STATE_SYSTEM_BUSY :: 2048;
STATE_SYSTEM_CHECKED :: 16;
STATE_SYSTEM_COLLAPSED :: 1024;
STATE_SYSTEM_DEFAULT :: 256;
STATE_SYSTEM_EXPANDED :: 512;
STATE_SYSTEM_EXTSELECTABLE :: 33554432;
STATE_SYSTEM_FLOATING :: 4096;
STATE_SYSTEM_FOCUSED :: 4;
STATE_SYSTEM_HOTTRACKED :: 128;
STATE_SYSTEM_INDETERMINATE :: 32;
STATE_SYSTEM_LINKED :: 4194304;
STATE_SYSTEM_MARQUEED :: 8192;
STATE_SYSTEM_MIXED :: 32;
STATE_SYSTEM_MOVEABLE :: 262144;
STATE_SYSTEM_MULTISELECTABLE :: 16777216;
STATE_SYSTEM_PROTECTED :: 536870912;
STATE_SYSTEM_READONLY :: 64;
STATE_SYSTEM_SELECTABLE :: 2097152;
STATE_SYSTEM_SELECTED :: 2;
STATE_SYSTEM_SELFVOICING :: 524288;
STATE_SYSTEM_SIZEABLE :: 131072;
STATE_SYSTEM_TRAVERSED :: 8388608;
STATE_SYSTEM_VALID :: 1073741823;
STM_GETICON :: 369;
STM_GETIMAGE :: 371;
STM_MSGMAX :: 372;
STM_SETICON :: 368;
STM_SETIMAGE :: 370;
STN_CLICKED :: 0;
STN_DBLCLK :: 1;
STN_DISABLE :: 3;
STN_ENABLE :: 2;
STRSAFE_E_END_OF_FILE :: cast, no_check (HRESULT) -2147024858;
STRSAFE_E_INSUFFICIENT_BUFFER :: cast, no_check (HRESULT) -2147024774;
STRSAFE_E_INVALID_PARAMETER :: cast, no_check (HRESULT) -2147024809;
STRSAFE_FILL_BEHIND_NULL :: 512;
STRSAFE_FILL_ON_FAILURE :: 1024;
STRSAFE_IGNORE_NULLS :: 256;
STRSAFE_MAX_CCH :: 2147483647;
STRSAFE_NO_TRUNCATION :: 4096;
STRSAFE_NULL_ON_FAILURE :: 2048;
STRSAFE_USE_SECURE_CRT :: 0;
TIMERV_COALESCING_MAX :: 2147483637;
TIMERV_COALESCING_MIN :: 1;
TIMERV_DEFAULT_COALESCING :: 0;
TIMERV_NO_COALESCING :: 4294967295;
TKF_AVAILABLE :: 2;
TKF_CONFIRMHOTKEY :: 8;
TKF_HOTKEYACTIVE :: 4;
TKF_HOTKEYSOUND :: 16;
TKF_INDICATOR :: 32;
TKF_TOGGLEKEYSON :: 1;
TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY :: 8;
TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA :: 0.001;
TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA :: 0.99;
TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE :: 0.001;
TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX :: 0.999;
TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN :: 0.9;
TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME :: 8;
TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP :: 1;
TOUCH_FLAG_NONE :: 0;
TOUCH_HIT_TESTING_CLIENT :: 1;
TOUCH_HIT_TESTING_DEFAULT :: 0;
TOUCH_HIT_TESTING_NONE :: 2;
TOUCH_HIT_TESTING_PROXIMITY_CLOSEST :: 0;
TOUCH_HIT_TESTING_PROXIMITY_FARTHEST :: 4095;
TOUCH_MASK_CONTACTAREA :: 1;
TOUCH_MASK_NONE :: 0;
TOUCH_MASK_ORIENTATION :: 2;
TOUCH_MASK_PRESSURE :: 4;
UISF_ACTIVE :: 4;
UISF_HIDEACCEL :: 2;
UISF_HIDEFOCUS :: 1;
UIS_CLEAR :: 2;
UIS_INITIALIZE :: 3;
UIS_SET :: 1;
UNICODE_NOCHAR :: 65535;
UOI_TIMERPROC_EXCEPTION_SUPPRESSION :: 7;
USER_DEFAULT_SCREEN_DPI :: 96;
USER_TIMER_MAXIMUM :: 2147483647;
USER_TIMER_MINIMUM :: 10;
WA_ACTIVE :: 1;
WA_CLICKACTIVE :: 2;
WA_INACTIVE :: 0;
WHEEL_DELTA :: 120;
WH_HARDWARE :: 8;
WH_MAX :: 14;
WH_MAXHOOK :: 14;
WH_MIN :: -1;
WH_MINHOOK :: -1;
WINEVENT_INCONTEXT :: 4;
WINEVENT_OUTOFCONTEXT :: 0;
WINEVENT_SKIPOWNPROCESS :: 2;
WINEVENT_SKIPOWNTHREAD :: 1;
WINSTA_ACCESSCLIPBOARD :: 4;
WINSTA_ACCESSGLOBALATOMS :: 32;
WINSTA_CREATEDESKTOP :: 8;
WINSTA_ENUMDESKTOPS :: 1;
WINSTA_ENUMERATE :: 256;
WINSTA_EXITWINDOWS :: 64;
WINSTA_READATTRIBUTES :: 2;
WINSTA_READSCREEN :: 512;
WINSTA_WRITEATTRIBUTES :: 16;
WMSZ_BOTTOM :: 6;
WMSZ_BOTTOMLEFT :: 7;
WMSZ_BOTTOMRIGHT :: 8;
WMSZ_LEFT :: 1;
WMSZ_RIGHT :: 2;
WMSZ_TOP :: 3;
WMSZ_TOPLEFT :: 4;
WMSZ_TOPRIGHT :: 5;
WM_ACTIVATE :: 6;
WM_ACTIVATEAPP :: 28;
WM_ADSPROP_NOTIFY_APPLY :: 2128;
WM_ADSPROP_NOTIFY_CHANGE :: 2127;
WM_ADSPROP_NOTIFY_ERROR :: 2134;
WM_ADSPROP_NOTIFY_EXIT :: 2131;
WM_ADSPROP_NOTIFY_FOREGROUND :: 2130;
WM_ADSPROP_NOTIFY_PAGEHWND :: 2126;
WM_ADSPROP_NOTIFY_PAGEINIT :: 2125;
WM_ADSPROP_NOTIFY_SETFOCUS :: 2129;
WM_AFXFIRST :: 864;
WM_AFXLAST :: 895;
WM_APP :: 32768;
WM_APPCOMMAND :: 793;
WM_ASKCBFORMATNAME :: 780;
WM_CANCELJOURNAL :: 75;
WM_CANCELMODE :: 31;
WM_CAPTURECHANGED :: 533;
WM_CAP_ABORT :: 1093;
WM_CAP_DLG_VIDEOCOMPRESSION :: 1070;
WM_CAP_DLG_VIDEODISPLAY :: 1067;
WM_CAP_DLG_VIDEOFORMAT :: 1065;
WM_CAP_DLG_VIDEOSOURCE :: 1066;
WM_CAP_DRIVER_CONNECT :: 1034;
WM_CAP_DRIVER_DISCONNECT :: 1035;
WM_CAP_DRIVER_GET_CAPS :: 1038;
WM_CAP_DRIVER_GET_NAME :: 1136;
WM_CAP_DRIVER_GET_NAMEA :: 1036;
WM_CAP_DRIVER_GET_NAMEW :: 1136;
WM_CAP_DRIVER_GET_VERSION :: 1137;
WM_CAP_DRIVER_GET_VERSIONA :: 1037;
WM_CAP_DRIVER_GET_VERSIONW :: 1137;
WM_CAP_EDIT_COPY :: 1054;
WM_CAP_END :: 1205;
WM_CAP_FILE_ALLOCATE :: 1046;
WM_CAP_FILE_GET_CAPTURE_FILE :: 1145;
WM_CAP_FILE_GET_CAPTURE_FILEA :: 1045;
WM_CAP_FILE_GET_CAPTURE_FILEW :: 1145;
WM_CAP_FILE_SAVEAS :: 1147;
WM_CAP_FILE_SAVEASA :: 1047;
WM_CAP_FILE_SAVEASW :: 1147;
WM_CAP_FILE_SAVEDIB :: 1149;
WM_CAP_FILE_SAVEDIBA :: 1049;
WM_CAP_FILE_SAVEDIBW :: 1149;
WM_CAP_FILE_SET_CAPTURE_FILE :: 1144;
WM_CAP_FILE_SET_CAPTURE_FILEA :: 1044;
WM_CAP_FILE_SET_CAPTURE_FILEW :: 1144;
WM_CAP_FILE_SET_INFOCHUNK :: 1048;
WM_CAP_GET_AUDIOFORMAT :: 1060;
WM_CAP_GET_CAPSTREAMPTR :: 1025;
WM_CAP_GET_MCI_DEVICE :: 1191;
WM_CAP_GET_MCI_DEVICEA :: 1091;
WM_CAP_GET_MCI_DEVICEW :: 1191;
WM_CAP_GET_SEQUENCE_SETUP :: 1089;
WM_CAP_GET_STATUS :: 1078;
WM_CAP_GET_USER_DATA :: 1032;
WM_CAP_GET_VIDEOFORMAT :: 1068;
WM_CAP_GRAB_FRAME :: 1084;
WM_CAP_GRAB_FRAME_NOSTOP :: 1085;
WM_CAP_PAL_AUTOCREATE :: 1107;
WM_CAP_PAL_MANUALCREATE :: 1108;
WM_CAP_PAL_OPEN :: 1204;
WM_CAP_PAL_OPENA :: 1104;
WM_CAP_PAL_OPENW :: 1204;
WM_CAP_PAL_PASTE :: 1106;
WM_CAP_PAL_SAVE :: 1205;
WM_CAP_PAL_SAVEA :: 1105;
WM_CAP_PAL_SAVEW :: 1205;
WM_CAP_SEQUENCE :: 1086;
WM_CAP_SEQUENCE_NOFILE :: 1087;
WM_CAP_SET_AUDIOFORMAT :: 1059;
WM_CAP_SET_CALLBACK_CAPCONTROL :: 1109;
WM_CAP_SET_CALLBACK_ERROR :: 1126;
WM_CAP_SET_CALLBACK_ERRORA :: 1026;
WM_CAP_SET_CALLBACK_ERRORW :: 1126;
WM_CAP_SET_CALLBACK_FRAME :: 1029;
WM_CAP_SET_CALLBACK_STATUS :: 1127;
WM_CAP_SET_CALLBACK_STATUSA :: 1027;
WM_CAP_SET_CALLBACK_STATUSW :: 1127;
WM_CAP_SET_CALLBACK_VIDEOSTREAM :: 1030;
WM_CAP_SET_CALLBACK_WAVESTREAM :: 1031;
WM_CAP_SET_CALLBACK_YIELD :: 1028;
WM_CAP_SET_MCI_DEVICE :: 1190;
WM_CAP_SET_MCI_DEVICEA :: 1090;
WM_CAP_SET_MCI_DEVICEW :: 1190;
WM_CAP_SET_OVERLAY :: 1075;
WM_CAP_SET_PREVIEW :: 1074;
WM_CAP_SET_PREVIEWRATE :: 1076;
WM_CAP_SET_SCALE :: 1077;
WM_CAP_SET_SCROLL :: 1079;
WM_CAP_SET_SEQUENCE_SETUP :: 1088;
WM_CAP_SET_USER_DATA :: 1033;
WM_CAP_SET_VIDEOFORMAT :: 1069;
WM_CAP_SINGLE_FRAME :: 1096;
WM_CAP_SINGLE_FRAME_CLOSE :: 1095;
WM_CAP_SINGLE_FRAME_OPEN :: 1094;
WM_CAP_START :: 1024;
WM_CAP_STOP :: 1092;
WM_CAP_UNICODE_END :: 1205;
WM_CAP_UNICODE_START :: 1124;
WM_CHANGECBCHAIN :: 781;
WM_CHANGEUISTATE :: 295;
WM_CHAR :: 258;
WM_CHARTOITEM :: 47;
WM_CHILDACTIVATE :: 34;
WM_CHOOSEFONT_GETLOGFONT :: 1025;
WM_CHOOSEFONT_SETFLAGS :: 1126;
WM_CHOOSEFONT_SETLOGFONT :: 1125;
WM_CLEAR :: 771;
WM_CLIPBOARDUPDATE :: 797;
WM_CLOSE :: 16;
WM_CL_INTERLACED420 :: 0;
WM_CL_PROGRESSIVE420 :: 1;
WM_CODEC_ONEPASS_CBR :: 1;
WM_CODEC_ONEPASS_VBR :: 2;
WM_CODEC_TWOPASS_CBR :: 4;
WM_CODEC_TWOPASS_VBR_PEAKCONSTRAINED :: 16;
WM_CODEC_TWOPASS_VBR_UNCONSTRAINED :: 8;
WM_COMMAND :: 273;
WM_COMMNOTIFY :: 68;
WM_COMPACTING :: 65;
WM_COMPAREITEM :: 57;
WM_CONTEXTMENU :: 123;
WM_CONVERTREQUEST :: 266;
WM_CONVERTRESULT :: 267;
WM_COPY :: 769;
WM_COPYDATA :: 74;
WM_CPL_LAUNCH :: 2024;
WM_CPL_LAUNCHED :: 2025;
WM_CREATE :: 1;
WM_CTLCOLOR :: 25;
WM_CTLCOLORBTN :: 309;
WM_CTLCOLORDLG :: 310;
WM_CTLCOLOREDIT :: 307;
WM_CTLCOLORLISTBOX :: 308;
WM_CTLCOLORMSGBOX :: 306;
WM_CTLCOLORSCROLLBAR :: 311;
WM_CTLCOLORSTATIC :: 312;
WM_CT_BOTTOM_FIELD_FIRST :: 32;
WM_CT_INTERLACED :: 128;
WM_CT_REPEAT_FIRST_FIELD :: 16;
WM_CT_TOP_FIELD_FIRST :: 64;
WM_CUT :: 768;
WM_DDE_ACK :: 996;
WM_DDE_ADVISE :: 994;
WM_DDE_DATA :: 997;
WM_DDE_EXECUTE :: 1000;
WM_DDE_FIRST :: 992;
WM_DDE_INITIATE :: 992;
WM_DDE_LAST :: 1000;
WM_DDE_POKE :: 999;
WM_DDE_REQUEST :: 998;
WM_DDE_TERMINATE :: 993;
WM_DDE_UNADVISE :: 995;
WM_DEADCHAR :: 259;
WM_DELETEITEM :: 45;
WM_DESTROY :: 2;
WM_DESTROYCLIPBOARD :: 775;
WM_DEVICECHANGE :: 537;
WM_DEVMODECHANGE :: 27;
WM_DISPLAYCHANGE :: 126;
WM_DPICHANGED :: 736;
WM_DPICHANGED_AFTERPARENT :: 739;
WM_DPICHANGED_BEFOREPARENT :: 738;
WM_DRAWCLIPBOARD :: 776;
WM_DRAWITEM :: 43;
WM_DROPFILES :: 563;
WM_DWMCOLORIZATIONCOLORCHANGED :: 800;
WM_DWMCOMPOSITIONCHANGED :: 798;
WM_DWMNCRENDERINGCHANGED :: 799;
WM_DWMSENDICONICLIVEPREVIEWBITMAP :: 806;
WM_DWMSENDICONICTHUMBNAIL :: 803;
WM_DWMWINDOWMAXIMIZEDCHANGE :: 801;
WM_ENABLE :: 10;
WM_ENDSESSION :: 22;
WM_ENTERIDLE :: 289;
WM_ENTERMENULOOP :: 529;
WM_ENTERSIZEMOVE :: 561;
WM_ERASEBKGND :: 20;
WM_EXITMENULOOP :: 530;
WM_EXITSIZEMOVE :: 562;
WM_FI_FILENAME :: 900;
WM_FONTCHANGE :: 29;
WM_GESTURE :: 281;
WM_GESTURENOTIFY :: 282;
WM_GETDLGCODE :: 135;
WM_GETDPISCALEDSIZE :: 740;
WM_GETFONT :: 49;
WM_GETHOTKEY :: 51;
WM_GETICON :: 127;
WM_GETMINMAXINFO :: 36;
WM_GETOBJECT :: 61;
WM_GETTEXT :: 13;
WM_GETTEXTLENGTH :: 14;
WM_GETTITLEBARINFOEX :: 831;
WM_HANDHELDFIRST :: 856;
WM_HANDHELDLAST :: 863;
WM_HELP :: 83;
WM_HOTKEY :: 786;
WM_HSCROLL :: 276;
WM_HSCROLLCLIPBOARD :: 782;
WM_ICONERASEBKGND :: 39;
WM_IMEKEYDOWN :: 656;
WM_IMEKEYUP :: 657;
WM_IME_CHAR :: 646;
WM_IME_COMPOSITION :: 271;
WM_IME_COMPOSITIONFULL :: 644;
WM_IME_CONTROL :: 643;
WM_IME_ENDCOMPOSITION :: 270;
WM_IME_KEYDOWN :: 656;
WM_IME_KEYLAST :: 271;
WM_IME_KEYUP :: 657;
WM_IME_NOTIFY :: 642;
WM_IME_REPORT :: 640;
WM_IME_REQUEST :: 648;
WM_IME_SELECT :: 645;
WM_IME_SETCONTEXT :: 641;
WM_IME_STARTCOMPOSITION :: 269;
WM_INITDIALOG :: 272;
WM_INITMENU :: 278;
WM_INITMENUPOPUP :: 279;
WM_INPUT :: 255;
WM_INPUTLANGCHANGE :: 81;
WM_INPUTLANGCHANGEREQUEST :: 80;
WM_INPUT_DEVICE_CHANGE :: 254;
WM_INTERIM :: 268;
WM_KEYDOWN :: 256;
WM_KEYFIRST :: 256;
WM_KEYLAST :: 265;
WM_KEYUP :: 257;
WM_KILLFOCUS :: 8;
WM_LBUTTONDBLCLK :: 515;
WM_LBUTTONDOWN :: 513;
WM_LBUTTONUP :: 514;
WM_MAX_STREAMS :: 63;
WM_MAX_VIDEO_STREAMS :: 63;
WM_MBUTTONDBLCLK :: 521;
WM_MBUTTONDOWN :: 519;
WM_MBUTTONUP :: 520;
WM_MDIACTIVATE :: 546;
WM_MDICASCADE :: 551;
WM_MDICREATE :: 544;
WM_MDIDESTROY :: 545;
WM_MDIGETACTIVE :: 553;
WM_MDIICONARRANGE :: 552;
WM_MDIMAXIMIZE :: 549;
WM_MDINEXT :: 548;
WM_MDIREFRESHMENU :: 564;
WM_MDIRESTORE :: 547;
WM_MDISETMENU :: 560;
WM_MDITILE :: 550;
WM_MEASUREITEM :: 44;
WM_MENUCHAR :: 288;
WM_MENUCOMMAND :: 294;
WM_MENUDRAG :: 291;
WM_MENUGETOBJECT :: 292;
WM_MENURBUTTONUP :: 290;
WM_MENUSELECT :: 287;
WM_MOUSEACTIVATE :: 33;
WM_MOUSEFIRST :: 512;
WM_MOUSEHOVER :: 673;
WM_MOUSEHWHEEL :: 526;
WM_MOUSELAST :: 526;
WM_MOUSELEAVE :: 675;
WM_MOUSEMOVE :: 512;
WM_MOUSEWHEEL :: 522;
WM_MOVE :: 3;
WM_MOVING :: 534;
WM_NCACTIVATE :: 134;
WM_NCCALCSIZE :: 131;
WM_NCCREATE :: 129;
WM_NCDESTROY :: 130;
WM_NCHITTEST :: 132;
WM_NCLBUTTONDBLCLK :: 163;
WM_NCLBUTTONDOWN :: 161;
WM_NCLBUTTONUP :: 162;
WM_NCMBUTTONDBLCLK :: 169;
WM_NCMBUTTONDOWN :: 167;
WM_NCMBUTTONUP :: 168;
WM_NCMOUSEHOVER :: 672;
WM_NCMOUSELEAVE :: 674;
WM_NCMOUSEMOVE :: 160;
WM_NCPAINT :: 133;
WM_NCPOINTERDOWN :: 578;
WM_NCPOINTERUP :: 579;
WM_NCPOINTERUPDATE :: 577;
WM_NCRBUTTONDBLCLK :: 166;
WM_NCRBUTTONDOWN :: 164;
WM_NCRBUTTONUP :: 165;
WM_NCXBUTTONDBLCLK :: 173;
WM_NCXBUTTONDOWN :: 171;
WM_NCXBUTTONUP :: 172;
WM_NEXTDLGCTL :: 40;
WM_NEXTMENU :: 531;
WM_NOTIFY :: 78;
WM_NOTIFYFORMAT :: 85;
WM_NULL :: 0;
WM_PAINT :: 15;
WM_PAINTCLIPBOARD :: 777;
WM_PAINTICON :: 38;
WM_PALETTECHANGED :: 785;
WM_PALETTEISCHANGING :: 784;
WM_PARENTNOTIFY :: 528;
WM_PASTE :: 770;
WM_PENWINFIRST :: 896;
WM_PENWINLAST :: 911;
WM_POINTERACTIVATE :: 587;
WM_POINTERCAPTURECHANGED :: 588;
WM_POINTERDEVICECHANGE :: 568;
WM_POINTERDEVICEINRANGE :: 569;
WM_POINTERDEVICEOUTOFRANGE :: 570;
WM_POINTERDOWN :: 582;
WM_POINTERENTER :: 585;
WM_POINTERHWHEEL :: 591;
WM_POINTERLEAVE :: 586;
WM_POINTERROUTEDAWAY :: 594;
WM_POINTERROUTEDRELEASED :: 595;
WM_POINTERROUTEDTO :: 593;
WM_POINTERUP :: 583;
WM_POINTERUPDATE :: 581;
WM_POINTERWHEEL :: 590;
WM_POWER :: 72;
WM_POWERBROADCAST :: 536;
WM_PRINT :: 791;
WM_PRINTCLIENT :: 792;
WM_PSD_ENVSTAMPRECT :: 1029;
WM_PSD_FULLPAGERECT :: 1025;
WM_PSD_GREEKTEXTRECT :: 1028;
WM_PSD_MARGINRECT :: 1027;
WM_PSD_MINMARGINRECT :: 1026;
WM_PSD_YAFULLPAGERECT :: 1030;
WM_QUERYDRAGICON :: 55;
WM_QUERYENDSESSION :: 17;
WM_QUERYNEWPALETTE :: 783;
WM_QUERYOPEN :: 19;
WM_QUERYUISTATE :: 297;
WM_QUEUESYNC :: 35;
WM_QUIT :: 18;
WM_RASDIALEVENT :: 52429;
WM_RBUTTONDBLCLK :: 518;
WM_RBUTTONDOWN :: 516;
WM_RBUTTONUP :: 517;
WM_RENDERALLFORMATS :: 774;
WM_RENDERFORMAT :: 773;
WM_SETCURSOR :: 32;
WM_SETFOCUS :: 7;
WM_SETFONT :: 48;
WM_SETHOTKEY :: 50;
WM_SETICON :: 128;
WM_SETREDRAW :: 11;
WM_SETTEXT :: 12;
WM_SETTINGCHANGE :: 26;
WM_SHOWWINDOW :: 24;
WM_SIZE :: 5;
WM_SIZECLIPBOARD :: 779;
WM_SIZING :: 532;
WM_SPOOLERSTATUS :: 42;
WM_STYLECHANGED :: 125;
WM_STYLECHANGING :: 124;
WM_SYNCPAINT :: 136;
WM_SYSCHAR :: 262;
WM_SYSCOLORCHANGE :: 21;
WM_SYSCOMMAND :: 274;
WM_SYSDEADCHAR :: 263;
WM_SYSKEYDOWN :: 260;
WM_SYSKEYUP :: 261;
WM_SampleExtensionGUID_ChromaLocation :: "4c5acca0-9276-4b2c-9e4c-a0edefdd217e";
WM_SampleExtensionGUID_ColorSpaceInfo :: "f79ada56-30eb-4f2b-9f7a-f24b139a1157";
WM_SampleExtensionGUID_ContentType :: "d590dc20-07bc-436c-9cf7-f3bbfbf1a4dc";
WM_SampleExtensionGUID_FileName :: "e165ec0e-19ed-45d7-b4a7-25cbd1e28e9b";
WM_SampleExtensionGUID_OutputCleanPoint :: "f72a3c6f-6eb4-4ebc-b192-09ad9759e828";
WM_SampleExtensionGUID_PixelAspectRatio :: "1b1ee554-f9ea-4bc8-821a-376b74e4c4b8";
WM_SampleExtensionGUID_SampleDuration :: "c6bd9450-867f-4907-83a3-c77921b733ad";
WM_SampleExtensionGUID_SampleProtectionSalt :: "5403deee-b9ee-438f-aa83-3804997e569d";
WM_SampleExtensionGUID_Timecode :: "399595ec-8667-4e2d-8fdb-98814ce76c1e";
WM_SampleExtensionGUID_UserDataInfo :: "732bb4fa-78be-4549-99bd-02db1a55b7a8";
WM_SampleExtension_ChromaLocation_Size :: 1;
WM_SampleExtension_ColorSpaceInfo_Size :: 3;
WM_SampleExtension_ContentType_Size :: 1;
WM_SampleExtension_PixelAspectRatio_Size :: 2;
WM_SampleExtension_SampleDuration_Size :: 2;
WM_SampleExtension_Timecode_Size :: 14;
WM_TABLET_ADDED :: 712;
WM_TABLET_DEFBASE :: 704;
WM_TABLET_DELETED :: 713;
WM_TABLET_FIRST :: 704;
WM_TABLET_FLICK :: 715;
WM_TABLET_LAST :: 735;
WM_TABLET_MAXOFFSET :: 32;
WM_TABLET_QUERYSYSTEMGESTURESTATUS :: 716;
WM_TCARD :: 82;
WM_THEMECHANGED :: 794;
WM_TIMECHANGE :: 30;
WM_TIMER :: 275;
WM_TOUCH :: 576;
WM_TOUCHHITTESTING :: 589;
WM_UNDO :: 772;
WM_UNICHAR :: 265;
WM_UNINITMENUPOPUP :: 293;
WM_UPDATEUISTATE :: 296;
WM_USER :: 1024;
WM_USERCHANGED :: 84;
WM_VKEYTOITEM :: 46;
WM_VSCROLL :: 277;
WM_VSCROLLCLIPBOARD :: 778;
WM_WINDOWPOSCHANGED :: 71;
WM_WINDOWPOSCHANGING :: 70;
WM_WININICHANGE :: 26;
WM_WNT_CONVERTREQUESTEX :: 265;
WM_WTSSESSION_CHANGE :: 689;
WM_XBUTTONDBLCLK :: 525;
WM_XBUTTONDOWN :: 523;
WM_XBUTTONUP :: 524;
WSF_VISIBLE :: 1;
WTS_CONSOLE_CONNECT :: 1;
WTS_CONSOLE_DISCONNECT :: 2;
WTS_REMOTE_CONNECT :: 3;
WTS_REMOTE_DISCONNECT :: 4;
WTS_SESSION_CREATE :: 10;
WTS_SESSION_LOCK :: 7;
WTS_SESSION_LOGOFF :: 6;
WTS_SESSION_LOGON :: 5;
WTS_SESSION_REMOTE_CONTROL :: 9;
WTS_SESSION_TERMINATE :: 11;
WTS_SESSION_UNLOCK :: 8;
WVR_ALIGNBOTTOM :: 64;
WVR_ALIGNLEFT :: 32;
WVR_ALIGNRIGHT :: 128;
WVR_ALIGNTOP :: 16;
WVR_HREDRAW :: 256;
WVR_VALIDRECTS :: 1024;
WVR_VREDRAW :: 512;
__WARNING_BANNED_API_USAGE :: 28719;
__WARNING_CYCLOMATIC_COMPLEXITY :: 28734;
__WARNING_DEREF_NULL_PTR :: 6011;
__WARNING_HIGH_PRIORITY_OVERFLOW_POSTCONDITION :: 26045;
__WARNING_INCORRECT_ANNOTATION :: 26007;
__WARNING_INVALID_PARAM_VALUE_1 :: 6387;
__WARNING_INVALID_PARAM_VALUE_3 :: 28183;
__WARNING_MISSING_ZERO_TERMINATION2 :: 6054;
__WARNING_POSTCONDITION_NULLTERMINATION_VIOLATION :: 26036;
__WARNING_POST_EXPECTED :: 28210;
__WARNING_POTENTIAL_BUFFER_OVERFLOW_HIGH_PRIORITY :: 26015;
__WARNING_POTENTIAL_RANGE_POSTCONDITION_VIOLATION :: 26071;
__WARNING_PRECONDITION_NULLTERMINATION_VIOLATION :: 26035;
__WARNING_RANGE_POSTCONDITION_VIOLATION :: 26061;
__WARNING_RETURNING_BAD_RESULT :: 28196;
__WARNING_RETURN_UNINIT_VAR :: 6101;
__WARNING_USING_UNINIT_VAR :: 6001;

// Types

ACCEL :: struct
{
    fVirt : u8;
    key : u16;
    cmd : u16;
}

ALTTABINFO :: struct
{
    cbSize : u32;
    cItems : s32;
    cColumns : s32;
    cRows : s32;
    iColFocus : s32;
    iRowFocus : s32;
    cxItem : s32;
    cyItem : s32;
    ptStart : POINT;
}

ANIMATE_WINDOW_FLAGS :: enum_flags u32
{
    AW_ACTIVATE :: 131072;
    AW_BLEND :: 524288;
    AW_CENTER :: 16;
    AW_HIDE :: 65536;
    AW_HOR_POSITIVE :: 1;
    AW_HOR_NEGATIVE :: 2;
    AW_SLIDE :: 262144;
    AW_VER_POSITIVE :: 4;
    AW_VER_NEGATIVE :: 8;
}

AW_ACTIVATE :: 131072;
AW_BLEND :: 524288;
AW_CENTER :: 16;
AW_HIDE :: 65536;
AW_HOR_POSITIVE :: 1;
AW_HOR_NEGATIVE :: 2;
AW_SLIDE :: 262144;
AW_VER_POSITIVE :: 4;
AW_VER_NEGATIVE :: 8;

ANIMATIONINFO :: struct
{
    cbSize : u32;
    iMinAnimate : s32;
}

AUDIODESCRIPTION :: struct
{
    cbSize : u32;
    Enabled : BOOL;
    Locale : u32;
}

CASCADE_WINDOWS_HOW :: enum_flags u32
{
    MDITILE_SKIPDISABLED :: 2;
    MDITILE_ZORDER :: 4;
}

MDITILE_SKIPDISABLED :: 2;
MDITILE_ZORDER :: 4;

CBTACTIVATESTRUCT :: struct
{
    fMouse : BOOL;
    hWndActive : HWND;
}

CBT_CREATEWNDA :: struct
{
    lpcs : *CREATESTRUCTA;
    hwndInsertAfter : HWND;
}

CBT_CREATEWNDW :: struct
{
    lpcs : *CREATESTRUCTW;
    hwndInsertAfter : HWND;
}

CHANGEFILTERSTRUCT :: struct
{
    cbSize : u32;
    ExtStatus : MSGFLTINFO_STATUS;
}

CHANGE_WINDOW_MESSAGE_FILTER_FLAGS :: enum u32
{
    MSGFLT_ADD :: 1;
    MSGFLT_REMOVE :: 2;
}

MSGFLT_ADD :: 1;
MSGFLT_REMOVE :: 2;

CLIENTCREATESTRUCT :: struct
{
    hWindowMenu : HANDLE;
    idFirstChild : u32;
}

CLIPBOARD_FORMATS :: enum u32
{
    CF_TEXT :: 1;
    CF_BITMAP :: 2;
    CF_METAFILEPICT :: 3;
    CF_SYLK :: 4;
    CF_DIF :: 5;
    CF_TIFF :: 6;
    CF_OEMTEXT :: 7;
    CF_DIB :: 8;
    CF_PALETTE :: 9;
    CF_PENDATA :: 10;
    CF_RIFF :: 11;
    CF_WAVE :: 12;
    CF_UNICODETEXT :: 13;
    CF_ENHMETAFILE :: 14;
    CF_HDROP :: 15;
    CF_LOCALE :: 16;
    CF_DIBV5 :: 17;
    CF_MAX :: 18;
    CF_OWNERDISPLAY :: 128;
    CF_DSPTEXT :: 129;
    CF_DSPBITMAP :: 130;
    CF_DSPMETAFILEPICT :: 131;
    CF_DSPENHMETAFILE :: 142;
    CF_PRIVATEFIRST :: 512;
    CF_PRIVATELAST :: 767;
    CF_GDIOBJFIRST :: 768;
    CF_GDIOBJLAST :: 1023;
}

CF_TEXT :: 1;
CF_BITMAP :: 2;
CF_METAFILEPICT :: 3;
CF_SYLK :: 4;
CF_DIF :: 5;
CF_TIFF :: 6;
CF_OEMTEXT :: 7;
CF_DIB :: 8;
CF_PALETTE :: 9;
CF_PENDATA :: 10;
CF_RIFF :: 11;
CF_WAVE :: 12;
CF_UNICODETEXT :: 13;
CF_ENHMETAFILE :: 14;
CF_HDROP :: 15;
CF_LOCALE :: 16;
CF_DIBV5 :: 17;
CF_MAX :: 18;
CF_OWNERDISPLAY :: 128;
CF_DSPTEXT :: 129;
CF_DSPBITMAP :: 130;
CF_DSPMETAFILEPICT :: 131;
CF_DSPENHMETAFILE :: 142;
CF_PRIVATEFIRST :: 512;
CF_PRIVATELAST :: 767;
CF_GDIOBJFIRST :: 768;
CF_GDIOBJLAST :: 1023;

CREATESTRUCTA :: struct
{
    lpCreateParams : *void;
    hInstance : HINSTANCE;
    hMenu : HMENU;
    hwndParent : HWND;
    cy : s32;
    cx : s32;
    y : s32;
    x : s32;
    style : s32;
    lpszName : PSTR; // Const
    lpszClass : PSTR; // Const
    dwExStyle : u32;
}

CREATESTRUCTW :: struct
{
    lpCreateParams : *void;
    hInstance : HINSTANCE;
    hMenu : HMENU;
    hwndParent : HWND;
    cy : s32;
    cx : s32;
    y : s32;
    x : s32;
    style : s32;
    lpszName : PWSTR; // Const
    lpszClass : PWSTR; // Const
    dwExStyle : u32;
}

CURSORINFO :: struct
{
    cbSize : u32;
    flags : CURSORINFO_FLAGS;
    hCursor : HCURSOR;
    ptScreenPos : POINT;
}

CURSORINFO_FLAGS :: enum u32
{
    CURSOR_SHOWING :: 1;
    CURSOR_SUPPRESSED :: 2;
}

CURSOR_SHOWING :: 1;
CURSOR_SUPPRESSED :: 2;

CURSORSHAPE :: struct
{
    xHotSpot : s32;
    yHotSpot : s32;
    cx : s32;
    cy : s32;
    cbWidth : s32;
    Planes : u8;
    BitsPixel : u8;
}

CWPRETSTRUCT :: struct
{
    lResult : LRESULT;
    lParam : LPARAM;
    wParam : WPARAM;
    message : u32;
    hwnd : HWND;
}

CWPSTRUCT :: struct
{
    lParam : LPARAM;
    wParam : WPARAM;
    message : u32;
    hwnd : HWND;
}

CWP_FLAGS :: enum_flags u32
{
    ALL :: 0;
    SKIPINVISIBLE :: 1;
    SKIPDISABLED :: 2;
    SKIPTRANSPARENT :: 4;
}

CWP_ALL :: 0;
CWP_SKIPINVISIBLE :: 1;
CWP_SKIPDISABLED :: 2;
CWP_SKIPTRANSPARENT :: 4;

DEBUGHOOKINFO :: struct
{
    idThread : u32;
    idThreadInstaller : u32;
    lParam : LPARAM;
    wParam : WPARAM;
    code : s32;
}

DI_FLAGS :: enum_flags u32
{
    MASK :: 1;
    IMAGE :: 2;
    NORMAL :: 3;
    COMPAT :: 4;
    DEFAULTSIZE :: 8;
    NOMIRROR :: 16;
}

DI_MASK :: 1;
DI_IMAGE :: 2;
DI_NORMAL :: 3;
DI_COMPAT :: 4;
DI_DEFAULTSIZE :: 8;
DI_NOMIRROR :: 16;

DLGITEMTEMPLATE :: struct
{
    style : u32 #align 2;
    dwExtendedStyle : u32 #align 2;
    x : s16 #align 2;
    y : s16 #align 2;
    cx : s16 #align 2;
    cy : s16 #align 2;
    id : u16 #align 2;
} #no_padding

DLGPROC :: #type (param0 : HWND, param1 : u32, param2 : WPARAM, param3 : LPARAM) -> s64 #c_call;

DLGTEMPLATE :: struct
{
    style : u32 #align 2;
    dwExtendedStyle : u32 #align 2;
    cdit : u16 #align 2;
    x : s16 #align 2;
    y : s16 #align 2;
    cx : s16 #align 2;
    cy : s16 #align 2;
} #no_padding

DROPSTRUCT :: struct
{
    hwndSource : HWND;
    hwndSink : HWND;
    wFmt : u32;
    dwData : u64;
    ptDrop : POINT;
    dwControlData : u32;
}

EDIT_CONTROL_FEATURE :: enum s32
{
    ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT :: 0;
    PASTE_NOTIFICATIONS :: 1;
}

EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT :: 0;
EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS :: 1;

EVENTMSG :: struct
{
    message : u32;
    paramL : u32;
    paramH : u32;
    time : u32;
    hwnd : HWND;
}

FLASHWINFO :: struct
{
    cbSize : u32;
    hwnd : HWND;
    dwFlags : FLASHWINFO_FLAGS;
    uCount : u32;
    dwTimeout : u32;
}

FLASHWINFO_FLAGS :: enum_flags u32
{
    FLASHW_ALL :: 3;
    FLASHW_CAPTION :: 1;
    FLASHW_STOP :: 0;
    FLASHW_TIMER :: 4;
    FLASHW_TIMERNOFG :: 12;
    FLASHW_TRAY :: 2;
}

FLASHW_ALL :: 3;
FLASHW_CAPTION :: 1;
FLASHW_STOP :: 0;
FLASHW_TIMER :: 4;
FLASHW_TIMERNOFG :: 12;
FLASHW_TRAY :: 2;

FOREGROUND_WINDOW_LOCK_CODE :: enum u32
{
    LSFW_LOCK :: 1;
    LSFW_UNLOCK :: 2;
}

LSFW_LOCK :: 1;
LSFW_UNLOCK :: 2;

GDI_IMAGE_TYPE :: enum u32
{
    IMAGE_BITMAP :: 0;
    IMAGE_CURSOR :: 2;
    IMAGE_ICON :: 1;
}

IMAGE_BITMAP :: 0;
IMAGE_CURSOR :: 2;
IMAGE_ICON :: 1;

GET_ANCESTOR_FLAGS :: enum u32
{
    GA_PARENT :: 1;
    GA_ROOT :: 2;
    GA_ROOTOWNER :: 3;
}

GA_PARENT :: 1;
GA_ROOT :: 2;
GA_ROOTOWNER :: 3;

GET_CLASS_LONG_INDEX :: enum s32
{
    GCW_ATOM :: -32;
    GCL_CBCLSEXTRA :: -20;
    GCL_CBWNDEXTRA :: -18;
    GCL_HBRBACKGROUND :: -10;
    GCL_HCURSOR :: -12;
    GCL_HICON :: -14;
    GCL_HICONSM :: -34;
    GCL_HMODULE :: -16;
    GCL_MENUNAME :: -8;
    GCL_STYLE :: -26;
    GCL_WNDPROC :: -24;
    GCLP_HBRBACKGROUND :: -10;
    GCLP_HCURSOR :: -12;
    GCLP_HICON :: -14;
    GCLP_HICONSM :: -34;
    GCLP_HMODULE :: -16;
    GCLP_MENUNAME :: -8;
    GCLP_WNDPROC :: -24;
}

GCW_ATOM :: -32;
GCL_CBCLSEXTRA :: -20;
GCL_CBWNDEXTRA :: -18;
GCL_HBRBACKGROUND :: -10;
GCL_HCURSOR :: -12;
GCL_HICON :: -14;
GCL_HICONSM :: -34;
GCL_HMODULE :: -16;
GCL_MENUNAME :: -8;
GCL_STYLE :: -26;
GCL_WNDPROC :: -24;
GCLP_HBRBACKGROUND :: -10;
GCLP_HCURSOR :: -12;
GCLP_HICON :: -14;
GCLP_HICONSM :: -34;
GCLP_HMODULE :: -16;
GCLP_MENUNAME :: -8;
GCLP_WNDPROC :: -24;

GET_MENU_DEFAULT_ITEM_FLAGS :: enum_flags u32
{
    GMDI_GOINTOPOPUPS :: 2;
    GMDI_USEDISABLED :: 1;
}

GMDI_GOINTOPOPUPS :: 2;
GMDI_USEDISABLED :: 1;

GET_WINDOW_CMD :: enum u32
{
    GW_CHILD :: 5;
    GW_ENABLEDPOPUP :: 6;
    GW_HWNDFIRST :: 0;
    GW_HWNDLAST :: 1;
    GW_HWNDNEXT :: 2;
    GW_HWNDPREV :: 3;
    GW_OWNER :: 4;
}

GW_CHILD :: 5;
GW_ENABLEDPOPUP :: 6;
GW_HWNDFIRST :: 0;
GW_HWNDLAST :: 1;
GW_HWNDNEXT :: 2;
GW_HWNDPREV :: 3;
GW_OWNER :: 4;

GUITHREADINFO :: struct
{
    cbSize : u32;
    flags : GUITHREADINFO_FLAGS;
    hwndActive : HWND;
    hwndFocus : HWND;
    hwndCapture : HWND;
    hwndMenuOwner : HWND;
    hwndMoveSize : HWND;
    hwndCaret : HWND;
    rcCaret : RECT;
}

GUITHREADINFO_FLAGS :: enum_flags u32
{
    GUI_CARETBLINKING :: 1;
    GUI_INMENUMODE :: 4;
    GUI_INMOVESIZE :: 2;
    GUI_POPUPMENUMODE :: 16;
    GUI_SYSTEMMENUMODE :: 8;
}

GUI_CARETBLINKING :: 1;
GUI_INMENUMODE :: 4;
GUI_INMOVESIZE :: 2;
GUI_POPUPMENUMODE :: 16;
GUI_SYSTEMMENUMODE :: 8;

HACCEL :: *void;

HANDEDNESS :: enum s32
{
    LEFT :: 0;
    RIGHT :: 1;
}

HANDEDNESS_LEFT :: 0;
HANDEDNESS_RIGHT :: 1;

HARDWAREHOOKSTRUCT :: struct
{
    hwnd : HWND;
    message : u32;
    wParam : WPARAM;
    lParam : LPARAM;
}

HCURSOR :: *void;

HELPINFO :: struct
{
    cbSize : u32;
    iContextType : s32;
    iCtrlId : s32;
    hItemHandle : HANDLE;
    dwContextId : u64;
    MousePos : POINT;
}

HHOOK :: *void;

HICON :: *void;

HMENU :: *void;

HOOKPROC :: #type (code : s32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #c_call;

ICONINFO :: struct
{
    fIcon : BOOL;
    xHotspot : u32;
    yHotspot : u32;
    hbmMask : HBITMAP;
    hbmColor : HBITMAP;
}

ICONINFOEXA :: struct
{
    cbSize : u32;
    fIcon : BOOL;
    xHotspot : u32;
    yHotspot : u32;
    hbmMask : HBITMAP;
    hbmColor : HBITMAP;
    wResID : u16;
    szModName : [260]CHAR;
    szResName : [260]CHAR;
}

ICONINFOEXW :: struct
{
    cbSize : u32;
    fIcon : BOOL;
    xHotspot : u32;
    yHotspot : u32;
    hbmMask : HBITMAP;
    hbmColor : HBITMAP;
    wResID : u16;
    szModName : [260]u16;
    szResName : [260]u16;
}

ICONMETRICSA :: struct
{
    cbSize : u32;
    iHorzSpacing : s32;
    iVertSpacing : s32;
    iTitleWrap : s32;
    lfFont : LOGFONTA;
}

ICONMETRICSW :: struct
{
    cbSize : u32;
    iHorzSpacing : s32;
    iVertSpacing : s32;
    iTitleWrap : s32;
    lfFont : LOGFONTW;
}

IMAGE_FLAGS :: enum_flags u32
{
    LR_CREATEDIBSECTION :: 8192;
    LR_DEFAULTCOLOR :: 0;
    LR_DEFAULTSIZE :: 64;
    LR_LOADFROMFILE :: 16;
    LR_LOADMAP3DCOLORS :: 4096;
    LR_LOADTRANSPARENT :: 32;
    LR_MONOCHROME :: 1;
    LR_SHARED :: 32768;
    LR_VGACOLOR :: 128;
    LR_COPYDELETEORG :: 8;
    LR_COPYFROMRESOURCE :: 16384;
    LR_COPYRETURNORG :: 4;
}

LR_CREATEDIBSECTION :: 8192;
LR_DEFAULTCOLOR :: 0;
LR_DEFAULTSIZE :: 64;
LR_LOADFROMFILE :: 16;
LR_LOADMAP3DCOLORS :: 4096;
LR_LOADTRANSPARENT :: 32;
LR_MONOCHROME :: 1;
LR_SHARED :: 32768;
LR_VGACOLOR :: 128;
LR_COPYDELETEORG :: 8;
LR_COPYFROMRESOURCE :: 16384;
LR_COPYRETURNORG :: 4;

IndexedResourceQualifier :: struct
{
    name : PWSTR;
    value : PWSTR;
}

KBDLLHOOKSTRUCT :: struct
{
    vkCode : u32;
    scanCode : u32;
    flags : KBDLLHOOKSTRUCT_FLAGS;
    time : u32;
    dwExtraInfo : u64;
}

KBDLLHOOKSTRUCT_FLAGS :: enum_flags u32
{
    LLKHF_EXTENDED :: 1;
    LLKHF_ALTDOWN :: 32;
    LLKHF_UP :: 128;
    LLKHF_INJECTED :: 16;
    LLKHF_LOWER_IL_INJECTED :: 2;
}

LLKHF_EXTENDED :: 1;
LLKHF_ALTDOWN :: 32;
LLKHF_UP :: 128;
LLKHF_INJECTED :: 16;
LLKHF_LOWER_IL_INJECTED :: 2;

LAYERED_WINDOW_ATTRIBUTES_FLAGS :: enum_flags u32
{
    LWA_ALPHA :: 2;
    LWA_COLORKEY :: 1;
}

LWA_ALPHA :: 2;
LWA_COLORKEY :: 1;

MDICREATESTRUCTA :: struct
{
    szClass : PSTR; // Const
    szTitle : PSTR; // Const
    hOwner : HANDLE;
    x : s32;
    y : s32;
    cx : s32;
    cy : s32;
    style : WINDOW_STYLE;
    lParam : LPARAM;
}

MDICREATESTRUCTW :: struct
{
    szClass : PWSTR; // Const
    szTitle : PWSTR; // Const
    hOwner : HANDLE;
    x : s32;
    y : s32;
    cx : s32;
    cy : s32;
    style : WINDOW_STYLE;
    lParam : LPARAM;
}

MDINEXTMENU :: struct
{
    hmenuIn : HMENU;
    hmenuNext : HMENU;
    hwndNext : HWND;
}

MENUBARINFO :: struct
{
    cbSize : u32;
    rcBar : RECT;
    hMenu : HMENU;
    hwndMenu : HWND;
    _bitfield : s32;
}

MENUGETOBJECTINFO :: struct
{
    dwFlags : MENUGETOBJECTINFO_FLAGS;
    uPos : u32;
    hmenu : HMENU;
    riid : *void;
    pvObj : *void;
}

MENUGETOBJECTINFO_FLAGS :: enum u32
{
    MNGOF_BOTTOMGAP :: 2;
    MNGOF_TOPGAP :: 1;
}

MNGOF_BOTTOMGAP :: 2;
MNGOF_TOPGAP :: 1;

MENUINFO :: struct
{
    cbSize : u32;
    fMask : MENUINFO_MASK;
    dwStyle : MENUINFO_STYLE;
    cyMax : u32;
    hbrBack : HBRUSH;
    dwContextHelpID : u32;
    dwMenuData : u64;
}

MENUINFO_MASK :: enum_flags u32
{
    MIM_APPLYTOSUBMENUS :: 2147483648;
    MIM_BACKGROUND :: 2;
    MIM_HELPID :: 4;
    MIM_MAXHEIGHT :: 1;
    MIM_MENUDATA :: 8;
    MIM_STYLE :: 16;
}

MIM_APPLYTOSUBMENUS :: 2147483648;
MIM_BACKGROUND :: 2;
MIM_HELPID :: 4;
MIM_MAXHEIGHT :: 1;
MIM_MENUDATA :: 8;
MIM_STYLE :: 16;

MENUINFO_STYLE :: enum_flags u32
{
    MNS_AUTODISMISS :: 268435456;
    MNS_CHECKORBMP :: 67108864;
    MNS_DRAGDROP :: 536870912;
    MNS_MODELESS :: 1073741824;
    MNS_NOCHECK :: 2147483648;
    MNS_NOTIFYBYPOS :: 134217728;
}

MNS_AUTODISMISS :: 268435456;
MNS_CHECKORBMP :: 67108864;
MNS_DRAGDROP :: 536870912;
MNS_MODELESS :: 1073741824;
MNS_NOCHECK :: 2147483648;
MNS_NOTIFYBYPOS :: 134217728;

MENUITEMINFOA :: struct
{
    cbSize : u32;
    fMask : MENU_ITEM_MASK;
    fType : MENU_ITEM_TYPE;
    fState : MENU_ITEM_STATE;
    wID : u32;
    hSubMenu : HMENU;
    hbmpChecked : HBITMAP;
    hbmpUnchecked : HBITMAP;
    dwItemData : u64;
    dwTypeData : PSTR;
    cch : u32;
    hbmpItem : HBITMAP;
}

MENUITEMINFOW :: struct
{
    cbSize : u32;
    fMask : MENU_ITEM_MASK;
    fType : MENU_ITEM_TYPE;
    fState : MENU_ITEM_STATE;
    wID : u32;
    hSubMenu : HMENU;
    hbmpChecked : HBITMAP;
    hbmpUnchecked : HBITMAP;
    dwItemData : u64;
    dwTypeData : PWSTR;
    cch : u32;
    hbmpItem : HBITMAP;
}

MENUITEMTEMPLATE :: struct
{
    mtOption : u16;
    mtID : u16;
    mtString : *u16;
}

MENUITEMTEMPLATEHEADER :: struct
{
    versionNumber : u16;
    offset : u16;
}

MENU_ITEM_FLAGS :: enum_flags u32
{
    MF_BYCOMMAND :: 0;
    MF_BYPOSITION :: 1024;
    MF_BITMAP :: 4;
    MF_CHECKED :: 8;
    MF_DISABLED :: 2;
    MF_ENABLED :: 0;
    MF_GRAYED :: 1;
    MF_MENUBARBREAK :: 32;
    MF_MENUBREAK :: 64;
    MF_OWNERDRAW :: 256;
    MF_POPUP :: 16;
    MF_SEPARATOR :: 2048;
    MF_STRING :: 0;
    MF_UNCHECKED :: 0;
    MF_INSERT :: 0;
    MF_CHANGE :: 128;
    MF_APPEND :: 256;
    MF_DELETE :: 512;
    MF_REMOVE :: 4096;
    MF_USECHECKBITMAPS :: 512;
    MF_UNHILITE :: 0;
    MF_HILITE :: 128;
    MF_DEFAULT :: 4096;
    MF_SYSMENU :: 8192;
    MF_HELP :: 16384;
    MF_RIGHTJUSTIFY :: 16384;
    MF_MOUSESELECT :: 32768;
    MF_END :: 128;
}

MF_BYCOMMAND :: 0;
MF_BYPOSITION :: 1024;
MF_BITMAP :: 4;
MF_CHECKED :: 8;
MF_DISABLED :: 2;
MF_ENABLED :: 0;
MF_GRAYED :: 1;
MF_MENUBARBREAK :: 32;
MF_MENUBREAK :: 64;
MF_OWNERDRAW :: 256;
MF_POPUP :: 16;
MF_SEPARATOR :: 2048;
MF_STRING :: 0;
MF_UNCHECKED :: 0;
MF_INSERT :: 0;
MF_CHANGE :: 128;
MF_APPEND :: 256;
MF_DELETE :: 512;
MF_REMOVE :: 4096;
MF_USECHECKBITMAPS :: 512;
MF_UNHILITE :: 0;
MF_HILITE :: 128;
MF_DEFAULT :: 4096;
MF_SYSMENU :: 8192;
MF_HELP :: 16384;
MF_RIGHTJUSTIFY :: 16384;
MF_MOUSESELECT :: 32768;
MF_END :: 128;

MENU_ITEM_MASK :: enum_flags u32
{
    MIIM_BITMAP :: 128;
    MIIM_CHECKMARKS :: 8;
    MIIM_DATA :: 32;
    MIIM_FTYPE :: 256;
    MIIM_ID :: 2;
    MIIM_STATE :: 1;
    MIIM_STRING :: 64;
    MIIM_SUBMENU :: 4;
    MIIM_TYPE :: 16;
}

MIIM_BITMAP :: 128;
MIIM_CHECKMARKS :: 8;
MIIM_DATA :: 32;
MIIM_FTYPE :: 256;
MIIM_ID :: 2;
MIIM_STATE :: 1;
MIIM_STRING :: 64;
MIIM_SUBMENU :: 4;
MIIM_TYPE :: 16;

MENU_ITEM_STATE :: enum_flags u32
{
    MFS_GRAYED :: 3;
    MFS_DISABLED :: 3;
    MFS_CHECKED :: 8;
    MFS_HILITE :: 128;
    MFS_ENABLED :: 0;
    MFS_UNCHECKED :: 0;
    MFS_UNHILITE :: 0;
    MFS_DEFAULT :: 4096;
}

MFS_GRAYED :: 3;
MFS_DISABLED :: 3;
MFS_CHECKED :: 8;
MFS_HILITE :: 128;
MFS_ENABLED :: 0;
MFS_UNCHECKED :: 0;
MFS_UNHILITE :: 0;
MFS_DEFAULT :: 4096;

MENU_ITEM_TYPE :: enum_flags u32
{
    MFT_BITMAP :: 4;
    MFT_MENUBARBREAK :: 32;
    MFT_MENUBREAK :: 64;
    MFT_OWNERDRAW :: 256;
    MFT_RADIOCHECK :: 512;
    MFT_RIGHTJUSTIFY :: 16384;
    MFT_RIGHTORDER :: 8192;
    MFT_SEPARATOR :: 2048;
    MFT_STRING :: 0;
}

MFT_BITMAP :: 4;
MFT_MENUBARBREAK :: 32;
MFT_MENUBREAK :: 64;
MFT_OWNERDRAW :: 256;
MFT_RADIOCHECK :: 512;
MFT_RIGHTJUSTIFY :: 16384;
MFT_RIGHTORDER :: 8192;
MFT_SEPARATOR :: 2048;
MFT_STRING :: 0;

MESSAGEBOX_RESULT :: enum s32
{
    IDOK :: 1;
    IDCANCEL :: 2;
    IDABORT :: 3;
    IDRETRY :: 4;
    IDIGNORE :: 5;
    IDYES :: 6;
    IDNO :: 7;
    IDCLOSE :: 8;
    IDHELP :: 9;
    IDTRYAGAIN :: 10;
    IDCONTINUE :: 11;
    IDASYNC :: 32001;
    IDTIMEOUT :: 32000;
}

IDOK :: 1;
IDCANCEL :: 2;
IDABORT :: 3;
IDRETRY :: 4;
IDIGNORE :: 5;
IDYES :: 6;
IDNO :: 7;
IDCLOSE :: 8;
IDHELP :: 9;
IDTRYAGAIN :: 10;
IDCONTINUE :: 11;
IDASYNC :: 32001;
IDTIMEOUT :: 32000;

MESSAGEBOX_STYLE :: enum_flags u32
{
    MB_ABORTRETRYIGNORE :: 2;
    MB_CANCELTRYCONTINUE :: 6;
    MB_HELP :: 16384;
    MB_OK :: 0;
    MB_OKCANCEL :: 1;
    MB_RETRYCANCEL :: 5;
    MB_YESNO :: 4;
    MB_YESNOCANCEL :: 3;
    MB_ICONHAND :: 16;
    MB_ICONQUESTION :: 32;
    MB_ICONEXCLAMATION :: 48;
    MB_ICONASTERISK :: 64;
    MB_USERICON :: 128;
    MB_ICONWARNING :: 48;
    MB_ICONERROR :: 16;
    MB_ICONINFORMATION :: 64;
    MB_ICONSTOP :: 16;
    MB_DEFBUTTON1 :: 0;
    MB_DEFBUTTON2 :: 256;
    MB_DEFBUTTON3 :: 512;
    MB_DEFBUTTON4 :: 768;
    MB_APPLMODAL :: 0;
    MB_SYSTEMMODAL :: 4096;
    MB_TASKMODAL :: 8192;
    MB_NOFOCUS :: 32768;
    MB_SETFOREGROUND :: 65536;
    MB_DEFAULT_DESKTOP_ONLY :: 131072;
    MB_TOPMOST :: 262144;
    MB_RIGHT :: 524288;
    MB_RTLREADING :: 1048576;
    MB_SERVICE_NOTIFICATION :: 2097152;
    MB_SERVICE_NOTIFICATION_NT3X :: 262144;
    MB_TYPEMASK :: 15;
    MB_ICONMASK :: 240;
    MB_DEFMASK :: 3840;
    MB_MODEMASK :: 12288;
    MB_MISCMASK :: 49152;
}

MB_ABORTRETRYIGNORE :: 2;
MB_CANCELTRYCONTINUE :: 6;
MB_HELP :: 16384;
MB_OK :: 0;
MB_OKCANCEL :: 1;
MB_RETRYCANCEL :: 5;
MB_YESNO :: 4;
MB_YESNOCANCEL :: 3;
MB_ICONHAND :: 16;
MB_ICONQUESTION :: 32;
MB_ICONEXCLAMATION :: 48;
MB_ICONASTERISK :: 64;
MB_USERICON :: 128;
MB_ICONWARNING :: 48;
MB_ICONERROR :: 16;
MB_ICONINFORMATION :: 64;
MB_ICONSTOP :: 16;
MB_DEFBUTTON1 :: 0;
MB_DEFBUTTON2 :: 256;
MB_DEFBUTTON3 :: 512;
MB_DEFBUTTON4 :: 768;
MB_APPLMODAL :: 0;
MB_SYSTEMMODAL :: 4096;
MB_TASKMODAL :: 8192;
MB_NOFOCUS :: 32768;
MB_SETFOREGROUND :: 65536;
MB_DEFAULT_DESKTOP_ONLY :: 131072;
MB_TOPMOST :: 262144;
MB_RIGHT :: 524288;
MB_RTLREADING :: 1048576;
MB_SERVICE_NOTIFICATION :: 2097152;
MB_SERVICE_NOTIFICATION_NT3X :: 262144;
MB_TYPEMASK :: 15;
MB_ICONMASK :: 240;
MB_DEFMASK :: 3840;
MB_MODEMASK :: 12288;
MB_MISCMASK :: 49152;

MESSAGE_RESOURCE_BLOCK :: struct
{
    LowId : u32;
    HighId : u32;
    OffsetToEntries : u32;
}

MESSAGE_RESOURCE_DATA :: struct
{
    NumberOfBlocks : u32;
    Blocks : *MESSAGE_RESOURCE_BLOCK;
}

MESSAGE_RESOURCE_ENTRY :: struct
{
    Length : u16;
    Flags : u16;
    Text : *u8;
}

MINIMIZEDMETRICS :: struct
{
    cbSize : u32;
    iWidth : s32;
    iHorzGap : s32;
    iVertGap : s32;
    iArrange : MINIMIZEDMETRICS_ARRANGE;
}

MINIMIZEDMETRICS_ARRANGE :: enum s32
{
    ARW_BOTTOMLEFT :: 0;
    ARW_BOTTOMRIGHT :: 1;
    ARW_TOPLEFT :: 2;
    ARW_TOPRIGHT :: 3;
}

ARW_BOTTOMLEFT :: 0;
ARW_BOTTOMRIGHT :: 1;
ARW_TOPLEFT :: 2;
ARW_TOPRIGHT :: 3;

MINMAXINFO :: struct
{
    ptReserved : POINT;
    ptMaxSize : POINT;
    ptMaxPosition : POINT;
    ptMinTrackSize : POINT;
    ptMaxTrackSize : POINT;
}

MOUSEHOOKSTRUCT :: struct
{
    pt : POINT;
    hwnd : HWND;
    wHitTestCode : u32;
    dwExtraInfo : u64;
}

MOUSEHOOKSTRUCTEX :: struct
{
    __AnonymousBase_winuser_L1166_C46 : MOUSEHOOKSTRUCT;
    mouseData : MOUSEHOOKSTRUCTEX_MOUSE_DATA;
}

MOUSEHOOKSTRUCTEX_MOUSE_DATA :: enum_flags u32
{
    XBUTTON1 :: 1;
    XBUTTON2 :: 2;
}

XBUTTON1 :: 1;
XBUTTON2 :: 2;

MSG :: struct
{
    hwnd : HWND;
    message : u32;
    wParam : WPARAM;
    lParam : LPARAM;
    time : u32;
    pt : POINT;
}

MSGBOXCALLBACK :: #type (lpHelpInfo : *HELPINFO) -> void #c_call;

MSGBOXPARAMSA :: struct
{
    cbSize : u32;
    hwndOwner : HWND;
    hInstance : HINSTANCE;
    lpszText : PSTR; // Const
    lpszCaption : PSTR; // Const
    dwStyle : MESSAGEBOX_STYLE;
    lpszIcon : PSTR; // Const
    dwContextHelpId : u64;
    lpfnMsgBoxCallback : MSGBOXCALLBACK;
    dwLanguageId : u32;
}

MSGBOXPARAMSW :: struct
{
    cbSize : u32;
    hwndOwner : HWND;
    hInstance : HINSTANCE;
    lpszText : PWSTR; // Const
    lpszCaption : PWSTR; // Const
    dwStyle : MESSAGEBOX_STYLE;
    lpszIcon : PWSTR; // Const
    dwContextHelpId : u64;
    lpfnMsgBoxCallback : MSGBOXCALLBACK;
    dwLanguageId : u32;
}

MSGFLTINFO_STATUS :: enum u32
{
    MSGFLTINFO_NONE :: 0;
    MSGFLTINFO_ALLOWED_HIGHER :: 3;
    MSGFLTINFO_ALREADYALLOWED_FORWND :: 1;
    MSGFLTINFO_ALREADYDISALLOWED_FORWND :: 2;
}

MSGFLTINFO_NONE :: 0;
MSGFLTINFO_ALLOWED_HIGHER :: 3;
MSGFLTINFO_ALREADYALLOWED_FORWND :: 1;
MSGFLTINFO_ALREADYDISALLOWED_FORWND :: 2;

MSG_WAIT_FOR_MULTIPLE_OBJECTS_EX_FLAGS :: enum_flags u32
{
    MWMO_NONE :: 0;
    MWMO_ALERTABLE :: 2;
    MWMO_INPUTAVAILABLE :: 4;
    MWMO_WAITALL :: 1;
}

MWMO_NONE :: 0;
MWMO_ALERTABLE :: 2;
MWMO_INPUTAVAILABLE :: 4;
MWMO_WAITALL :: 1;

MSLLHOOKSTRUCT :: struct
{
    pt : POINT;
    mouseData : MOUSEHOOKSTRUCTEX_MOUSE_DATA;
    flags : u32;
    time : u32;
    dwExtraInfo : u64;
}

MrmDumpType :: enum s32
{
    Basic :: 0;
    Detailed :: 1;
    Schema :: 2;
}

MrmDumpType_Basic :: 0;
MrmDumpType_Detailed :: 1;
MrmDumpType_Schema :: 2;

MrmIndexerFlags :: enum s32
{
    None :: 0;
    AutoMerge :: 1;
    CreateContentChecksum :: 2;
}

MrmIndexerFlagsNone :: 0;
MrmIndexerFlagsAutoMerge :: 1;
MrmIndexerFlagsCreateContentChecksum :: 2;

MrmPackagingMode :: enum s32
{
    StandaloneFile :: 0;
    AutoSplit :: 1;
    ResourcePack :: 2;
}

MrmPackagingModeStandaloneFile :: 0;
MrmPackagingModeAutoSplit :: 1;
MrmPackagingModeResourcePack :: 2;

MrmPackagingOptions :: enum s32
{
    None :: 0;
    OmitSchemaFromResourcePacks :: 1;
    SplitLanguageVariants :: 2;
}

MrmPackagingOptionsNone :: 0;
MrmPackagingOptionsOmitSchemaFromResourcePacks :: 1;
MrmPackagingOptionsSplitLanguageVariants :: 2;

MrmPlatformVersion :: enum s32
{
    Default :: 0;
    Windows10_0_0_0 :: 17432576;
    Windows10_0_0_5 :: 17432581;
}

MrmPlatformVersion_Default :: 0;
MrmPlatformVersion_Windows10_0_0_0 :: 17432576;
MrmPlatformVersion_Windows10_0_0_5 :: 17432581;

MrmResourceIndexerHandle :: struct
{
    handle : *void;
}

MrmResourceIndexerMessage :: struct
{
    severity : MrmResourceIndexerMessageSeverity;
    id : u32;
    text : PWSTR; // Const
}

MrmResourceIndexerMessageSeverity :: enum s32
{
    Verbose :: 0;
    Info :: 1;
    Warning :: 2;
    Error :: 3;
}

MrmResourceIndexerMessageSeverityVerbose :: 0;
MrmResourceIndexerMessageSeverityInfo :: 1;
MrmResourceIndexerMessageSeverityWarning :: 2;
MrmResourceIndexerMessageSeverityError :: 3;

NAMEENUMPROCA :: #type (param0 : PSTR, param1 : LPARAM) -> BOOL #c_call;

NAMEENUMPROCW :: #type (param0 : PWSTR, param1 : LPARAM) -> BOOL #c_call;

NCCALCSIZE_PARAMS :: struct
{
    rgrc : [3]RECT;
    lppos : *WINDOWPOS;
}

NONCLIENTMETRICSA :: struct
{
    cbSize : u32;
    iBorderWidth : s32;
    iScrollWidth : s32;
    iScrollHeight : s32;
    iCaptionWidth : s32;
    iCaptionHeight : s32;
    lfCaptionFont : LOGFONTA;
    iSmCaptionWidth : s32;
    iSmCaptionHeight : s32;
    lfSmCaptionFont : LOGFONTA;
    iMenuWidth : s32;
    iMenuHeight : s32;
    lfMenuFont : LOGFONTA;
    lfStatusFont : LOGFONTA;
    lfMessageFont : LOGFONTA;
    iPaddedBorderWidth : s32;
}

NONCLIENTMETRICSW :: struct
{
    cbSize : u32;
    iBorderWidth : s32;
    iScrollWidth : s32;
    iScrollHeight : s32;
    iCaptionWidth : s32;
    iCaptionHeight : s32;
    lfCaptionFont : LOGFONTW;
    iSmCaptionWidth : s32;
    iSmCaptionHeight : s32;
    lfSmCaptionFont : LOGFONTW;
    iMenuWidth : s32;
    iMenuHeight : s32;
    lfMenuFont : LOGFONTW;
    lfStatusFont : LOGFONTW;
    lfMessageFont : LOGFONTW;
    iPaddedBorderWidth : s32;
}

OBJECT_IDENTIFIER :: enum s32
{
    OBJID_WINDOW :: 0;
    OBJID_SYSMENU :: -1;
    OBJID_TITLEBAR :: -2;
    OBJID_MENU :: -3;
    OBJID_CLIENT :: -4;
    OBJID_VSCROLL :: -5;
    OBJID_HSCROLL :: -6;
    OBJID_SIZEGRIP :: -7;
    OBJID_CARET :: -8;
    OBJID_CURSOR :: -9;
    OBJID_ALERT :: -10;
    OBJID_SOUND :: -11;
    OBJID_QUERYCLASSNAMEIDX :: -12;
    OBJID_NATIVEOM :: -16;
}

OBJID_WINDOW :: 0;
OBJID_SYSMENU :: -1;
OBJID_TITLEBAR :: -2;
OBJID_MENU :: -3;
OBJID_CLIENT :: -4;
OBJID_VSCROLL :: -5;
OBJID_HSCROLL :: -6;
OBJID_SIZEGRIP :: -7;
OBJID_CARET :: -8;
OBJID_CURSOR :: -9;
OBJID_ALERT :: -10;
OBJID_SOUND :: -11;
OBJID_QUERYCLASSNAMEIDX :: -12;
OBJID_NATIVEOM :: -16;

PEEK_MESSAGE_REMOVE_TYPE :: enum_flags u32
{
    PM_NOREMOVE :: 0;
    PM_REMOVE :: 1;
    PM_NOYIELD :: 2;
    PM_QS_INPUT :: 67567616;
    PM_QS_POSTMESSAGE :: 9961472;
    PM_QS_PAINT :: 2097152;
    PM_QS_SENDMESSAGE :: 4194304;
}

PM_NOREMOVE :: 0;
PM_REMOVE :: 1;
PM_NOYIELD :: 2;
PM_QS_INPUT :: 67567616;
PM_QS_POSTMESSAGE :: 9961472;
PM_QS_PAINT :: 2097152;
PM_QS_SENDMESSAGE :: 4194304;

POINTER_INPUT_TYPE :: enum s32
{
    PT_POINTER :: 1;
    PT_TOUCH :: 2;
    PT_PEN :: 3;
    PT_MOUSE :: 4;
    PT_TOUCHPAD :: 5;
}

PT_POINTER :: 1;
PT_TOUCH :: 2;
PT_PEN :: 3;
PT_MOUSE :: 4;
PT_TOUCHPAD :: 5;

POWER_SETTING_REGISTER_NOTIFICATION_FLAGS :: enum u32
{
    DEVICE_NOTIFY_SERVICE_HANDLE :: 1;
    DEVICE_NOTIFY_CALLBACK :: 2;
    DEVICE_NOTIFY_WINDOW_HANDLE :: 0;
}

DEVICE_NOTIFY_SERVICE_HANDLE :: 1;
DEVICE_NOTIFY_CALLBACK :: 2;
DEVICE_NOTIFY_WINDOW_HANDLE :: 0;

PREGISTERCLASSNAMEW :: #type (param0 : PWSTR) -> BOOLEAN #c_call;

PROPENUMPROCA :: #type (param0 : HWND, param1 : PSTR, param2 : HANDLE) -> BOOL #c_call;

PROPENUMPROCEXA :: #type (param0 : HWND, param1 : PSTR, param2 : HANDLE, param3 : u64) -> BOOL #c_call;

PROPENUMPROCEXW :: #type (param0 : HWND, param1 : PWSTR, param2 : HANDLE, param3 : u64) -> BOOL #c_call;

PROPENUMPROCW :: #type (param0 : HWND, param1 : PWSTR, param2 : HANDLE) -> BOOL #c_call;

QUEUE_STATUS_FLAGS :: enum_flags u32
{
    QS_ALLEVENTS :: 1215;
    QS_ALLINPUT :: 1279;
    QS_ALLPOSTMESSAGE :: 256;
    QS_HOTKEY :: 128;
    QS_INPUT :: 1031;
    QS_KEY :: 1;
    QS_MOUSE :: 6;
    QS_MOUSEBUTTON :: 4;
    QS_MOUSEMOVE :: 2;
    QS_PAINT :: 32;
    QS_POSTMESSAGE :: 8;
    QS_RAWINPUT :: 1024;
    QS_SENDMESSAGE :: 64;
    QS_TIMER :: 16;
}

QS_ALLEVENTS :: 1215;
QS_ALLINPUT :: 1279;
QS_ALLPOSTMESSAGE :: 256;
QS_HOTKEY :: 128;
QS_INPUT :: 1031;
QS_KEY :: 1;
QS_MOUSE :: 6;
QS_MOUSEBUTTON :: 4;
QS_MOUSEMOVE :: 2;
QS_PAINT :: 32;
QS_POSTMESSAGE :: 8;
QS_RAWINPUT :: 1024;
QS_SENDMESSAGE :: 64;
QS_TIMER :: 16;

SCROLLBARINFO :: struct
{
    cbSize : u32;
    rcScrollBar : RECT;
    dxyLineButton : s32;
    xyThumbTop : s32;
    xyThumbBottom : s32;
    reserved : s32;
    rgstate : [6]u32;
}

SCROLLBAR_CONSTANTS :: enum_flags u32
{
    SB_CTL :: 2;
    SB_HORZ :: 0;
    SB_VERT :: 1;
    SB_BOTH :: 3;
}

SB_CTL :: 2;
SB_HORZ :: 0;
SB_VERT :: 1;
SB_BOTH :: 3;

SCROLLINFO :: struct
{
    cbSize : u32;
    fMask : SCROLLINFO_MASK;
    nMin : s32;
    nMax : s32;
    nPage : u32;
    nPos : s32;
    nTrackPos : s32;
}

SCROLLINFO_MASK :: enum_flags u32
{
    SIF_ALL :: 23;
    SIF_DISABLENOSCROLL :: 8;
    SIF_PAGE :: 2;
    SIF_POS :: 4;
    SIF_RANGE :: 1;
    SIF_TRACKPOS :: 16;
}

SIF_ALL :: 23;
SIF_DISABLENOSCROLL :: 8;
SIF_PAGE :: 2;
SIF_POS :: 4;
SIF_RANGE :: 1;
SIF_TRACKPOS :: 16;

SENDASYNCPROC :: #type (param0 : HWND, param1 : u32, param2 : u64, param3 : LRESULT) -> void #c_call;

SEND_MESSAGE_TIMEOUT_FLAGS :: enum_flags u32
{
    SMTO_ABORTIFHUNG :: 2;
    SMTO_BLOCK :: 1;
    SMTO_NORMAL :: 0;
    SMTO_NOTIMEOUTIFNOTHUNG :: 8;
    SMTO_ERRORONEXIT :: 32;
}

SMTO_ABORTIFHUNG :: 2;
SMTO_BLOCK :: 1;
SMTO_NORMAL :: 0;
SMTO_NOTIMEOUTIFNOTHUNG :: 8;
SMTO_ERRORONEXIT :: 32;

SET_WINDOW_POS_FLAGS :: enum_flags u32
{
    SWP_ASYNCWINDOWPOS :: 16384;
    SWP_DEFERERASE :: 8192;
    SWP_DRAWFRAME :: 32;
    SWP_FRAMECHANGED :: 32;
    SWP_HIDEWINDOW :: 128;
    SWP_NOACTIVATE :: 16;
    SWP_NOCOPYBITS :: 256;
    SWP_NOMOVE :: 2;
    SWP_NOOWNERZORDER :: 512;
    SWP_NOREDRAW :: 8;
    SWP_NOREPOSITION :: 512;
    SWP_NOSENDCHANGING :: 1024;
    SWP_NOSIZE :: 1;
    SWP_NOZORDER :: 4;
    SWP_SHOWWINDOW :: 64;
    SWP__NOOWNERZORDER :: 512;
}

SWP_ASYNCWINDOWPOS :: 16384;
SWP_DEFERERASE :: 8192;
SWP_DRAWFRAME :: 32;
SWP_FRAMECHANGED :: 32;
SWP_HIDEWINDOW :: 128;
SWP_NOACTIVATE :: 16;
SWP_NOCOPYBITS :: 256;
SWP_NOMOVE :: 2;
SWP_NOOWNERZORDER :: 512;
SWP_NOREDRAW :: 8;
SWP_NOREPOSITION :: 512;
SWP_NOSENDCHANGING :: 1024;
SWP_NOSIZE :: 1;
SWP_NOZORDER :: 4;
SWP_SHOWWINDOW :: 64;
SWP__NOOWNERZORDER :: 512;

SHELLHOOKINFO :: struct
{
    hwnd : HWND;
    rc : RECT;
}

SHOW_WINDOW_CMD :: enum_flags u32
{
    SW_FORCEMINIMIZE :: 11;
    SW_HIDE :: 0;
    SW_MAXIMIZE :: 3;
    SW_MINIMIZE :: 6;
    SW_RESTORE :: 9;
    SW_SHOW :: 5;
    SW_SHOWDEFAULT :: 10;
    SW_SHOWMAXIMIZED :: 3;
    SW_SHOWMINIMIZED :: 2;
    SW_SHOWMINNOACTIVE :: 7;
    SW_SHOWNA :: 8;
    SW_SHOWNOACTIVATE :: 4;
    SW_SHOWNORMAL :: 1;
    SW_NORMAL :: 1;
    SW_MAX :: 11;
    SW_PARENTCLOSING :: 1;
    SW_OTHERZOOM :: 2;
    SW_PARENTOPENING :: 3;
    SW_OTHERUNZOOM :: 4;
    SW_SCROLLCHILDREN :: 1;
    SW_INVALIDATE :: 2;
    SW_ERASE :: 4;
    SW_SMOOTHSCROLL :: 16;
}

SW_FORCEMINIMIZE :: 11;
SW_HIDE :: 0;
SW_MAXIMIZE :: 3;
SW_MINIMIZE :: 6;
SW_RESTORE :: 9;
SW_SHOW :: 5;
SW_SHOWDEFAULT :: 10;
SW_SHOWMAXIMIZED :: 3;
SW_SHOWMINIMIZED :: 2;
SW_SHOWMINNOACTIVE :: 7;
SW_SHOWNA :: 8;
SW_SHOWNOACTIVATE :: 4;
SW_SHOWNORMAL :: 1;
SW_NORMAL :: 1;
SW_MAX :: 11;
SW_PARENTCLOSING :: 1;
SW_OTHERZOOM :: 2;
SW_PARENTOPENING :: 3;
SW_OTHERUNZOOM :: 4;
SW_SCROLLCHILDREN :: 1;
SW_INVALIDATE :: 2;
SW_ERASE :: 4;
SW_SMOOTHSCROLL :: 16;

STYLESTRUCT :: struct
{
    styleOld : u32;
    styleNew : u32;
}

SYSTEM_CURSOR_ID :: enum u32
{
    OCR_APPSTARTING :: 32650;
    OCR_NORMAL :: 32512;
    OCR_CROSS :: 32515;
    OCR_HAND :: 32649;
    OCR_HELP :: 32651;
    OCR_IBEAM :: 32513;
    OCR_NO :: 32648;
    OCR_SIZEALL :: 32646;
    OCR_SIZENESW :: 32643;
    OCR_SIZENS :: 32645;
    OCR_SIZENWSE :: 32642;
    OCR_SIZEWE :: 32644;
    OCR_UP :: 32516;
    OCR_WAIT :: 32514;
}

OCR_APPSTARTING :: 32650;
OCR_NORMAL :: 32512;
OCR_CROSS :: 32515;
OCR_HAND :: 32649;
OCR_HELP :: 32651;
OCR_IBEAM :: 32513;
OCR_NO :: 32648;
OCR_SIZEALL :: 32646;
OCR_SIZENESW :: 32643;
OCR_SIZENS :: 32645;
OCR_SIZENWSE :: 32642;
OCR_SIZEWE :: 32644;
OCR_UP :: 32516;
OCR_WAIT :: 32514;

SYSTEM_METRICS_INDEX :: enum u32
{
    SM_ARRANGE :: 56;
    SM_CLEANBOOT :: 67;
    SM_CMONITORS :: 80;
    SM_CMOUSEBUTTONS :: 43;
    SM_CONVERTIBLESLATEMODE :: 8195;
    SM_CXBORDER :: 5;
    SM_CXCURSOR :: 13;
    SM_CXDLGFRAME :: 7;
    SM_CXDOUBLECLK :: 36;
    SM_CXDRAG :: 68;
    SM_CXEDGE :: 45;
    SM_CXFIXEDFRAME :: 7;
    SM_CXFOCUSBORDER :: 83;
    SM_CXFRAME :: 32;
    SM_CXFULLSCREEN :: 16;
    SM_CXHSCROLL :: 21;
    SM_CXHTHUMB :: 10;
    SM_CXICON :: 11;
    SM_CXICONSPACING :: 38;
    SM_CXMAXIMIZED :: 61;
    SM_CXMAXTRACK :: 59;
    SM_CXMENUCHECK :: 71;
    SM_CXMENUSIZE :: 54;
    SM_CXMIN :: 28;
    SM_CXMINIMIZED :: 57;
    SM_CXMINSPACING :: 47;
    SM_CXMINTRACK :: 34;
    SM_CXPADDEDBORDER :: 92;
    SM_CXSCREEN :: 0;
    SM_CXSIZE :: 30;
    SM_CXSIZEFRAME :: 32;
    SM_CXSMICON :: 49;
    SM_CXSMSIZE :: 52;
    SM_CXVIRTUALSCREEN :: 78;
    SM_CXVSCROLL :: 2;
    SM_CYBORDER :: 6;
    SM_CYCAPTION :: 4;
    SM_CYCURSOR :: 14;
    SM_CYDLGFRAME :: 8;
    SM_CYDOUBLECLK :: 37;
    SM_CYDRAG :: 69;
    SM_CYEDGE :: 46;
    SM_CYFIXEDFRAME :: 8;
    SM_CYFOCUSBORDER :: 84;
    SM_CYFRAME :: 33;
    SM_CYFULLSCREEN :: 17;
    SM_CYHSCROLL :: 3;
    SM_CYICON :: 12;
    SM_CYICONSPACING :: 39;
    SM_CYKANJIWINDOW :: 18;
    SM_CYMAXIMIZED :: 62;
    SM_CYMAXTRACK :: 60;
    SM_CYMENU :: 15;
    SM_CYMENUCHECK :: 72;
    SM_CYMENUSIZE :: 55;
    SM_CYMIN :: 29;
    SM_CYMINIMIZED :: 58;
    SM_CYMINSPACING :: 48;
    SM_CYMINTRACK :: 35;
    SM_CYSCREEN :: 1;
    SM_CYSIZE :: 31;
    SM_CYSIZEFRAME :: 33;
    SM_CYSMCAPTION :: 51;
    SM_CYSMICON :: 50;
    SM_CYSMSIZE :: 53;
    SM_CYVIRTUALSCREEN :: 79;
    SM_CYVSCROLL :: 20;
    SM_CYVTHUMB :: 9;
    SM_DBCSENABLED :: 42;
    SM_DEBUG :: 22;
    SM_DIGITIZER :: 94;
    SM_IMMENABLED :: 82;
    SM_MAXIMUMTOUCHES :: 95;
    SM_MEDIACENTER :: 87;
    SM_MENUDROPALIGNMENT :: 40;
    SM_MIDEASTENABLED :: 74;
    SM_MOUSEPRESENT :: 19;
    SM_MOUSEHORIZONTALWHEELPRESENT :: 91;
    SM_MOUSEWHEELPRESENT :: 75;
    SM_NETWORK :: 63;
    SM_PENWINDOWS :: 41;
    SM_REMOTECONTROL :: 8193;
    SM_REMOTESESSION :: 4096;
    SM_SAMEDISPLAYFORMAT :: 81;
    SM_SECURE :: 44;
    SM_SERVERR2 :: 89;
    SM_SHOWSOUNDS :: 70;
    SM_SHUTTINGDOWN :: 8192;
    SM_SLOWMACHINE :: 73;
    SM_STARTER :: 88;
    SM_SWAPBUTTON :: 23;
    SM_SYSTEMDOCKED_ :: 8196;
    SM_TABLETPC :: 86;
    SM_XVIRTUALSCREEN :: 76;
    SM_YVIRTUALSCREEN :: 77;
}

SM_ARRANGE :: 56;
SM_CLEANBOOT :: 67;
SM_CMONITORS :: 80;
SM_CMOUSEBUTTONS :: 43;
SM_CONVERTIBLESLATEMODE :: 8195;
SM_CXBORDER :: 5;
SM_CXCURSOR :: 13;
SM_CXDLGFRAME :: 7;
SM_CXDOUBLECLK :: 36;
SM_CXDRAG :: 68;
SM_CXEDGE :: 45;
SM_CXFIXEDFRAME :: 7;
SM_CXFOCUSBORDER :: 83;
SM_CXFRAME :: 32;
SM_CXFULLSCREEN :: 16;
SM_CXHSCROLL :: 21;
SM_CXHTHUMB :: 10;
SM_CXICON :: 11;
SM_CXICONSPACING :: 38;
SM_CXMAXIMIZED :: 61;
SM_CXMAXTRACK :: 59;
SM_CXMENUCHECK :: 71;
SM_CXMENUSIZE :: 54;
SM_CXMIN :: 28;
SM_CXMINIMIZED :: 57;
SM_CXMINSPACING :: 47;
SM_CXMINTRACK :: 34;
SM_CXPADDEDBORDER :: 92;
SM_CXSCREEN :: 0;
SM_CXSIZE :: 30;
SM_CXSIZEFRAME :: 32;
SM_CXSMICON :: 49;
SM_CXSMSIZE :: 52;
SM_CXVIRTUALSCREEN :: 78;
SM_CXVSCROLL :: 2;
SM_CYBORDER :: 6;
SM_CYCAPTION :: 4;
SM_CYCURSOR :: 14;
SM_CYDLGFRAME :: 8;
SM_CYDOUBLECLK :: 37;
SM_CYDRAG :: 69;
SM_CYEDGE :: 46;
SM_CYFIXEDFRAME :: 8;
SM_CYFOCUSBORDER :: 84;
SM_CYFRAME :: 33;
SM_CYFULLSCREEN :: 17;
SM_CYHSCROLL :: 3;
SM_CYICON :: 12;
SM_CYICONSPACING :: 39;
SM_CYKANJIWINDOW :: 18;
SM_CYMAXIMIZED :: 62;
SM_CYMAXTRACK :: 60;
SM_CYMENU :: 15;
SM_CYMENUCHECK :: 72;
SM_CYMENUSIZE :: 55;
SM_CYMIN :: 29;
SM_CYMINIMIZED :: 58;
SM_CYMINSPACING :: 48;
SM_CYMINTRACK :: 35;
SM_CYSCREEN :: 1;
SM_CYSIZE :: 31;
SM_CYSIZEFRAME :: 33;
SM_CYSMCAPTION :: 51;
SM_CYSMICON :: 50;
SM_CYSMSIZE :: 53;
SM_CYVIRTUALSCREEN :: 79;
SM_CYVSCROLL :: 20;
SM_CYVTHUMB :: 9;
SM_DBCSENABLED :: 42;
SM_DEBUG :: 22;
SM_DIGITIZER :: 94;
SM_IMMENABLED :: 82;
SM_MAXIMUMTOUCHES :: 95;
SM_MEDIACENTER :: 87;
SM_MENUDROPALIGNMENT :: 40;
SM_MIDEASTENABLED :: 74;
SM_MOUSEPRESENT :: 19;
SM_MOUSEHORIZONTALWHEELPRESENT :: 91;
SM_MOUSEWHEELPRESENT :: 75;
SM_NETWORK :: 63;
SM_PENWINDOWS :: 41;
SM_REMOTECONTROL :: 8193;
SM_REMOTESESSION :: 4096;
SM_SAMEDISPLAYFORMAT :: 81;
SM_SECURE :: 44;
SM_SERVERR2 :: 89;
SM_SHOWSOUNDS :: 70;
SM_SHUTTINGDOWN :: 8192;
SM_SLOWMACHINE :: 73;
SM_STARTER :: 88;
SM_SWAPBUTTON :: 23;
SM_SYSTEMDOCKED_ :: 8196;
SM_TABLETPC :: 86;
SM_XVIRTUALSCREEN :: 76;
SM_YVIRTUALSCREEN :: 77;

SYSTEM_PARAMETERS_INFO_ACTION :: enum_flags u32
{
    SPI_GETBEEP :: 1;
    SPI_SETBEEP :: 2;
    SPI_GETMOUSE :: 3;
    SPI_SETMOUSE :: 4;
    SPI_GETBORDER :: 5;
    SPI_SETBORDER :: 6;
    SPI_GETKEYBOARDSPEED :: 10;
    SPI_SETKEYBOARDSPEED :: 11;
    SPI_LANGDRIVER :: 12;
    SPI_ICONHORIZONTALSPACING :: 13;
    SPI_GETSCREENSAVETIMEOUT :: 14;
    SPI_SETSCREENSAVETIMEOUT :: 15;
    SPI_GETSCREENSAVEACTIVE :: 16;
    SPI_SETSCREENSAVEACTIVE :: 17;
    SPI_GETGRIDGRANULARITY :: 18;
    SPI_SETGRIDGRANULARITY :: 19;
    SPI_SETDESKWALLPAPER :: 20;
    SPI_SETDESKPATTERN :: 21;
    SPI_GETKEYBOARDDELAY :: 22;
    SPI_SETKEYBOARDDELAY :: 23;
    SPI_ICONVERTICALSPACING :: 24;
    SPI_GETICONTITLEWRAP :: 25;
    SPI_SETICONTITLEWRAP :: 26;
    SPI_GETMENUDROPALIGNMENT :: 27;
    SPI_SETMENUDROPALIGNMENT :: 28;
    SPI_SETDOUBLECLKWIDTH :: 29;
    SPI_SETDOUBLECLKHEIGHT :: 30;
    SPI_GETICONTITLELOGFONT :: 31;
    SPI_SETDOUBLECLICKTIME :: 32;
    SPI_SETMOUSEBUTTONSWAP :: 33;
    SPI_SETICONTITLELOGFONT :: 34;
    SPI_GETFASTTASKSWITCH :: 35;
    SPI_SETFASTTASKSWITCH :: 36;
    SPI_SETDRAGFULLWINDOWS :: 37;
    SPI_GETDRAGFULLWINDOWS :: 38;
    SPI_GETNONCLIENTMETRICS :: 41;
    SPI_SETNONCLIENTMETRICS :: 42;
    SPI_GETMINIMIZEDMETRICS :: 43;
    SPI_SETMINIMIZEDMETRICS :: 44;
    SPI_GETICONMETRICS :: 45;
    SPI_SETICONMETRICS :: 46;
    SPI_SETWORKAREA :: 47;
    SPI_GETWORKAREA :: 48;
    SPI_SETPENWINDOWS :: 49;
    SPI_GETHIGHCONTRAST :: 66;
    SPI_SETHIGHCONTRAST :: 67;
    SPI_GETKEYBOARDPREF :: 68;
    SPI_SETKEYBOARDPREF :: 69;
    SPI_GETSCREENREADER :: 70;
    SPI_SETSCREENREADER :: 71;
    SPI_GETANIMATION :: 72;
    SPI_SETANIMATION :: 73;
    SPI_GETFONTSMOOTHING :: 74;
    SPI_SETFONTSMOOTHING :: 75;
    SPI_SETDRAGWIDTH :: 76;
    SPI_SETDRAGHEIGHT :: 77;
    SPI_SETHANDHELD :: 78;
    SPI_GETLOWPOWERTIMEOUT :: 79;
    SPI_GETPOWEROFFTIMEOUT :: 80;
    SPI_SETLOWPOWERTIMEOUT :: 81;
    SPI_SETPOWEROFFTIMEOUT :: 82;
    SPI_GETLOWPOWERACTIVE :: 83;
    SPI_GETPOWEROFFACTIVE :: 84;
    SPI_SETLOWPOWERACTIVE :: 85;
    SPI_SETPOWEROFFACTIVE :: 86;
    SPI_SETCURSORS :: 87;
    SPI_SETICONS :: 88;
    SPI_GETDEFAULTINPUTLANG :: 89;
    SPI_SETDEFAULTINPUTLANG :: 90;
    SPI_SETLANGTOGGLE :: 91;
    SPI_GETWINDOWSEXTENSION :: 92;
    SPI_SETMOUSETRAILS :: 93;
    SPI_GETMOUSETRAILS :: 94;
    SPI_SETSCREENSAVERRUNNING :: 97;
    SPI_SCREENSAVERRUNNING :: 97;
    SPI_GETFILTERKEYS :: 50;
    SPI_SETFILTERKEYS :: 51;
    SPI_GETTOGGLEKEYS :: 52;
    SPI_SETTOGGLEKEYS :: 53;
    SPI_GETMOUSEKEYS :: 54;
    SPI_SETMOUSEKEYS :: 55;
    SPI_GETSHOWSOUNDS :: 56;
    SPI_SETSHOWSOUNDS :: 57;
    SPI_GETSTICKYKEYS :: 58;
    SPI_SETSTICKYKEYS :: 59;
    SPI_GETACCESSTIMEOUT :: 60;
    SPI_SETACCESSTIMEOUT :: 61;
    SPI_GETSERIALKEYS :: 62;
    SPI_SETSERIALKEYS :: 63;
    SPI_GETSOUNDSENTRY :: 64;
    SPI_SETSOUNDSENTRY :: 65;
    SPI_GETSNAPTODEFBUTTON :: 95;
    SPI_SETSNAPTODEFBUTTON :: 96;
    SPI_GETMOUSEHOVERWIDTH :: 98;
    SPI_SETMOUSEHOVERWIDTH :: 99;
    SPI_GETMOUSEHOVERHEIGHT :: 100;
    SPI_SETMOUSEHOVERHEIGHT :: 101;
    SPI_GETMOUSEHOVERTIME :: 102;
    SPI_SETMOUSEHOVERTIME :: 103;
    SPI_GETWHEELSCROLLLINES :: 104;
    SPI_SETWHEELSCROLLLINES :: 105;
    SPI_GETMENUSHOWDELAY :: 106;
    SPI_SETMENUSHOWDELAY :: 107;
    SPI_GETWHEELSCROLLCHARS :: 108;
    SPI_SETWHEELSCROLLCHARS :: 109;
    SPI_GETSHOWIMEUI :: 110;
    SPI_SETSHOWIMEUI :: 111;
    SPI_GETMOUSESPEED :: 112;
    SPI_SETMOUSESPEED :: 113;
    SPI_GETSCREENSAVERRUNNING :: 114;
    SPI_GETDESKWALLPAPER :: 115;
    SPI_GETAUDIODESCRIPTION :: 116;
    SPI_SETAUDIODESCRIPTION :: 117;
    SPI_GETSCREENSAVESECURE :: 118;
    SPI_SETSCREENSAVESECURE :: 119;
    SPI_GETHUNGAPPTIMEOUT :: 120;
    SPI_SETHUNGAPPTIMEOUT :: 121;
    SPI_GETWAITTOKILLTIMEOUT :: 122;
    SPI_SETWAITTOKILLTIMEOUT :: 123;
    SPI_GETWAITTOKILLSERVICETIMEOUT :: 124;
    SPI_SETWAITTOKILLSERVICETIMEOUT :: 125;
    SPI_GETMOUSEDOCKTHRESHOLD :: 126;
    SPI_SETMOUSEDOCKTHRESHOLD :: 127;
    SPI_GETPENDOCKTHRESHOLD :: 128;
    SPI_SETPENDOCKTHRESHOLD :: 129;
    SPI_GETWINARRANGING :: 130;
    SPI_SETWINARRANGING :: 131;
    SPI_GETMOUSEDRAGOUTTHRESHOLD :: 132;
    SPI_SETMOUSEDRAGOUTTHRESHOLD :: 133;
    SPI_GETPENDRAGOUTTHRESHOLD :: 134;
    SPI_SETPENDRAGOUTTHRESHOLD :: 135;
    SPI_GETMOUSESIDEMOVETHRESHOLD :: 136;
    SPI_SETMOUSESIDEMOVETHRESHOLD :: 137;
    SPI_GETPENSIDEMOVETHRESHOLD :: 138;
    SPI_SETPENSIDEMOVETHRESHOLD :: 139;
    SPI_GETDRAGFROMMAXIMIZE :: 140;
    SPI_SETDRAGFROMMAXIMIZE :: 141;
    SPI_GETSNAPSIZING :: 142;
    SPI_SETSNAPSIZING :: 143;
    SPI_GETDOCKMOVING :: 144;
    SPI_SETDOCKMOVING :: 145;
    SPI_GETTOUCHPREDICTIONPARAMETERS :: 156;
    SPI_SETTOUCHPREDICTIONPARAMETERS :: 157;
    SPI_GETLOGICALDPIOVERRIDE :: 158;
    SPI_SETLOGICALDPIOVERRIDE :: 159;
    SPI_GETMENURECT :: 162;
    SPI_SETMENURECT :: 163;
    SPI_GETACTIVEWINDOWTRACKING :: 4096;
    SPI_SETACTIVEWINDOWTRACKING :: 4097;
    SPI_GETMENUANIMATION :: 4098;
    SPI_SETMENUANIMATION :: 4099;
    SPI_GETCOMBOBOXANIMATION :: 4100;
    SPI_SETCOMBOBOXANIMATION :: 4101;
    SPI_GETLISTBOXSMOOTHSCROLLING :: 4102;
    SPI_SETLISTBOXSMOOTHSCROLLING :: 4103;
    SPI_GETGRADIENTCAPTIONS :: 4104;
    SPI_SETGRADIENTCAPTIONS :: 4105;
    SPI_GETKEYBOARDCUES :: 4106;
    SPI_SETKEYBOARDCUES :: 4107;
    SPI_GETMENUUNDERLINES :: 4106;
    SPI_SETMENUUNDERLINES :: 4107;
    SPI_GETACTIVEWNDTRKZORDER :: 4108;
    SPI_SETACTIVEWNDTRKZORDER :: 4109;
    SPI_GETHOTTRACKING :: 4110;
    SPI_SETHOTTRACKING :: 4111;
    SPI_GETMENUFADE :: 4114;
    SPI_SETMENUFADE :: 4115;
    SPI_GETSELECTIONFADE :: 4116;
    SPI_SETSELECTIONFADE :: 4117;
    SPI_GETTOOLTIPANIMATION :: 4118;
    SPI_SETTOOLTIPANIMATION :: 4119;
    SPI_GETTOOLTIPFADE :: 4120;
    SPI_SETTOOLTIPFADE :: 4121;
    SPI_GETCURSORSHADOW :: 4122;
    SPI_SETCURSORSHADOW :: 4123;
    SPI_GETMOUSESONAR :: 4124;
    SPI_SETMOUSESONAR :: 4125;
    SPI_GETMOUSECLICKLOCK :: 4126;
    SPI_SETMOUSECLICKLOCK :: 4127;
    SPI_GETMOUSEVANISH :: 4128;
    SPI_SETMOUSEVANISH :: 4129;
    SPI_GETFLATMENU :: 4130;
    SPI_SETFLATMENU :: 4131;
    SPI_GETDROPSHADOW :: 4132;
    SPI_SETDROPSHADOW :: 4133;
    SPI_GETBLOCKSENDINPUTRESETS :: 4134;
    SPI_SETBLOCKSENDINPUTRESETS :: 4135;
    SPI_GETUIEFFECTS :: 4158;
    SPI_SETUIEFFECTS :: 4159;
    SPI_GETDISABLEOVERLAPPEDCONTENT :: 4160;
    SPI_SETDISABLEOVERLAPPEDCONTENT :: 4161;
    SPI_GETCLIENTAREAANIMATION :: 4162;
    SPI_SETCLIENTAREAANIMATION :: 4163;
    SPI_GETCLEARTYPE :: 4168;
    SPI_SETCLEARTYPE :: 4169;
    SPI_GETSPEECHRECOGNITION :: 4170;
    SPI_SETSPEECHRECOGNITION :: 4171;
    SPI_GETCARETBROWSING :: 4172;
    SPI_SETCARETBROWSING :: 4173;
    SPI_GETTHREADLOCALINPUTSETTINGS :: 4174;
    SPI_SETTHREADLOCALINPUTSETTINGS :: 4175;
    SPI_GETSYSTEMLANGUAGEBAR :: 4176;
    SPI_SETSYSTEMLANGUAGEBAR :: 4177;
    SPI_GETFOREGROUNDLOCKTIMEOUT :: 8192;
    SPI_SETFOREGROUNDLOCKTIMEOUT :: 8193;
    SPI_GETACTIVEWNDTRKTIMEOUT :: 8194;
    SPI_SETACTIVEWNDTRKTIMEOUT :: 8195;
    SPI_GETFOREGROUNDFLASHCOUNT :: 8196;
    SPI_SETFOREGROUNDFLASHCOUNT :: 8197;
    SPI_GETCARETWIDTH :: 8198;
    SPI_SETCARETWIDTH :: 8199;
    SPI_GETMOUSECLICKLOCKTIME :: 8200;
    SPI_SETMOUSECLICKLOCKTIME :: 8201;
    SPI_GETFONTSMOOTHINGTYPE :: 8202;
    SPI_SETFONTSMOOTHINGTYPE :: 8203;
    SPI_GETFONTSMOOTHINGCONTRAST :: 8204;
    SPI_SETFONTSMOOTHINGCONTRAST :: 8205;
    SPI_GETFOCUSBORDERWIDTH :: 8206;
    SPI_SETFOCUSBORDERWIDTH :: 8207;
    SPI_GETFOCUSBORDERHEIGHT :: 8208;
    SPI_SETFOCUSBORDERHEIGHT :: 8209;
    SPI_GETFONTSMOOTHINGORIENTATION :: 8210;
    SPI_SETFONTSMOOTHINGORIENTATION :: 8211;
    SPI_GETMINIMUMHITRADIUS :: 8212;
    SPI_SETMINIMUMHITRADIUS :: 8213;
    SPI_GETMESSAGEDURATION :: 8214;
    SPI_SETMESSAGEDURATION :: 8215;
    SPI_GETCONTACTVISUALIZATION :: 8216;
    SPI_SETCONTACTVISUALIZATION :: 8217;
    SPI_GETGESTUREVISUALIZATION :: 8218;
    SPI_SETGESTUREVISUALIZATION :: 8219;
    SPI_GETMOUSEWHEELROUTING :: 8220;
    SPI_SETMOUSEWHEELROUTING :: 8221;
    SPI_GETPENVISUALIZATION :: 8222;
    SPI_SETPENVISUALIZATION :: 8223;
    SPI_GETPENARBITRATIONTYPE :: 8224;
    SPI_SETPENARBITRATIONTYPE :: 8225;
    SPI_GETCARETTIMEOUT :: 8226;
    SPI_SETCARETTIMEOUT :: 8227;
    SPI_GETHANDEDNESS :: 8228;
    SPI_SETHANDEDNESS :: 8229;
}

SPI_GETBEEP :: 1;
SPI_SETBEEP :: 2;
SPI_GETMOUSE :: 3;
SPI_SETMOUSE :: 4;
SPI_GETBORDER :: 5;
SPI_SETBORDER :: 6;
SPI_GETKEYBOARDSPEED :: 10;
SPI_SETKEYBOARDSPEED :: 11;
SPI_LANGDRIVER :: 12;
SPI_ICONHORIZONTALSPACING :: 13;
SPI_GETSCREENSAVETIMEOUT :: 14;
SPI_SETSCREENSAVETIMEOUT :: 15;
SPI_GETSCREENSAVEACTIVE :: 16;
SPI_SETSCREENSAVEACTIVE :: 17;
SPI_GETGRIDGRANULARITY :: 18;
SPI_SETGRIDGRANULARITY :: 19;
SPI_SETDESKWALLPAPER :: 20;
SPI_SETDESKPATTERN :: 21;
SPI_GETKEYBOARDDELAY :: 22;
SPI_SETKEYBOARDDELAY :: 23;
SPI_ICONVERTICALSPACING :: 24;
SPI_GETICONTITLEWRAP :: 25;
SPI_SETICONTITLEWRAP :: 26;
SPI_GETMENUDROPALIGNMENT :: 27;
SPI_SETMENUDROPALIGNMENT :: 28;
SPI_SETDOUBLECLKWIDTH :: 29;
SPI_SETDOUBLECLKHEIGHT :: 30;
SPI_GETICONTITLELOGFONT :: 31;
SPI_SETDOUBLECLICKTIME :: 32;
SPI_SETMOUSEBUTTONSWAP :: 33;
SPI_SETICONTITLELOGFONT :: 34;
SPI_GETFASTTASKSWITCH :: 35;
SPI_SETFASTTASKSWITCH :: 36;
SPI_SETDRAGFULLWINDOWS :: 37;
SPI_GETDRAGFULLWINDOWS :: 38;
SPI_GETNONCLIENTMETRICS :: 41;
SPI_SETNONCLIENTMETRICS :: 42;
SPI_GETMINIMIZEDMETRICS :: 43;
SPI_SETMINIMIZEDMETRICS :: 44;
SPI_GETICONMETRICS :: 45;
SPI_SETICONMETRICS :: 46;
SPI_SETWORKAREA :: 47;
SPI_GETWORKAREA :: 48;
SPI_SETPENWINDOWS :: 49;
SPI_GETHIGHCONTRAST :: 66;
SPI_SETHIGHCONTRAST :: 67;
SPI_GETKEYBOARDPREF :: 68;
SPI_SETKEYBOARDPREF :: 69;
SPI_GETSCREENREADER :: 70;
SPI_SETSCREENREADER :: 71;
SPI_GETANIMATION :: 72;
SPI_SETANIMATION :: 73;
SPI_GETFONTSMOOTHING :: 74;
SPI_SETFONTSMOOTHING :: 75;
SPI_SETDRAGWIDTH :: 76;
SPI_SETDRAGHEIGHT :: 77;
SPI_SETHANDHELD :: 78;
SPI_GETLOWPOWERTIMEOUT :: 79;
SPI_GETPOWEROFFTIMEOUT :: 80;
SPI_SETLOWPOWERTIMEOUT :: 81;
SPI_SETPOWEROFFTIMEOUT :: 82;
SPI_GETLOWPOWERACTIVE :: 83;
SPI_GETPOWEROFFACTIVE :: 84;
SPI_SETLOWPOWERACTIVE :: 85;
SPI_SETPOWEROFFACTIVE :: 86;
SPI_SETCURSORS :: 87;
SPI_SETICONS :: 88;
SPI_GETDEFAULTINPUTLANG :: 89;
SPI_SETDEFAULTINPUTLANG :: 90;
SPI_SETLANGTOGGLE :: 91;
SPI_GETWINDOWSEXTENSION :: 92;
SPI_SETMOUSETRAILS :: 93;
SPI_GETMOUSETRAILS :: 94;
SPI_SETSCREENSAVERRUNNING :: 97;
SPI_SCREENSAVERRUNNING :: 97;
SPI_GETFILTERKEYS :: 50;
SPI_SETFILTERKEYS :: 51;
SPI_GETTOGGLEKEYS :: 52;
SPI_SETTOGGLEKEYS :: 53;
SPI_GETMOUSEKEYS :: 54;
SPI_SETMOUSEKEYS :: 55;
SPI_GETSHOWSOUNDS :: 56;
SPI_SETSHOWSOUNDS :: 57;
SPI_GETSTICKYKEYS :: 58;
SPI_SETSTICKYKEYS :: 59;
SPI_GETACCESSTIMEOUT :: 60;
SPI_SETACCESSTIMEOUT :: 61;
SPI_GETSERIALKEYS :: 62;
SPI_SETSERIALKEYS :: 63;
SPI_GETSOUNDSENTRY :: 64;
SPI_SETSOUNDSENTRY :: 65;
SPI_GETSNAPTODEFBUTTON :: 95;
SPI_SETSNAPTODEFBUTTON :: 96;
SPI_GETMOUSEHOVERWIDTH :: 98;
SPI_SETMOUSEHOVERWIDTH :: 99;
SPI_GETMOUSEHOVERHEIGHT :: 100;
SPI_SETMOUSEHOVERHEIGHT :: 101;
SPI_GETMOUSEHOVERTIME :: 102;
SPI_SETMOUSEHOVERTIME :: 103;
SPI_GETWHEELSCROLLLINES :: 104;
SPI_SETWHEELSCROLLLINES :: 105;
SPI_GETMENUSHOWDELAY :: 106;
SPI_SETMENUSHOWDELAY :: 107;
SPI_GETWHEELSCROLLCHARS :: 108;
SPI_SETWHEELSCROLLCHARS :: 109;
SPI_GETSHOWIMEUI :: 110;
SPI_SETSHOWIMEUI :: 111;
SPI_GETMOUSESPEED :: 112;
SPI_SETMOUSESPEED :: 113;
SPI_GETSCREENSAVERRUNNING :: 114;
SPI_GETDESKWALLPAPER :: 115;
SPI_GETAUDIODESCRIPTION :: 116;
SPI_SETAUDIODESCRIPTION :: 117;
SPI_GETSCREENSAVESECURE :: 118;
SPI_SETSCREENSAVESECURE :: 119;
SPI_GETHUNGAPPTIMEOUT :: 120;
SPI_SETHUNGAPPTIMEOUT :: 121;
SPI_GETWAITTOKILLTIMEOUT :: 122;
SPI_SETWAITTOKILLTIMEOUT :: 123;
SPI_GETWAITTOKILLSERVICETIMEOUT :: 124;
SPI_SETWAITTOKILLSERVICETIMEOUT :: 125;
SPI_GETMOUSEDOCKTHRESHOLD :: 126;
SPI_SETMOUSEDOCKTHRESHOLD :: 127;
SPI_GETPENDOCKTHRESHOLD :: 128;
SPI_SETPENDOCKTHRESHOLD :: 129;
SPI_GETWINARRANGING :: 130;
SPI_SETWINARRANGING :: 131;
SPI_GETMOUSEDRAGOUTTHRESHOLD :: 132;
SPI_SETMOUSEDRAGOUTTHRESHOLD :: 133;
SPI_GETPENDRAGOUTTHRESHOLD :: 134;
SPI_SETPENDRAGOUTTHRESHOLD :: 135;
SPI_GETMOUSESIDEMOVETHRESHOLD :: 136;
SPI_SETMOUSESIDEMOVETHRESHOLD :: 137;
SPI_GETPENSIDEMOVETHRESHOLD :: 138;
SPI_SETPENSIDEMOVETHRESHOLD :: 139;
SPI_GETDRAGFROMMAXIMIZE :: 140;
SPI_SETDRAGFROMMAXIMIZE :: 141;
SPI_GETSNAPSIZING :: 142;
SPI_SETSNAPSIZING :: 143;
SPI_GETDOCKMOVING :: 144;
SPI_SETDOCKMOVING :: 145;
SPI_GETTOUCHPREDICTIONPARAMETERS :: 156;
SPI_SETTOUCHPREDICTIONPARAMETERS :: 157;
SPI_GETLOGICALDPIOVERRIDE :: 158;
SPI_SETLOGICALDPIOVERRIDE :: 159;
SPI_GETMENURECT :: 162;
SPI_SETMENURECT :: 163;
SPI_GETACTIVEWINDOWTRACKING :: 4096;
SPI_SETACTIVEWINDOWTRACKING :: 4097;
SPI_GETMENUANIMATION :: 4098;
SPI_SETMENUANIMATION :: 4099;
SPI_GETCOMBOBOXANIMATION :: 4100;
SPI_SETCOMBOBOXANIMATION :: 4101;
SPI_GETLISTBOXSMOOTHSCROLLING :: 4102;
SPI_SETLISTBOXSMOOTHSCROLLING :: 4103;
SPI_GETGRADIENTCAPTIONS :: 4104;
SPI_SETGRADIENTCAPTIONS :: 4105;
SPI_GETKEYBOARDCUES :: 4106;
SPI_SETKEYBOARDCUES :: 4107;
SPI_GETMENUUNDERLINES :: 4106;
SPI_SETMENUUNDERLINES :: 4107;
SPI_GETACTIVEWNDTRKZORDER :: 4108;
SPI_SETACTIVEWNDTRKZORDER :: 4109;
SPI_GETHOTTRACKING :: 4110;
SPI_SETHOTTRACKING :: 4111;
SPI_GETMENUFADE :: 4114;
SPI_SETMENUFADE :: 4115;
SPI_GETSELECTIONFADE :: 4116;
SPI_SETSELECTIONFADE :: 4117;
SPI_GETTOOLTIPANIMATION :: 4118;
SPI_SETTOOLTIPANIMATION :: 4119;
SPI_GETTOOLTIPFADE :: 4120;
SPI_SETTOOLTIPFADE :: 4121;
SPI_GETCURSORSHADOW :: 4122;
SPI_SETCURSORSHADOW :: 4123;
SPI_GETMOUSESONAR :: 4124;
SPI_SETMOUSESONAR :: 4125;
SPI_GETMOUSECLICKLOCK :: 4126;
SPI_SETMOUSECLICKLOCK :: 4127;
SPI_GETMOUSEVANISH :: 4128;
SPI_SETMOUSEVANISH :: 4129;
SPI_GETFLATMENU :: 4130;
SPI_SETFLATMENU :: 4131;
SPI_GETDROPSHADOW :: 4132;
SPI_SETDROPSHADOW :: 4133;
SPI_GETBLOCKSENDINPUTRESETS :: 4134;
SPI_SETBLOCKSENDINPUTRESETS :: 4135;
SPI_GETUIEFFECTS :: 4158;
SPI_SETUIEFFECTS :: 4159;
SPI_GETDISABLEOVERLAPPEDCONTENT :: 4160;
SPI_SETDISABLEOVERLAPPEDCONTENT :: 4161;
SPI_GETCLIENTAREAANIMATION :: 4162;
SPI_SETCLIENTAREAANIMATION :: 4163;
SPI_GETCLEARTYPE :: 4168;
SPI_SETCLEARTYPE :: 4169;
SPI_GETSPEECHRECOGNITION :: 4170;
SPI_SETSPEECHRECOGNITION :: 4171;
SPI_GETCARETBROWSING :: 4172;
SPI_SETCARETBROWSING :: 4173;
SPI_GETTHREADLOCALINPUTSETTINGS :: 4174;
SPI_SETTHREADLOCALINPUTSETTINGS :: 4175;
SPI_GETSYSTEMLANGUAGEBAR :: 4176;
SPI_SETSYSTEMLANGUAGEBAR :: 4177;
SPI_GETFOREGROUNDLOCKTIMEOUT :: 8192;
SPI_SETFOREGROUNDLOCKTIMEOUT :: 8193;
SPI_GETACTIVEWNDTRKTIMEOUT :: 8194;
SPI_SETACTIVEWNDTRKTIMEOUT :: 8195;
SPI_GETFOREGROUNDFLASHCOUNT :: 8196;
SPI_SETFOREGROUNDFLASHCOUNT :: 8197;
SPI_GETCARETWIDTH :: 8198;
SPI_SETCARETWIDTH :: 8199;
SPI_GETMOUSECLICKLOCKTIME :: 8200;
SPI_SETMOUSECLICKLOCKTIME :: 8201;
SPI_GETFONTSMOOTHINGTYPE :: 8202;
SPI_SETFONTSMOOTHINGTYPE :: 8203;
SPI_GETFONTSMOOTHINGCONTRAST :: 8204;
SPI_SETFONTSMOOTHINGCONTRAST :: 8205;
SPI_GETFOCUSBORDERWIDTH :: 8206;
SPI_SETFOCUSBORDERWIDTH :: 8207;
SPI_GETFOCUSBORDERHEIGHT :: 8208;
SPI_SETFOCUSBORDERHEIGHT :: 8209;
SPI_GETFONTSMOOTHINGORIENTATION :: 8210;
SPI_SETFONTSMOOTHINGORIENTATION :: 8211;
SPI_GETMINIMUMHITRADIUS :: 8212;
SPI_SETMINIMUMHITRADIUS :: 8213;
SPI_GETMESSAGEDURATION :: 8214;
SPI_SETMESSAGEDURATION :: 8215;
SPI_GETCONTACTVISUALIZATION :: 8216;
SPI_SETCONTACTVISUALIZATION :: 8217;
SPI_GETGESTUREVISUALIZATION :: 8218;
SPI_SETGESTUREVISUALIZATION :: 8219;
SPI_GETMOUSEWHEELROUTING :: 8220;
SPI_SETMOUSEWHEELROUTING :: 8221;
SPI_GETPENVISUALIZATION :: 8222;
SPI_SETPENVISUALIZATION :: 8223;
SPI_GETPENARBITRATIONTYPE :: 8224;
SPI_SETPENARBITRATIONTYPE :: 8225;
SPI_GETCARETTIMEOUT :: 8226;
SPI_SETCARETTIMEOUT :: 8227;
SPI_GETHANDEDNESS :: 8228;
SPI_SETHANDEDNESS :: 8229;

SYSTEM_PARAMETERS_INFO_UPDATE_FLAGS :: enum_flags u32
{
    SPIF_UPDATEINIFILE :: 1;
    SPIF_SENDCHANGE :: 2;
    SPIF_SENDWININICHANGE :: 2;
}

SPIF_UPDATEINIFILE :: 1;
SPIF_SENDCHANGE :: 2;
SPIF_SENDWININICHANGE :: 2;

SYS_COLOR_INDEX :: enum u32
{
    COLOR_3DDKSHADOW :: 21;
    COLOR_3DFACE :: 15;
    COLOR_3DHIGHLIGHT :: 20;
    COLOR_3DHILIGHT :: 20;
    COLOR_3DLIGHT :: 22;
    COLOR_3DSHADOW :: 16;
    COLOR_ACTIVEBORDER :: 10;
    COLOR_ACTIVECAPTION :: 2;
    COLOR_APPWORKSPACE :: 12;
    COLOR_BACKGROUND :: 1;
    COLOR_BTNFACE :: 15;
    COLOR_BTNHIGHLIGHT :: 20;
    COLOR_BTNHILIGHT :: 20;
    COLOR_BTNSHADOW :: 16;
    COLOR_BTNTEXT :: 18;
    COLOR_CAPTIONTEXT :: 9;
    COLOR_DESKTOP :: 1;
    COLOR_GRADIENTACTIVECAPTION :: 27;
    COLOR_GRADIENTINACTIVECAPTION :: 28;
    COLOR_GRAYTEXT :: 17;
    COLOR_HIGHLIGHT :: 13;
    COLOR_HIGHLIGHTTEXT :: 14;
    COLOR_HOTLIGHT :: 26;
    COLOR_INACTIVEBORDER :: 11;
    COLOR_INACTIVECAPTION :: 3;
    COLOR_INACTIVECAPTIONTEXT :: 19;
    COLOR_INFOBK :: 24;
    COLOR_INFOTEXT :: 23;
    COLOR_MENU :: 4;
    COLOR_MENUHILIGHT :: 29;
    COLOR_MENUBAR :: 30;
    COLOR_MENUTEXT :: 7;
    COLOR_SCROLLBAR :: 0;
    COLOR_WINDOW :: 5;
    COLOR_WINDOWFRAME :: 6;
    COLOR_WINDOWTEXT :: 8;
}

COLOR_3DDKSHADOW :: 21;
COLOR_3DFACE :: 15;
COLOR_3DHIGHLIGHT :: 20;
COLOR_3DHILIGHT :: 20;
COLOR_3DLIGHT :: 22;
COLOR_3DSHADOW :: 16;
COLOR_ACTIVEBORDER :: 10;
COLOR_ACTIVECAPTION :: 2;
COLOR_APPWORKSPACE :: 12;
COLOR_BACKGROUND :: 1;
COLOR_BTNFACE :: 15;
_COLOR_BTNHIGHLIGHT :: 20;
_COLOR_BTNHILIGHT :: 20;
COLOR_BTNSHADOW :: 16;
COLOR_BTNTEXT :: 18;
COLOR_CAPTIONTEXT :: 9;
COLOR_DESKTOP :: 1;
COLOR_GRADIENTACTIVECAPTION :: 27;
COLOR_GRADIENTINACTIVECAPTION :: 28;
COLOR_GRAYTEXT :: 17;
COLOR_HIGHLIGHT :: 13;
COLOR_HIGHLIGHTTEXT :: 14;
COLOR_HOTLIGHT :: 26;
COLOR_INACTIVEBORDER :: 11;
COLOR_INACTIVECAPTION :: 3;
COLOR_INACTIVECAPTIONTEXT :: 19;
COLOR_INFOBK :: 24;
COLOR_INFOTEXT :: 23;
COLOR_MENU :: 4;
COLOR_MENUHILIGHT :: 29;
COLOR_MENUBAR :: 30;
COLOR_MENUTEXT :: 7;
COLOR_SCROLLBAR :: 0;
COLOR_WINDOW :: 5;
COLOR_WINDOWFRAME :: 6;
COLOR_WINDOWTEXT :: 8;

TILE_WINDOWS_HOW :: enum u32
{
    MDITILE_HORIZONTAL :: 1;
    MDITILE_VERTICAL :: 0;
}

MDITILE_HORIZONTAL :: 1;
MDITILE_VERTICAL :: 0;

TIMERPROC :: #type (param0 : HWND, param1 : u32, param2 : u64, param3 : u32) -> void #c_call;

TITLEBARINFO :: struct
{
    cbSize : u32;
    rcTitleBar : RECT;
    rgstate : [6]u32;
}

TITLEBARINFOEX :: struct
{
    cbSize : u32;
    rcTitleBar : RECT;
    rgstate : [6]u32;
    rgrect : [6]RECT;
}

TPMPARAMS :: struct
{
    cbSize : u32;
    rcExclude : RECT;
}

TRACK_POPUP_MENU_FLAGS :: enum_flags u32
{
    TPM_LEFTBUTTON :: 0;
    TPM_RIGHTBUTTON :: 2;
    TPM_LEFTALIGN :: 0;
    TPM_CENTERALIGN :: 4;
    TPM_RIGHTALIGN :: 8;
    TPM_TOPALIGN :: 0;
    TPM_VCENTERALIGN :: 16;
    TPM_BOTTOMALIGN :: 32;
    TPM_HORIZONTAL :: 0;
    TPM_VERTICAL :: 64;
    TPM_NONOTIFY :: 128;
    TPM_RETURNCMD :: 256;
    TPM_RECURSE :: 1;
    TPM_HORPOSANIMATION :: 1024;
    TPM_HORNEGANIMATION :: 2048;
    TPM_VERPOSANIMATION :: 4096;
    TPM_VERNEGANIMATION :: 8192;
    TPM_NOANIMATION :: 16384;
    TPM_LAYOUTRTL :: 32768;
    TPM_WORKAREA :: 65536;
}

TPM_LEFTBUTTON :: 0;
TPM_RIGHTBUTTON :: 2;
TPM_LEFTALIGN :: 0;
TPM_CENTERALIGN :: 4;
TPM_RIGHTALIGN :: 8;
TPM_TOPALIGN :: 0;
TPM_VCENTERALIGN :: 16;
TPM_BOTTOMALIGN :: 32;
TPM_HORIZONTAL :: 0;
TPM_VERTICAL :: 64;
TPM_NONOTIFY :: 128;
TPM_RETURNCMD :: 256;
TPM_RECURSE :: 1;
TPM_HORPOSANIMATION :: 1024;
TPM_HORNEGANIMATION :: 2048;
TPM_VERPOSANIMATION :: 4096;
TPM_VERNEGANIMATION :: 8192;
TPM_NOANIMATION :: 16384;
TPM_LAYOUTRTL :: 32768;
TPM_WORKAREA :: 65536;

TouchPredictionParameters :: struct
{
    cbSize : u32;
    dwLatency : u32;
    dwSampleTime : u32;
    bUseHWTimeStamp : u32;
}

UPDATELAYEREDWINDOWINFO :: struct
{
    cbSize : u32;
    hdcDst : HDC;
    pptDst : *POINT; // Const
    psize : *SIZE; // Const
    hdcSrc : HDC;
    pptSrc : *POINT; // Const
    crKey : u32;
    pblend : *BLENDFUNCTION; // Const
    dwFlags : UPDATE_LAYERED_WINDOW_FLAGS;
    prcDirty : *RECT; // Const
}

UPDATE_LAYERED_WINDOW_FLAGS :: enum u32
{
    ULW_ALPHA :: 2;
    ULW_COLORKEY :: 1;
    ULW_OPAQUE :: 4;
    ULW_EX_NORESIZE :: 8;
}

ULW_ALPHA :: 2;
ULW_COLORKEY :: 1;
ULW_OPAQUE :: 4;
ULW_EX_NORESIZE :: 8;

WINDOWINFO :: struct
{
    cbSize : u32;
    rcWindow : RECT;
    rcClient : RECT;
    dwStyle : u32;
    dwExStyle : u32;
    dwWindowStatus : u32;
    cxWindowBorders : u32;
    cyWindowBorders : u32;
    atomWindowType : u16;
    wCreatorVersion : u16;
}

WINDOWPLACEMENT :: struct
{
    length : u32;
    flags : WINDOWPLACEMENT_FLAGS;
    showCmd : SHOW_WINDOW_CMD;
    ptMinPosition : POINT;
    ptMaxPosition : POINT;
    rcNormalPosition : RECT;
}

WINDOWPLACEMENT_FLAGS :: enum_flags u32
{
    WPF_ASYNCWINDOWPLACEMENT :: 4;
    WPF_RESTORETOMAXIMIZED :: 2;
    WPF_SETMINPOSITION :: 1;
}

WPF_ASYNCWINDOWPLACEMENT :: 4;
WPF_RESTORETOMAXIMIZED :: 2;
WPF_SETMINPOSITION :: 1;

WINDOWPOS :: struct
{
    hwnd : HWND;
    hwndInsertAfter : HWND;
    x : s32;
    y : s32;
    cx : s32;
    cy : s32;
    flags : SET_WINDOW_POS_FLAGS;
}

WINDOWS_HOOK_ID :: enum s32
{
    WH_CALLWNDPROC :: 4;
    WH_CALLWNDPROCRET :: 12;
    WH_CBT :: 5;
    WH_DEBUG :: 9;
    WH_FOREGROUNDIDLE :: 11;
    WH_GETMESSAGE :: 3;
    WH_JOURNALPLAYBACK :: 1;
    WH_JOURNALRECORD :: 0;
    WH_KEYBOARD :: 2;
    WH_KEYBOARD_LL :: 13;
    WH_MOUSE :: 7;
    WH_MOUSE_LL :: 14;
    WH_MSGFILTER :: -1;
    WH_SHELL :: 10;
    WH_SYSMSGFILTER :: 6;
}

WH_CALLWNDPROC :: 4;
WH_CALLWNDPROCRET :: 12;
WH_CBT :: 5;
WH_DEBUG :: 9;
WH_FOREGROUNDIDLE :: 11;
WH_GETMESSAGE :: 3;
WH_JOURNALPLAYBACK :: 1;
WH_JOURNALRECORD :: 0;
WH_KEYBOARD :: 2;
WH_KEYBOARD_LL :: 13;
WH_MOUSE :: 7;
WH_MOUSE_LL :: 14;
WH_MSGFILTER :: -1;
WH_SHELL :: 10;
WH_SYSMSGFILTER :: 6;

WINDOW_DISPLAY_AFFINITY :: enum u32
{
    WDA_NONE :: 0;
    WDA_MONITOR :: 1;
    WDA_EXCLUDEFROMCAPTURE :: 17;
}

WDA_NONE :: 0;
WDA_MONITOR :: 1;
WDA_EXCLUDEFROMCAPTURE :: 17;

WINDOW_EX_STYLE :: enum_flags u32
{
    WS_EX_DLGMODALFRAME :: 1;
    WS_EX_NOPARENTNOTIFY :: 4;
    WS_EX_TOPMOST :: 8;
    WS_EX_ACCEPTFILES :: 16;
    WS_EX_TRANSPARENT :: 32;
    WS_EX_MDICHILD :: 64;
    WS_EX_TOOLWINDOW :: 128;
    WS_EX_WINDOWEDGE :: 256;
    WS_EX_CLIENTEDGE :: 512;
    WS_EX_CONTEXTHELP :: 1024;
    WS_EX_RIGHT :: 4096;
    WS_EX_LEFT :: 0;
    WS_EX_RTLREADING :: 8192;
    WS_EX_LTRREADING :: 0;
    WS_EX_LEFTSCROLLBAR :: 16384;
    WS_EX_RIGHTSCROLLBAR :: 0;
    WS_EX_CONTROLPARENT :: 65536;
    WS_EX_STATICEDGE :: 131072;
    WS_EX_APPWINDOW :: 262144;
    WS_EX_OVERLAPPEDWINDOW :: 768;
    WS_EX_PALETTEWINDOW :: 392;
    WS_EX_LAYERED :: 524288;
    WS_EX_NOINHERITLAYOUT :: 1048576;
    WS_EX_NOREDIRECTIONBITMAP :: 2097152;
    WS_EX_LAYOUTRTL :: 4194304;
    WS_EX_COMPOSITED :: 33554432;
    WS_EX_NOACTIVATE :: 134217728;
}

WS_EX_DLGMODALFRAME :: 1;
WS_EX_NOPARENTNOTIFY :: 4;
WS_EX_TOPMOST :: 8;
WS_EX_ACCEPTFILES :: 16;
WS_EX_TRANSPARENT :: 32;
WS_EX_MDICHILD :: 64;
WS_EX_TOOLWINDOW :: 128;
WS_EX_WINDOWEDGE :: 256;
WS_EX_CLIENTEDGE :: 512;
WS_EX_CONTEXTHELP :: 1024;
WS_EX_RIGHT :: 4096;
WS_EX_LEFT :: 0;
WS_EX_RTLREADING :: 8192;
WS_EX_LTRREADING :: 0;
WS_EX_LEFTSCROLLBAR :: 16384;
WS_EX_RIGHTSCROLLBAR :: 0;
WS_EX_CONTROLPARENT :: 65536;
WS_EX_STATICEDGE :: 131072;
WS_EX_APPWINDOW :: 262144;
WS_EX_OVERLAPPEDWINDOW :: 768;
WS_EX_PALETTEWINDOW :: 392;
WS_EX_LAYERED :: 524288;
WS_EX_NOINHERITLAYOUT :: 1048576;
WS_EX_NOREDIRECTIONBITMAP :: 2097152;
WS_EX_LAYOUTRTL :: 4194304;
WS_EX_COMPOSITED :: 33554432;
WS_EX_NOACTIVATE :: 134217728;

WINDOW_LONG_PTR_INDEX :: enum s32
{
    GWL_EXSTYLE :: -20;
    GWLP_HINSTANCE :: -6;
    GWLP_HWNDPARENT :: -8;
    GWLP_ID :: -12;
    GWL_STYLE :: -16;
    GWLP_USERDATA :: -21;
    GWLP_WNDPROC :: -4;
    GWL_HINSTANCE :: -6;
    GWL_ID :: -12;
    GWL_USERDATA :: -21;
    GWL_WNDPROC :: -4;
    GWL_HWNDPARENT :: -8;
}

GWL_EXSTYLE :: -20;
GWLP_HINSTANCE :: -6;
GWLP_HWNDPARENT :: -8;
GWLP_ID :: -12;
GWL_STYLE :: -16;
GWLP_USERDATA :: -21;
GWLP_WNDPROC :: -4;
GWL_HINSTANCE :: -6;
GWL_ID :: -12;
GWL_USERDATA :: -21;
GWL_WNDPROC :: -4;
GWL_HWNDPARENT :: -8;

WINDOW_MESSAGE_FILTER_ACTION :: enum u32
{
    MSGFLT_ALLOW :: 1;
    MSGFLT_DISALLOW :: 2;
    MSGFLT_RESET :: 0;
}

MSGFLT_ALLOW :: 1;
MSGFLT_DISALLOW :: 2;
MSGFLT_RESET :: 0;

WINDOW_STYLE :: enum_flags u32
{
    WS_OVERLAPPED :: 0;
    WS_POPUP :: 2147483648;
    WS_CHILD :: 1073741824;
    WS_MINIMIZE :: 536870912;
    WS_VISIBLE :: 268435456;
    WS_DISABLED :: 134217728;
    WS_CLIPSIBLINGS :: 67108864;
    WS_CLIPCHILDREN :: 33554432;
    WS_MAXIMIZE :: 16777216;
    WS_CAPTION :: 12582912;
    WS_BORDER :: 8388608;
    WS_DLGFRAME :: 4194304;
    WS_VSCROLL :: 2097152;
    WS_HSCROLL :: 1048576;
    WS_SYSMENU :: 524288;
    WS_THICKFRAME :: 262144;
    WS_GROUP :: 131072;
    WS_TABSTOP :: 65536;
    WS_MINIMIZEBOX :: 131072;
    WS_MAXIMIZEBOX :: 65536;
    WS_TILED :: 0;
    WS_ICONIC :: 536870912;
    WS_SIZEBOX :: 262144;
    WS_TILEDWINDOW :: 13565952;
    WS_OVERLAPPEDWINDOW :: 13565952;
    WS_POPUPWINDOW :: 2156396544;
    WS_CHILDWINDOW :: 1073741824;
    WS_ACTIVECAPTION :: 1;
}

WS_OVERLAPPED :: 0;
WS_POPUP :: 2147483648;
WS_CHILD :: 1073741824;
WS_MINIMIZE :: 536870912;
WS_VISIBLE :: 268435456;
WS_DISABLED :: 134217728;
WS_CLIPSIBLINGS :: 67108864;
WS_CLIPCHILDREN :: 33554432;
WS_MAXIMIZE :: 16777216;
WS_CAPTION :: 12582912;
WS_BORDER :: 8388608;
WS_DLGFRAME :: 4194304;
WS_VSCROLL :: 2097152;
WS_HSCROLL :: 1048576;
WS_SYSMENU :: 524288;
WS_THICKFRAME :: 262144;
WS_GROUP :: 131072;
WS_TABSTOP :: 65536;
WS_MINIMIZEBOX :: 131072;
WS_MAXIMIZEBOX :: 65536;
WS_TILED :: 0;
WS_ICONIC :: 536870912;
WS_SIZEBOX :: 262144;
WS_TILEDWINDOW :: 13565952;
WS_OVERLAPPEDWINDOW :: 13565952;
WS_POPUPWINDOW :: 2156396544;
WS_CHILDWINDOW :: 1073741824;
WS_ACTIVECAPTION :: 1;

WNDCLASSA :: struct
{
    style : WNDCLASS_STYLES;
    lpfnWndProc : WNDPROC;
    cbClsExtra : s32;
    cbWndExtra : s32;
    hInstance : HINSTANCE;
    hIcon : HICON; // Optional
    hCursor : HCURSOR; // Optional
    hbrBackground : HBRUSH; // Optional
    lpszMenuName : PSTR; // Optional | Const
    lpszClassName : PSTR; // Const
}

WNDCLASSEXA :: struct
{
    cbSize : u32;
    style : WNDCLASS_STYLES;
    lpfnWndProc : WNDPROC;
    cbClsExtra : s32;
    cbWndExtra : s32;
    hInstance : HINSTANCE;
    hIcon : HICON;
    hCursor : HCURSOR;
    hbrBackground : HBRUSH;
    lpszMenuName : PSTR; // Const
    lpszClassName : PSTR; // Const
    hIconSm : HICON;
}

WNDCLASSEXW :: struct
{
    cbSize : u32;
    style : WNDCLASS_STYLES;
    lpfnWndProc : WNDPROC;
    cbClsExtra : s32;
    cbWndExtra : s32;
    hInstance : HINSTANCE;
    hIcon : HICON;
    hCursor : HCURSOR;
    hbrBackground : HBRUSH;
    lpszMenuName : PWSTR; // Const
    lpszClassName : PWSTR; // Const
    hIconSm : HICON;
}

WNDCLASSW :: struct
{
    style : WNDCLASS_STYLES;
    lpfnWndProc : WNDPROC;
    cbClsExtra : s32;
    cbWndExtra : s32;
    hInstance : HINSTANCE;
    hIcon : HICON; // Optional
    hCursor : HCURSOR; // Optional
    hbrBackground : HBRUSH; // Optional
    lpszMenuName : PWSTR; // Optional | Const
    lpszClassName : PWSTR; // Const
}

WNDCLASS_STYLES :: enum_flags u32
{
    CS_VREDRAW :: 1;
    CS_HREDRAW :: 2;
    CS_DBLCLKS :: 8;
    CS_OWNDC :: 32;
    CS_CLASSDC :: 64;
    CS_PARENTDC :: 128;
    CS_NOCLOSE :: 512;
    CS_SAVEBITS :: 2048;
    CS_BYTEALIGNCLIENT :: 4096;
    CS_BYTEALIGNWINDOW :: 8192;
    CS_GLOBALCLASS :: 16384;
    CS_IME :: 65536;
    CS_DROPSHADOW :: 131072;
}

CS_VREDRAW :: 1;
CS_HREDRAW :: 2;
CS_DBLCLKS :: 8;
CS_OWNDC :: 32;
CS_CLASSDC :: 64;
CS_PARENTDC :: 128;
CS_NOCLOSE :: 512;
CS_SAVEBITS :: 2048;
CS_BYTEALIGNCLIENT :: 4096;
CS_BYTEALIGNWINDOW :: 8192;
CS_GLOBALCLASS :: 16384;
CS_IME :: 65536;
CS_DROPSHADOW :: 131072;

WNDENUMPROC :: #type (param0 : HWND, param1 : LPARAM) -> BOOL #c_call;

WNDPROC :: #type (param0 : HWND, param1 : u32, param2 : WPARAM, param3 : LPARAM) -> LRESULT #c_call;

// Functions

AddClipboardFormatListener :: (hwnd : HWND) -> BOOL #foreign USER32;
AdjustWindowRect :: (lpRect : *RECT, dwStyle : WINDOW_STYLE, bMenu : BOOL) -> BOOL #foreign USER32;
AdjustWindowRectEx :: (lpRect : *RECT, dwStyle : WINDOW_STYLE, bMenu : BOOL, dwExStyle : WINDOW_EX_STYLE) -> BOOL #foreign USER32;
AllowSetForegroundWindow :: (dwProcessId : u32) -> BOOL #foreign USER32;
AnimateWindow :: (hWnd : HWND, dwTime : u32, dwFlags : ANIMATE_WINDOW_FLAGS) -> BOOL #foreign USER32;
AnyPopup :: () -> BOOL #foreign USER32;
AppendMenuA :: (hMenu : HMENU, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PSTR) -> BOOL #foreign USER32;
AppendMenuW :: (hMenu : HMENU, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PWSTR) -> BOOL #foreign USER32;
ArrangeIconicWindows :: (hWnd : HWND) -> u32 #foreign USER32;
BeginDeferWindowPos :: (nNumWindows : s32) -> s64 #foreign USER32;
BringWindowToTop :: (hWnd : HWND) -> BOOL #foreign USER32;
CalculatePopupWindowPosition :: (anchorPoint : *POINT, windowSize : *SIZE, flags : u32, excludeRect : *RECT, popupWindowPosition : *RECT) -> BOOL #foreign USER32;
CallMsgFilterA :: (lpMsg : *MSG, nCode : s32) -> BOOL #foreign USER32;
CallMsgFilterW :: (lpMsg : *MSG, nCode : s32) -> BOOL #foreign USER32;
CallNextHookEx :: (hhk : HHOOK, nCode : s32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
CallWindowProcA :: (lpPrevWndFunc : WNDPROC, hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
CallWindowProcW :: (lpPrevWndFunc : WNDPROC, hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
CancelShutdown :: () -> BOOL #foreign USER32;
CascadeWindows :: (hwndParent : HWND, wHow : CASCADE_WINDOWS_HOW, lpRect : *RECT, cKids : u32, lpKids : *HWND) -> u16 #foreign USER32;
ChangeClipboardChain :: (hWndRemove : HWND, hWndNewNext : HWND) -> BOOL #foreign USER32;
ChangeMenuA :: (hMenu : HMENU, cmd : u32, lpszNewItem : PSTR, cmdInsert : u32, flags : u32) -> BOOL #foreign USER32;
ChangeMenuW :: (hMenu : HMENU, cmd : u32, lpszNewItem : PWSTR, cmdInsert : u32, flags : u32) -> BOOL #foreign USER32;
ChangeWindowMessageFilter :: (message : u32, dwFlag : CHANGE_WINDOW_MESSAGE_FILTER_FLAGS) -> BOOL #foreign USER32;
ChangeWindowMessageFilterEx :: (hwnd : HWND, message : u32, action : WINDOW_MESSAGE_FILTER_ACTION, pChangeFilterStruct : *CHANGEFILTERSTRUCT) -> BOOL #foreign USER32;
CharLowerA :: (lpsz : PSTR) -> PSTR #foreign USER32;
CharLowerBuffA :: (lpsz : *u8, cchLength : u32) -> u32 #foreign USER32;
CharLowerBuffW :: (lpsz : *u16, cchLength : u32) -> u32 #foreign USER32;
CharLowerW :: (lpsz : PWSTR) -> PWSTR #foreign USER32;
CharNextA :: (lpsz : PSTR) -> PSTR #foreign USER32;
CharNextExA :: (CodePage : u16, lpCurrentChar : PSTR, dwFlags : u32) -> PSTR #foreign USER32;
CharNextW :: (lpsz : PWSTR) -> PWSTR #foreign USER32;
CharPrevA :: (lpszStart : PSTR, lpszCurrent : PSTR) -> PSTR #foreign USER32;
CharPrevExA :: (CodePage : u16, lpStart : PSTR, lpCurrentChar : PSTR, dwFlags : u32) -> PSTR #foreign USER32;
CharPrevW :: (lpszStart : PWSTR, lpszCurrent : PWSTR) -> PWSTR #foreign USER32;
CharToOemA :: (pSrc : PSTR, pDst : PSTR) -> BOOL #foreign USER32;
CharToOemBuffA :: (lpszSrc : PSTR, lpszDst : *u8, cchDstLength : u32) -> BOOL #foreign USER32;
CharToOemBuffW :: (lpszSrc : PWSTR, lpszDst : *u8, cchDstLength : u32) -> BOOL #foreign USER32;
CharToOemW :: (pSrc : PWSTR, pDst : PSTR) -> BOOL #foreign USER32;
CharUpperA :: (lpsz : PSTR) -> PSTR #foreign USER32;
CharUpperBuffA :: (lpsz : *u8, cchLength : u32) -> u32 #foreign USER32;
CharUpperBuffW :: (lpsz : *u16, cchLength : u32) -> u32 #foreign USER32;
CharUpperW :: (lpsz : PWSTR) -> PWSTR #foreign USER32;
CheckMenuItem :: (hMenu : HMENU, uIDCheckItem : u32, uCheck : u32) -> u32 #foreign USER32;
CheckMenuRadioItem :: (hmenu : HMENU, first : u32, last : u32, check : u32, flags : u32) -> BOOL #foreign USER32;
ChildWindowFromPoint :: (hWndParent : HWND, Point : POINT) -> HWND #foreign USER32;
ChildWindowFromPointEx :: (hwnd : HWND, pt : POINT, flags : CWP_FLAGS) -> HWND #foreign USER32;
ClipCursor :: (lpRect : *RECT) -> BOOL #foreign USER32;
CloseClipboard :: () -> BOOL #foreign USER32;
CloseWindow :: (hWnd : HWND) -> BOOL #foreign USER32;
CopyAcceleratorTableA :: (hAccelSrc : HACCEL, lpAccelDst : *ACCEL, cAccelEntries : s32) -> s32 #foreign USER32;
CopyAcceleratorTableW :: (hAccelSrc : HACCEL, lpAccelDst : *ACCEL, cAccelEntries : s32) -> s32 #foreign USER32;
CopyIcon :: (hIcon : HICON) -> HICON #foreign USER32;
CopyImage :: (h : HANDLE, type : GDI_IMAGE_TYPE, cx : s32, cy : s32, flags : IMAGE_FLAGS) -> HANDLE #foreign USER32;
CountClipboardFormats :: () -> s32 #foreign USER32;
CreateAcceleratorTableA :: (paccel : *ACCEL, cAccel : s32) -> HACCEL #foreign USER32;
CreateAcceleratorTableW :: (paccel : *ACCEL, cAccel : s32) -> HACCEL #foreign USER32;
CreateCaret :: (hWnd : HWND, hBitmap : HBITMAP, nWidth : s32, nHeight : s32) -> BOOL #foreign USER32;
CreateCursor :: (hInst : HINSTANCE, xHotSpot : s32, yHotSpot : s32, nWidth : s32, nHeight : s32, pvANDPlane : *void, pvXORPlane : *void) -> HCURSOR #foreign USER32;
CreateDialogIndirectParamA :: (hInstance : HINSTANCE, lpTemplate : *DLGTEMPLATE, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> HWND #foreign USER32;
CreateDialogIndirectParamW :: (hInstance : HINSTANCE, lpTemplate : *DLGTEMPLATE, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> HWND #foreign USER32;
CreateDialogParamA :: (hInstance : HINSTANCE, lpTemplateName : PSTR, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> HWND #foreign USER32;
CreateDialogParamW :: (hInstance : HINSTANCE, lpTemplateName : PWSTR, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> HWND #foreign USER32;
CreateIcon :: (hInstance : HINSTANCE, nWidth : s32, nHeight : s32, cPlanes : u8, cBitsPixel : u8, lpbANDbits : *u8, lpbXORbits : *u8) -> HICON #foreign USER32;
CreateIconFromResource :: (presbits : *u8, dwResSize : u32, fIcon : BOOL, dwVer : u32) -> HICON #foreign USER32;
CreateIconFromResourceEx :: (presbits : *u8, dwResSize : u32, fIcon : BOOL, dwVer : u32, cxDesired : s32, cyDesired : s32, Flags : IMAGE_FLAGS) -> HICON #foreign USER32;
CreateIconIndirect :: (piconinfo : *ICONINFO) -> HICON #foreign USER32;
CreateMDIWindowA :: (lpClassName : PSTR, lpWindowName : PSTR, dwStyle : WINDOW_STYLE, X : s32, Y : s32, nWidth : s32, nHeight : s32, hWndParent : HWND, hInstance : HINSTANCE, lParam : LPARAM) -> HWND #foreign USER32;
CreateMDIWindowW :: (lpClassName : PWSTR, lpWindowName : PWSTR, dwStyle : WINDOW_STYLE, X : s32, Y : s32, nWidth : s32, nHeight : s32, hWndParent : HWND, hInstance : HINSTANCE, lParam : LPARAM) -> HWND #foreign USER32;
CreateMenu :: () -> HMENU #foreign USER32;
CreatePopupMenu :: () -> HMENU #foreign USER32;
CreateWindowExA :: (dwExStyle : WINDOW_EX_STYLE, lpClassName : PSTR, lpWindowName : PSTR, dwStyle : WINDOW_STYLE, X : s32, Y : s32, nWidth : s32, nHeight : s32, hWndParent : HWND, hMenu : HMENU, hInstance : HINSTANCE, lpParam : *void) -> HWND #foreign USER32;
CreateWindowExW :: (dwExStyle : WINDOW_EX_STYLE, lpClassName : PWSTR, lpWindowName : PWSTR, dwStyle : WINDOW_STYLE, X : s32, Y : s32, nWidth : s32, nHeight : s32, hWndParent : HWND, hMenu : HMENU, hInstance : HINSTANCE, lpParam : *void) -> HWND #foreign USER32;
DefDlgProcA :: (hDlg : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefDlgProcW :: (hDlg : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefFrameProcA :: (hWnd : HWND, hWndMDIClient : HWND, uMsg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefFrameProcW :: (hWnd : HWND, hWndMDIClient : HWND, uMsg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefMDIChildProcA :: (hWnd : HWND, uMsg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefMDIChildProcW :: (hWnd : HWND, uMsg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefWindowProcA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DefWindowProcW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
DeferWindowPos :: (hWinPosInfo : s64, hWnd : HWND, hWndInsertAfter : HWND, x : s32, y : s32, cx : s32, cy : s32, uFlags : SET_WINDOW_POS_FLAGS) -> s64 #foreign USER32;
DeleteMenu :: (hMenu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS) -> BOOL #foreign USER32;
DeregisterShellHookWindow :: (hwnd : HWND) -> BOOL #foreign USER32;
DestroyAcceleratorTable :: (hAccel : HACCEL) -> BOOL #foreign USER32;
DestroyCaret :: () -> BOOL #foreign USER32;
DestroyCursor :: (hCursor : HCURSOR) -> BOOL #foreign USER32;
DestroyIcon :: (hIcon : HICON) -> BOOL #foreign USER32;
DestroyMenu :: (hMenu : HMENU) -> BOOL #foreign USER32;
DestroyWindow :: (hWnd : HWND) -> BOOL #foreign USER32;
DialogBoxIndirectParamA :: (hInstance : HINSTANCE, hDialogTemplate : *DLGTEMPLATE, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> s64 #foreign USER32;
DialogBoxIndirectParamW :: (hInstance : HINSTANCE, hDialogTemplate : *DLGTEMPLATE, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> s64 #foreign USER32;
DialogBoxParamA :: (hInstance : HINSTANCE, lpTemplateName : PSTR, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> s64 #foreign USER32;
DialogBoxParamW :: (hInstance : HINSTANCE, lpTemplateName : PWSTR, hWndParent : HWND, lpDialogFunc : DLGPROC, dwInitParam : LPARAM) -> s64 #foreign USER32;
DisableProcessWindowsGhosting :: ()  #foreign USER32;
DispatchMessageA :: (lpMsg : *MSG) -> LRESULT #foreign USER32;
DispatchMessageW :: (lpMsg : *MSG) -> LRESULT #foreign USER32;
DragObject :: (hwndParent : HWND, hwndFrom : HWND, fmt : u32, data : u64, hcur : HCURSOR) -> u32 #foreign USER32;
DrawIcon :: (hDC : HDC, X : s32, Y : s32, hIcon : HICON) -> BOOL #foreign USER32;
DrawIconEx :: (hdc : HDC, xLeft : s32, yTop : s32, hIcon : HICON, cxWidth : s32, cyWidth : s32, istepIfAniCur : u32, hbrFlickerFreeDraw : HBRUSH, diFlags : DI_FLAGS) -> BOOL #foreign USER32;
DrawMenuBar :: (hWnd : HWND) -> BOOL #foreign USER32;
EmptyClipboard :: () -> BOOL #foreign USER32;
EnableMenuItem :: (hMenu : HMENU, uIDEnableItem : u32, uEnable : MENU_ITEM_FLAGS) -> BOOL #foreign USER32;
EndDeferWindowPos :: (hWinPosInfo : s64) -> BOOL #foreign USER32;
EndDialog :: (hDlg : HWND, nResult : s64) -> BOOL #foreign USER32;
EndMenu :: () -> BOOL #foreign USER32;
EnumChildWindows :: (hWndParent : HWND, lpEnumFunc : WNDENUMPROC, lParam : LPARAM) -> BOOL #foreign USER32;
EnumClipboardFormats :: (format : u32) -> u32 #foreign USER32;
EnumPropsA :: (hWnd : HWND, lpEnumFunc : PROPENUMPROCA) -> s32 #foreign USER32;
EnumPropsExA :: (hWnd : HWND, lpEnumFunc : PROPENUMPROCEXA, lParam : LPARAM) -> s32 #foreign USER32;
EnumPropsExW :: (hWnd : HWND, lpEnumFunc : PROPENUMPROCEXW, lParam : LPARAM) -> s32 #foreign USER32;
EnumPropsW :: (hWnd : HWND, lpEnumFunc : PROPENUMPROCW) -> s32 #foreign USER32;
EnumThreadWindows :: (dwThreadId : u32, lpfn : WNDENUMPROC, lParam : LPARAM) -> BOOL #foreign USER32;
EnumWindows :: (lpEnumFunc : WNDENUMPROC, lParam : LPARAM) -> BOOL #foreign USER32;
FindWindowA :: (lpClassName : PSTR, lpWindowName : PSTR) -> HWND #foreign USER32;
FindWindowExA :: (hWndParent : HWND, hWndChildAfter : HWND, lpszClass : PSTR, lpszWindow : PSTR) -> HWND #foreign USER32;
FindWindowExW :: (hWndParent : HWND, hWndChildAfter : HWND, lpszClass : PWSTR, lpszWindow : PWSTR) -> HWND #foreign USER32;
FindWindowW :: (lpClassName : PWSTR, lpWindowName : PWSTR) -> HWND #foreign USER32;
FlashWindow :: (hWnd : HWND, bInvert : BOOL) -> BOOL #foreign USER32;
FlashWindowEx :: (pfwi : *FLASHWINFO) -> BOOL #foreign USER32;
GetAltTabInfoA :: (hwnd : HWND, iItem : s32, pati : *ALTTABINFO, pszItemText : *u8, cchItemText : u32) -> BOOL #foreign USER32;
GetAltTabInfoW :: (hwnd : HWND, iItem : s32, pati : *ALTTABINFO, pszItemText : *u16, cchItemText : u32) -> BOOL #foreign USER32;
GetAncestor :: (hwnd : HWND, gaFlags : GET_ANCESTOR_FLAGS) -> HWND #foreign USER32;
GetCaretBlinkTime :: () -> u32 #foreign USER32;
GetCaretPos :: (lpPoint : *POINT) -> BOOL #foreign USER32;
GetClassInfoA :: (hInstance : HINSTANCE, lpClassName : PSTR, lpWndClass : *WNDCLASSA) -> BOOL #foreign USER32;
GetClassInfoExA :: (hInstance : HINSTANCE, lpszClass : PSTR, lpwcx : *WNDCLASSEXA) -> BOOL #foreign USER32;
GetClassInfoExW :: (hInstance : HINSTANCE, lpszClass : PWSTR, lpwcx : *WNDCLASSEXW) -> BOOL #foreign USER32;
GetClassInfoW :: (hInstance : HINSTANCE, lpClassName : PWSTR, lpWndClass : *WNDCLASSW) -> BOOL #foreign USER32;
GetClassLongA :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX) -> u32 #foreign USER32;
GetClassLongPtrA :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX) -> u64 #foreign USER32;
GetClassLongPtrW :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX) -> u64 #foreign USER32;
GetClassLongW :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX) -> u32 #foreign USER32;
GetClassNameA :: (hWnd : HWND, lpClassName : *u8, nMaxCount : s32) -> s32 #foreign USER32;
GetClassNameW :: (hWnd : HWND, lpClassName : *u16, nMaxCount : s32) -> s32 #foreign USER32;
GetClassWord :: (hWnd : HWND, nIndex : s32) -> u16 #foreign USER32;
GetClientRect :: (hWnd : HWND, lpRect : *RECT) -> BOOL #foreign USER32;
GetClipCursor :: (lpRect : *RECT) -> BOOL #foreign USER32;
GetClipboardData :: (uFormat : u32) -> HANDLE #foreign USER32;
GetClipboardFormatNameA :: (format : u32, lpszFormatName : *u8, cchMaxCount : s32) -> s32 #foreign USER32;
GetClipboardFormatNameW :: (format : u32, lpszFormatName : *u16, cchMaxCount : s32) -> s32 #foreign USER32;
GetClipboardOwner :: () -> HWND #foreign USER32;
GetClipboardSequenceNumber :: () -> u32 #foreign USER32;
GetClipboardViewer :: () -> HWND #foreign USER32;
GetCursor :: () -> HCURSOR #foreign USER32;
GetCursorInfo :: (pci : *CURSORINFO) -> BOOL #foreign USER32;
GetCursorPos :: (lpPoint : *POINT) -> BOOL #foreign USER32;
GetDesktopWindow :: () -> HWND #foreign USER32;
GetDialogBaseUnits :: () -> s32 #foreign USER32;
GetDlgCtrlID :: (hWnd : HWND) -> s32 #foreign USER32;
GetDlgItem :: (hDlg : HWND, nIDDlgItem : s32) -> HWND #foreign USER32;
GetDlgItemInt :: (hDlg : HWND, nIDDlgItem : s32, lpTranslated : *BOOL, bSigned : BOOL) -> u32 #foreign USER32;
GetDlgItemTextA :: (hDlg : HWND, nIDDlgItem : s32, lpString : *u8, cchMax : s32) -> u32 #foreign USER32;
GetDlgItemTextW :: (hDlg : HWND, nIDDlgItem : s32, lpString : *u16, cchMax : s32) -> u32 #foreign USER32;
GetForegroundWindow :: () -> HWND #foreign USER32;
GetGUIThreadInfo :: (idThread : u32, pgui : *GUITHREADINFO) -> BOOL #foreign USER32;
GetIconInfo :: (hIcon : HICON, piconinfo : *ICONINFO) -> BOOL #foreign USER32;
GetIconInfoExA :: (hicon : HICON, piconinfo : *ICONINFOEXA) -> BOOL #foreign USER32;
GetIconInfoExW :: (hicon : HICON, piconinfo : *ICONINFOEXW) -> BOOL #foreign USER32;
GetInputState :: () -> BOOL #foreign USER32;
GetLastActivePopup :: (hWnd : HWND) -> HWND #foreign USER32;
GetLayeredWindowAttributes :: (hwnd : HWND, pcrKey : *u32, pbAlpha : *u8, pdwFlags : *LAYERED_WINDOW_ATTRIBUTES_FLAGS) -> BOOL #foreign USER32;
GetMenu :: (hWnd : HWND) -> HMENU #foreign USER32;
GetMenuBarInfo :: (hwnd : HWND, idObject : OBJECT_IDENTIFIER, idItem : s32, pmbi : *MENUBARINFO) -> BOOL #foreign USER32;
GetMenuCheckMarkDimensions :: () -> s32 #foreign USER32;
GetMenuDefaultItem :: (hMenu : HMENU, fByPos : u32, gmdiFlags : GET_MENU_DEFAULT_ITEM_FLAGS) -> u32 #foreign USER32;
GetMenuInfo :: (param0 : HMENU, param1 : *MENUINFO) -> BOOL #foreign USER32;
GetMenuItemCount :: (hMenu : HMENU) -> s32 #foreign USER32;
GetMenuItemID :: (hMenu : HMENU, nPos : s32) -> u32 #foreign USER32;
GetMenuItemInfoA :: (hmenu : HMENU, item : u32, fByPosition : BOOL, lpmii : *MENUITEMINFOA) -> BOOL #foreign USER32;
GetMenuItemInfoW :: (hmenu : HMENU, item : u32, fByPosition : BOOL, lpmii : *MENUITEMINFOW) -> BOOL #foreign USER32;
GetMenuItemRect :: (hWnd : HWND, hMenu : HMENU, uItem : u32, lprcItem : *RECT) -> BOOL #foreign USER32;
GetMenuState :: (hMenu : HMENU, uId : u32, uFlags : MENU_ITEM_FLAGS) -> u32 #foreign USER32;
GetMenuStringA :: (hMenu : HMENU, uIDItem : u32, lpString : *u8, cchMax : s32, flags : MENU_ITEM_FLAGS) -> s32 #foreign USER32;
GetMenuStringW :: (hMenu : HMENU, uIDItem : u32, lpString : *u16, cchMax : s32, flags : MENU_ITEM_FLAGS) -> s32 #foreign USER32;
GetMessageA :: (lpMsg : *MSG, hWnd : HWND, wMsgFilterMin : u32, wMsgFilterMax : u32) -> BOOL #foreign USER32;
GetMessageExtraInfo :: () -> LPARAM #foreign USER32;
GetMessagePos :: () -> u32 #foreign USER32;
GetMessageTime :: () -> s32 #foreign USER32;
GetMessageW :: (lpMsg : *MSG, hWnd : HWND, wMsgFilterMin : u32, wMsgFilterMax : u32) -> BOOL #foreign USER32;
GetNextDlgGroupItem :: (hDlg : HWND, hCtl : HWND, bPrevious : BOOL) -> HWND #foreign USER32;
GetNextDlgTabItem :: (hDlg : HWND, hCtl : HWND, bPrevious : BOOL) -> HWND #foreign USER32;
GetOpenClipboardWindow :: () -> HWND #foreign USER32;
GetParent :: (hWnd : HWND) -> HWND #foreign USER32;
GetPhysicalCursorPos :: (lpPoint : *POINT) -> BOOL #foreign USER32;
GetPriorityClipboardFormat :: (paFormatPriorityList : *u32, cFormats : s32) -> s32 #foreign USER32;
GetProcessDefaultLayout :: (pdwDefaultLayout : *u32) -> BOOL #foreign USER32;
GetPropA :: (hWnd : HWND, lpString : PSTR) -> HANDLE #foreign USER32;
GetPropW :: (hWnd : HWND, lpString : PWSTR) -> HANDLE #foreign USER32;
GetQueueStatus :: (flags : QUEUE_STATUS_FLAGS) -> u32 #foreign USER32;
GetScrollBarInfo :: (hwnd : HWND, idObject : OBJECT_IDENTIFIER, psbi : *SCROLLBARINFO) -> BOOL #foreign USER32;
GetScrollInfo :: (hwnd : HWND, nBar : SCROLLBAR_CONSTANTS, lpsi : *SCROLLINFO) -> BOOL #foreign USER32;
GetScrollPos :: (hWnd : HWND, nBar : SCROLLBAR_CONSTANTS) -> s32 #foreign USER32;
GetScrollRange :: (hWnd : HWND, nBar : SCROLLBAR_CONSTANTS, lpMinPos : *s32, lpMaxPos : *s32) -> BOOL #foreign USER32;
GetShellWindow :: () -> HWND #foreign USER32;
GetSubMenu :: (hMenu : HMENU, nPos : s32) -> HMENU #foreign USER32;
GetSysColor :: (nIndex : SYS_COLOR_INDEX) -> u32 #foreign USER32;
GetSystemMenu :: (hWnd : HWND, bRevert : BOOL) -> HMENU #foreign USER32;
GetSystemMetrics :: (nIndex : SYSTEM_METRICS_INDEX) -> s32 #foreign USER32;
GetTitleBarInfo :: (hwnd : HWND, pti : *TITLEBARINFO) -> BOOL #foreign USER32;
GetTopWindow :: (hWnd : HWND) -> HWND #foreign USER32;
GetUpdatedClipboardFormats :: (lpuiFormats : *u32, cFormats : u32, pcFormatsOut : *u32) -> BOOL #foreign USER32;
GetWindow :: (hWnd : HWND, uCmd : GET_WINDOW_CMD) -> HWND #foreign USER32;
GetWindowDisplayAffinity :: (hWnd : HWND, pdwAffinity : *u32) -> BOOL #foreign USER32;
GetWindowInfo :: (hwnd : HWND, pwi : *WINDOWINFO) -> BOOL #foreign USER32;
GetWindowLongA :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX) -> s32 #foreign USER32;
GetWindowLongPtrA :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX) -> s64 #foreign USER32;
GetWindowLongPtrW :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX) -> s64 #foreign USER32;
GetWindowLongW :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX) -> s32 #foreign USER32;
GetWindowModuleFileNameA :: (hwnd : HWND, pszFileName : *u8, cchFileNameMax : u32) -> u32 #foreign USER32;
GetWindowModuleFileNameW :: (hwnd : HWND, pszFileName : *u16, cchFileNameMax : u32) -> u32 #foreign USER32;
GetWindowPlacement :: (hWnd : HWND, lpwndpl : *WINDOWPLACEMENT) -> BOOL #foreign USER32;
GetWindowRect :: (hWnd : HWND, lpRect : *RECT) -> BOOL #foreign USER32;
GetWindowTextA :: (hWnd : HWND, lpString : *u8, nMaxCount : s32) -> s32 #foreign USER32;
GetWindowTextLengthA :: (hWnd : HWND) -> s32 #foreign USER32;
GetWindowTextLengthW :: (hWnd : HWND) -> s32 #foreign USER32;
GetWindowTextW :: (hWnd : HWND, lpString : *u16, nMaxCount : s32) -> s32 #foreign USER32;
GetWindowThreadProcessId :: (hWnd : HWND, lpdwProcessId : *u32) -> u32 #foreign USER32;
GetWindowWord :: (hWnd : HWND, nIndex : s32) -> u16 #foreign USER32;
HideCaret :: (hWnd : HWND) -> BOOL #foreign USER32;
HiliteMenuItem :: (hWnd : HWND, hMenu : HMENU, uIDHiliteItem : u32, uHilite : u32) -> BOOL #foreign USER32;
InSendMessage :: () -> BOOL #foreign USER32;
InSendMessageEx :: (lpReserved : *void) -> u32 #foreign USER32;
InheritWindowMonitor :: (hwnd : HWND, hwndInherit : HWND) -> BOOL #foreign USER32;
InsertMenuA :: (hMenu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PSTR) -> BOOL #foreign USER32;
InsertMenuItemA :: (hmenu : HMENU, item : u32, fByPosition : BOOL, lpmi : *MENUITEMINFOA) -> BOOL #foreign USER32;
InsertMenuItemW :: (hmenu : HMENU, item : u32, fByPosition : BOOL, lpmi : *MENUITEMINFOW) -> BOOL #foreign USER32;
InsertMenuW :: (hMenu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PWSTR) -> BOOL #foreign USER32;
InternalGetWindowText :: (hWnd : HWND, pString : *u16, cchMaxCount : s32) -> s32 #foreign USER32;
IsCharAlphaA :: (ch : CHAR) -> BOOL #foreign USER32;
IsCharAlphaNumericA :: (ch : CHAR) -> BOOL #foreign USER32;
IsCharAlphaNumericW :: (ch : u16) -> BOOL #foreign USER32;
IsCharAlphaW :: (ch : u16) -> BOOL #foreign USER32;
IsCharLowerA :: (ch : CHAR) -> BOOL #foreign USER32;
IsCharUpperA :: (ch : CHAR) -> BOOL #foreign USER32;
IsCharUpperW :: (ch : u16) -> BOOL #foreign USER32;
IsChild :: (hWndParent : HWND, hWnd : HWND) -> BOOL #foreign USER32;
IsClipboardFormatAvailable :: (format : u32) -> BOOL #foreign USER32;
IsDialogMessageA :: (hDlg : HWND, lpMsg : *MSG) -> BOOL #foreign USER32;
IsDialogMessageW :: (hDlg : HWND, lpMsg : *MSG) -> BOOL #foreign USER32;
IsGUIThread :: (bConvert : BOOL) -> BOOL #foreign USER32;
IsHungAppWindow :: (hwnd : HWND) -> BOOL #foreign USER32;
IsIconic :: (hWnd : HWND) -> BOOL #foreign USER32;
IsMenu :: (hMenu : HMENU) -> BOOL #foreign USER32;
IsProcessDPIAware :: () -> BOOL #foreign USER32;
IsWindow :: (hWnd : HWND) -> BOOL #foreign USER32;
IsWindowUnicode :: (hWnd : HWND) -> BOOL #foreign USER32;
IsWindowVisible :: (hWnd : HWND) -> BOOL #foreign USER32;
IsWow64Message :: () -> BOOL #foreign USER32;
IsZoomed :: (hWnd : HWND) -> BOOL #foreign USER32;
KillTimer :: (hWnd : HWND, uIDEvent : u64) -> BOOL #foreign USER32;
LoadAcceleratorsA :: (hInstance : HINSTANCE, lpTableName : PSTR) -> HACCEL #foreign USER32;
LoadAcceleratorsW :: (hInstance : HINSTANCE, lpTableName : PWSTR) -> HACCEL #foreign USER32;
LoadCursorA :: (hInstance : HINSTANCE, lpCursorName : PSTR) -> HCURSOR #foreign USER32;
LoadCursorFromFileA :: (lpFileName : PSTR) -> HCURSOR #foreign USER32;
LoadCursorFromFileW :: (lpFileName : PWSTR) -> HCURSOR #foreign USER32;
LoadCursorW :: (hInstance : HINSTANCE, lpCursorName : PWSTR) -> HCURSOR #foreign USER32;
LoadIconA :: (hInstance : HINSTANCE, lpIconName : PSTR) -> HICON #foreign USER32;
LoadIconW :: (hInstance : HINSTANCE, lpIconName : PWSTR) -> HICON #foreign USER32;
LoadImageA :: (hInst : HINSTANCE, name : PSTR, type : GDI_IMAGE_TYPE, cx : s32, cy : s32, fuLoad : IMAGE_FLAGS) -> HANDLE #foreign USER32;
LoadImageW :: (hInst : HINSTANCE, name : PWSTR, type : GDI_IMAGE_TYPE, cx : s32, cy : s32, fuLoad : IMAGE_FLAGS) -> HANDLE #foreign USER32;
LoadMenuA :: (hInstance : HINSTANCE, lpMenuName : PSTR) -> HMENU #foreign USER32;
LoadMenuIndirectA :: (lpMenuTemplate : *void) -> HMENU #foreign USER32;
LoadMenuIndirectW :: (lpMenuTemplate : *void) -> HMENU #foreign USER32;
LoadMenuW :: (hInstance : HINSTANCE, lpMenuName : PWSTR) -> HMENU #foreign USER32;
LoadStringA :: (hInstance : HINSTANCE, uID : u32, lpBuffer : *u8, cchBufferMax : s32) -> s32 #foreign USER32;
LoadStringW :: (hInstance : HINSTANCE, uID : u32, lpBuffer : *u16, cchBufferMax : s32) -> s32 #foreign USER32;
LockSetForegroundWindow :: (uLockCode : FOREGROUND_WINDOW_LOCK_CODE) -> BOOL #foreign USER32;
LogicalToPhysicalPoint :: (hWnd : HWND, lpPoint : *POINT) -> BOOL #foreign USER32;
LookupIconIdFromDirectory :: (presbits : *u8, fIcon : BOOL) -> s32 #foreign USER32;
LookupIconIdFromDirectoryEx :: (presbits : *u8, fIcon : BOOL, cxDesired : s32, cyDesired : s32, Flags : IMAGE_FLAGS) -> s32 #foreign USER32;
MapDialogRect :: (hDlg : HWND, lpRect : *RECT) -> BOOL #foreign USER32;
MenuItemFromPoint :: (hWnd : HWND, hMenu : HMENU, ptScreen : POINT) -> s32 #foreign USER32;
MessageBoxA :: (hWnd : HWND, lpText : PSTR, lpCaption : PSTR, uType : MESSAGEBOX_STYLE) -> MESSAGEBOX_RESULT #foreign USER32;
MessageBoxExA :: (hWnd : HWND, lpText : PSTR, lpCaption : PSTR, uType : MESSAGEBOX_STYLE, wLanguageId : u16) -> MESSAGEBOX_RESULT #foreign USER32;
MessageBoxExW :: (hWnd : HWND, lpText : PWSTR, lpCaption : PWSTR, uType : MESSAGEBOX_STYLE, wLanguageId : u16) -> MESSAGEBOX_RESULT #foreign USER32;
MessageBoxIndirectA :: (lpmbp : *MSGBOXPARAMSA) -> MESSAGEBOX_RESULT #foreign USER32;
MessageBoxIndirectW :: (lpmbp : *MSGBOXPARAMSW) -> MESSAGEBOX_RESULT #foreign USER32;
MessageBoxW :: (hWnd : HWND, lpText : PWSTR, lpCaption : PWSTR, uType : MESSAGEBOX_STYLE) -> MESSAGEBOX_RESULT #foreign USER32;
ModifyMenuA :: (hMnu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PSTR) -> BOOL #foreign USER32;
ModifyMenuW :: (hMnu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS, uIDNewItem : u64, lpNewItem : PWSTR) -> BOOL #foreign USER32;
MoveWindow :: (hWnd : HWND, X : s32, Y : s32, nWidth : s32, nHeight : s32, bRepaint : BOOL) -> BOOL #foreign USER32;
MsgWaitForMultipleObjects :: (nCount : u32, pHandles : *HANDLE, fWaitAll : BOOL, dwMilliseconds : u32, dwWakeMask : QUEUE_STATUS_FLAGS) -> u32 #foreign USER32;
MsgWaitForMultipleObjectsEx :: (nCount : u32, pHandles : *HANDLE, dwMilliseconds : u32, dwWakeMask : QUEUE_STATUS_FLAGS, dwFlags : MSG_WAIT_FOR_MULTIPLE_OBJECTS_EX_FLAGS) -> u32 #foreign USER32;
OemToCharA :: (pSrc : PSTR, pDst : PSTR) -> BOOL #foreign USER32;
OemToCharBuffA :: (lpszSrc : PSTR, lpszDst : *u8, cchDstLength : u32) -> BOOL #foreign USER32;
OemToCharBuffW :: (lpszSrc : PSTR, lpszDst : *u16, cchDstLength : u32) -> BOOL #foreign USER32;
OemToCharW :: (pSrc : PSTR, pDst : PWSTR) -> BOOL #foreign USER32;
OpenClipboard :: (hWndNewOwner : HWND) -> BOOL #foreign USER32;
OpenIcon :: (hWnd : HWND) -> BOOL #foreign USER32;
PeekMessageA :: (lpMsg : *MSG, hWnd : HWND, wMsgFilterMin : u32, wMsgFilterMax : u32, wRemoveMsg : PEEK_MESSAGE_REMOVE_TYPE) -> BOOL #foreign USER32;
PeekMessageW :: (lpMsg : *MSG, hWnd : HWND, wMsgFilterMin : u32, wMsgFilterMax : u32, wRemoveMsg : PEEK_MESSAGE_REMOVE_TYPE) -> BOOL #foreign USER32;
PhysicalToLogicalPoint :: (hWnd : HWND, lpPoint : *POINT) -> BOOL #foreign USER32;
PostMessageA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
PostMessageW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
PostQuitMessage :: (nExitCode : s32)  #foreign USER32;
PostThreadMessageA :: (idThread : u32, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
PostThreadMessageW :: (idThread : u32, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
PrivateExtractIconsA :: (szFileName : *[260]u8, nIconIndex : s32, cxIcon : s32, cyIcon : s32, phicon : *HICON, piconid : *u32, nIcons : u32, flags : u32) -> u32 #foreign USER32;
PrivateExtractIconsW :: (szFileName : *[260]u16, nIconIndex : s32, cxIcon : s32, cyIcon : s32, phicon : *HICON, piconid : *u32, nIcons : u32, flags : u32) -> u32 #foreign USER32;
RealChildWindowFromPoint :: (hwndParent : HWND, ptParentClientCoords : POINT) -> HWND #foreign USER32;
RealGetWindowClassA :: (hwnd : HWND, ptszClassName : *u8, cchClassNameMax : u32) -> u32 #foreign USER32;
RealGetWindowClassW :: (hwnd : HWND, ptszClassName : *u16, cchClassNameMax : u32) -> u32 #foreign USER32;
RegisterClassA :: (lpWndClass : *WNDCLASSA) -> u16 #foreign USER32;
RegisterClassExA :: (param0 : *WNDCLASSEXA) -> u16 #foreign USER32;
RegisterClassExW :: (param0 : *WNDCLASSEXW) -> u16 #foreign USER32;
RegisterClassW :: (lpWndClass : *WNDCLASSW) -> u16 #foreign USER32;
RegisterClipboardFormatA :: (lpszFormat : PSTR) -> u32 #foreign USER32;
RegisterClipboardFormatW :: (lpszFormat : PWSTR) -> u32 #foreign USER32;
RegisterDeviceNotificationA :: (hRecipient : HANDLE, NotificationFilter : *void, Flags : POWER_SETTING_REGISTER_NOTIFICATION_FLAGS) -> *void #foreign USER32;
RegisterDeviceNotificationW :: (hRecipient : HANDLE, NotificationFilter : *void, Flags : POWER_SETTING_REGISTER_NOTIFICATION_FLAGS) -> *void #foreign USER32;
RegisterShellHookWindow :: (hwnd : HWND) -> BOOL #foreign USER32;
RegisterWindowMessageA :: (lpString : PSTR) -> u32 #foreign USER32;
RegisterWindowMessageW :: (lpString : PWSTR) -> u32 #foreign USER32;
RemoveClipboardFormatListener :: (hwnd : HWND) -> BOOL #foreign USER32;
RemoveMenu :: (hMenu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS) -> BOOL #foreign USER32;
RemovePropA :: (hWnd : HWND, lpString : PSTR) -> HANDLE #foreign USER32;
RemovePropW :: (hWnd : HWND, lpString : PWSTR) -> HANDLE #foreign USER32;
ReplyMessage :: (lResult : LRESULT) -> BOOL #foreign USER32;
ScrollDC :: (hDC : HDC, dx : s32, dy : s32, lprcScroll : *RECT, lprcClip : *RECT, hrgnUpdate : HRGN, lprcUpdate : *RECT) -> BOOL #foreign USER32;
ScrollWindow :: (hWnd : HWND, XAmount : s32, YAmount : s32, lpRect : *RECT, lpClipRect : *RECT) -> BOOL #foreign USER32;
ScrollWindowEx :: (hWnd : HWND, dx : s32, dy : s32, prcScroll : *RECT, prcClip : *RECT, hrgnUpdate : HRGN, prcUpdate : *RECT, flags : SHOW_WINDOW_CMD) -> s32 #foreign USER32;
SendDlgItemMessageA :: (hDlg : HWND, nIDDlgItem : s32, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
SendDlgItemMessageW :: (hDlg : HWND, nIDDlgItem : s32, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
SendMessageA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
SendMessageCallbackA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM, lpResultCallBack : SENDASYNCPROC, dwData : u64) -> BOOL #foreign USER32;
SendMessageCallbackW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM, lpResultCallBack : SENDASYNCPROC, dwData : u64) -> BOOL #foreign USER32;
SendMessageTimeoutA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM, fuFlags : SEND_MESSAGE_TIMEOUT_FLAGS, uTimeout : u32, lpdwResult : *u64) -> LRESULT #foreign USER32;
SendMessageTimeoutW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM, fuFlags : SEND_MESSAGE_TIMEOUT_FLAGS, uTimeout : u32, lpdwResult : *u64) -> LRESULT #foreign USER32;
SendMessageW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> LRESULT #foreign USER32;
SendNotifyMessageA :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
SendNotifyMessageW :: (hWnd : HWND, Msg : u32, wParam : WPARAM, lParam : LPARAM) -> BOOL #foreign USER32;
SetCaretBlinkTime :: (uMSeconds : u32) -> BOOL #foreign USER32;
SetCaretPos :: (X : s32, Y : s32) -> BOOL #foreign USER32;
SetClassLongA :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX, dwNewLong : s32) -> u32 #foreign USER32;
SetClassLongPtrA :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX, dwNewLong : s64) -> u64 #foreign USER32;
SetClassLongPtrW :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX, dwNewLong : s64) -> u64 #foreign USER32;
SetClassLongW :: (hWnd : HWND, nIndex : GET_CLASS_LONG_INDEX, dwNewLong : s32) -> u32 #foreign USER32;
SetClassWord :: (hWnd : HWND, nIndex : s32, wNewWord : u16) -> u16 #foreign USER32;
SetClipboardData :: (uFormat : u32, hMem : HANDLE) -> HANDLE #foreign USER32;
SetClipboardViewer :: (hWndNewViewer : HWND) -> HWND #foreign USER32;
SetCoalescableTimer :: (hWnd : HWND, nIDEvent : u64, uElapse : u32, lpTimerFunc : TIMERPROC, uToleranceDelay : u32) -> u64 #foreign USER32;
SetCursor :: (hCursor : HCURSOR) -> HCURSOR #foreign USER32;
SetCursorPos :: (X : s32, Y : s32) -> BOOL #foreign USER32;
SetDebugErrorLevel :: (dwLevel : u32)  #foreign USER32;
SetDlgItemInt :: (hDlg : HWND, nIDDlgItem : s32, uValue : u32, bSigned : BOOL) -> BOOL #foreign USER32;
SetDlgItemTextA :: (hDlg : HWND, nIDDlgItem : s32, lpString : PSTR) -> BOOL #foreign USER32;
SetDlgItemTextW :: (hDlg : HWND, nIDDlgItem : s32, lpString : PWSTR) -> BOOL #foreign USER32;
SetForegroundWindow :: (hWnd : HWND) -> BOOL #foreign USER32;
SetLayeredWindowAttributes :: (hwnd : HWND, crKey : u32, bAlpha : u8, dwFlags : LAYERED_WINDOW_ATTRIBUTES_FLAGS) -> BOOL #foreign USER32;
SetMenu :: (hWnd : HWND, hMenu : HMENU) -> BOOL #foreign USER32;
SetMenuDefaultItem :: (hMenu : HMENU, uItem : u32, fByPos : u32) -> BOOL #foreign USER32;
SetMenuInfo :: (param0 : HMENU, param1 : *MENUINFO) -> BOOL #foreign USER32;
SetMenuItemBitmaps :: (hMenu : HMENU, uPosition : u32, uFlags : MENU_ITEM_FLAGS, hBitmapUnchecked : HBITMAP, hBitmapChecked : HBITMAP) -> BOOL #foreign USER32;
SetMenuItemInfoA :: (hmenu : HMENU, item : u32, fByPositon : BOOL, lpmii : *MENUITEMINFOA) -> BOOL #foreign USER32;
SetMenuItemInfoW :: (hmenu : HMENU, item : u32, fByPositon : BOOL, lpmii : *MENUITEMINFOW) -> BOOL #foreign USER32;
SetMessageExtraInfo :: (lParam : LPARAM) -> LPARAM #foreign USER32;
SetMessageQueue :: (cMessagesMax : s32) -> BOOL #foreign USER32;
SetParent :: (hWndChild : HWND, hWndNewParent : HWND) -> HWND #foreign USER32;
SetPhysicalCursorPos :: (X : s32, Y : s32) -> BOOL #foreign USER32;
SetProcessDPIAware :: () -> BOOL #foreign USER32;
SetProcessDefaultLayout :: (dwDefaultLayout : u32) -> BOOL #foreign USER32;
SetPropA :: (hWnd : HWND, lpString : PSTR, hData : HANDLE) -> BOOL #foreign USER32;
SetPropW :: (hWnd : HWND, lpString : PWSTR, hData : HANDLE) -> BOOL #foreign USER32;
SetSysColors :: (cElements : s32, lpaElements : *s32, lpaRgbValues : *u32) -> BOOL #foreign USER32;
SetSystemCursor :: (hcur : HCURSOR, id : SYSTEM_CURSOR_ID) -> BOOL #foreign USER32;
SetTimer :: (hWnd : HWND, nIDEvent : u64, uElapse : u32, lpTimerFunc : TIMERPROC) -> u64 #foreign USER32;
SetWindowDisplayAffinity :: (hWnd : HWND, dwAffinity : WINDOW_DISPLAY_AFFINITY) -> BOOL #foreign USER32;
SetWindowLongA :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX, dwNewLong : s32) -> s32 #foreign USER32;
SetWindowLongPtrA :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX, dwNewLong : s64) -> s64 #foreign USER32;
SetWindowLongPtrW :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX, dwNewLong : s64) -> s64 #foreign USER32;
SetWindowLongW :: (hWnd : HWND, nIndex : WINDOW_LONG_PTR_INDEX, dwNewLong : s32) -> s32 #foreign USER32;
SetWindowPlacement :: (hWnd : HWND, lpwndpl : *WINDOWPLACEMENT) -> BOOL #foreign USER32;
SetWindowPos :: (hWnd : HWND, hWndInsertAfter : HWND, X : s32, Y : s32, cx : s32, cy : s32, uFlags : SET_WINDOW_POS_FLAGS) -> BOOL #foreign USER32;
SetWindowTextA :: (hWnd : HWND, lpString : PSTR) -> BOOL #foreign USER32;
SetWindowTextW :: (hWnd : HWND, lpString : PWSTR) -> BOOL #foreign USER32;
SetWindowWord :: (hWnd : HWND, nIndex : s32, wNewWord : u16) -> u16 #foreign USER32;
SetWindowsHookA :: (nFilterType : s32, pfnFilterProc : HOOKPROC) -> HHOOK #foreign USER32;
SetWindowsHookExA :: (idHook : WINDOWS_HOOK_ID, lpfn : HOOKPROC, hmod : HINSTANCE, dwThreadId : u32) -> HHOOK #foreign USER32;
SetWindowsHookExW :: (idHook : WINDOWS_HOOK_ID, lpfn : HOOKPROC, hmod : HINSTANCE, dwThreadId : u32) -> HHOOK #foreign USER32;
SetWindowsHookW :: (nFilterType : s32, pfnFilterProc : HOOKPROC) -> HHOOK #foreign USER32;
ShowCaret :: (hWnd : HWND) -> BOOL #foreign USER32;
ShowCursor :: (bShow : BOOL) -> s32 #foreign USER32;
ShowOwnedPopups :: (hWnd : HWND, fShow : BOOL) -> BOOL #foreign USER32;
ShowWindow :: (hWnd : HWND, nCmdShow : SHOW_WINDOW_CMD) -> BOOL #foreign USER32;
ShowWindowAsync :: (hWnd : HWND, nCmdShow : SHOW_WINDOW_CMD) -> BOOL #foreign USER32;
SoundSentry :: () -> BOOL #foreign USER32;
SwitchToThisWindow :: (hwnd : HWND, fUnknown : BOOL)  #foreign USER32;
SystemParametersInfoA :: (uiAction : SYSTEM_PARAMETERS_INFO_ACTION, uiParam : u32, pvParam : *void, fWinIni : SYSTEM_PARAMETERS_INFO_UPDATE_FLAGS) -> BOOL #foreign USER32;
SystemParametersInfoW :: (uiAction : SYSTEM_PARAMETERS_INFO_ACTION, uiParam : u32, pvParam : *void, fWinIni : SYSTEM_PARAMETERS_INFO_UPDATE_FLAGS) -> BOOL #foreign USER32;
TileWindows :: (hwndParent : HWND, wHow : TILE_WINDOWS_HOW, lpRect : *RECT, cKids : u32, lpKids : *HWND) -> u16 #foreign USER32;
TrackPopupMenu :: (hMenu : HMENU, uFlags : TRACK_POPUP_MENU_FLAGS, x : s32, y : s32, nReserved : s32, hWnd : HWND, prcRect : *RECT) -> BOOL #foreign USER32;
TrackPopupMenuEx :: (hMenu : HMENU, uFlags : u32, x : s32, y : s32, hwnd : HWND, lptpm : *TPMPARAMS) -> BOOL #foreign USER32;
TranslateAcceleratorA :: (hWnd : HWND, hAccTable : HACCEL, lpMsg : *MSG) -> s32 #foreign USER32;
TranslateAcceleratorW :: (hWnd : HWND, hAccTable : HACCEL, lpMsg : *MSG) -> s32 #foreign USER32;
TranslateMDISysAccel :: (hWndClient : HWND, lpMsg : *MSG) -> BOOL #foreign USER32;
TranslateMessage :: (lpMsg : *MSG) -> BOOL #foreign USER32;
UnhookWindowsHook :: (nCode : s32, pfnFilterProc : HOOKPROC) -> BOOL #foreign USER32;
UnhookWindowsHookEx :: (hhk : HHOOK) -> BOOL #foreign USER32;
UnregisterClassA :: (lpClassName : PSTR, hInstance : HINSTANCE) -> BOOL #foreign USER32;
UnregisterClassW :: (lpClassName : PWSTR, hInstance : HINSTANCE) -> BOOL #foreign USER32;
UpdateLayeredWindow :: (hWnd : HWND, hdcDst : HDC, pptDst : *POINT, psize : *SIZE, hdcSrc : HDC, pptSrc : *POINT, crKey : u32, pblend : *BLENDFUNCTION, dwFlags : UPDATE_LAYERED_WINDOW_FLAGS) -> BOOL #foreign USER32;
UpdateLayeredWindowIndirect :: (hWnd : HWND, pULWInfo : *UPDATELAYEREDWINDOWINFO) -> BOOL #foreign USER32;
WaitMessage :: () -> BOOL #foreign USER32;
WindowFromPhysicalPoint :: (Point : POINT) -> HWND #foreign USER32;
WindowFromPoint :: (Point : POINT) -> HWND #foreign USER32;
wsprintfA :: (param0 : PSTR, param1 : PSTR) -> s32 #foreign USER32;
wsprintfW :: (param0 : PWSTR, param1 : PWSTR) -> s32 #foreign USER32;
wvsprintfA :: (param0 : PSTR, param1 : PSTR, arglist : *s8) -> s32 #foreign USER32;
wvsprintfW :: (param0 : PWSTR, param1 : PWSTR, arglist : *s8) -> s32 #foreign USER32;

// Unicode aliases

#if UNICODE then LoadString :: LoadStringW;
else             LoadString :: LoadStringA;
#if UNICODE then wvsprintf :: wvsprintfW;
else             wvsprintf :: wvsprintfA;
#if UNICODE then wsprintf :: wsprintfW;
else             wsprintf :: wsprintfA;
#if UNICODE then RegisterWindowMessage :: RegisterWindowMessageW;
else             RegisterWindowMessage :: RegisterWindowMessageA;
#if UNICODE then GetMessage :: GetMessageW;
else             GetMessage :: GetMessageA;
#if UNICODE then DispatchMessage :: DispatchMessageW;
else             DispatchMessage :: DispatchMessageA;
#if UNICODE then PeekMessage :: PeekMessageW;
else             PeekMessage :: PeekMessageA;
#if UNICODE then SendMessage :: SendMessageW;
else             SendMessage :: SendMessageA;
#if UNICODE then SendMessageTimeout :: SendMessageTimeoutW;
else             SendMessageTimeout :: SendMessageTimeoutA;
#if UNICODE then SendNotifyMessage :: SendNotifyMessageW;
else             SendNotifyMessage :: SendNotifyMessageA;
#if UNICODE then SendMessageCallback :: SendMessageCallbackW;
else             SendMessageCallback :: SendMessageCallbackA;
#if UNICODE then RegisterDeviceNotification :: RegisterDeviceNotificationW;
else             RegisterDeviceNotification :: RegisterDeviceNotificationA;
#if UNICODE then PostMessage :: PostMessageW;
else             PostMessage :: PostMessageA;
#if UNICODE then PostThreadMessage :: PostThreadMessageW;
else             PostThreadMessage :: PostThreadMessageA;
#if UNICODE then DefWindowProc :: DefWindowProcW;
else             DefWindowProc :: DefWindowProcA;
#if UNICODE then CallWindowProc :: CallWindowProcW;
else             CallWindowProc :: CallWindowProcA;
#if UNICODE then RegisterClass :: RegisterClassW;
else             RegisterClass :: RegisterClassA;
#if UNICODE then UnregisterClass :: UnregisterClassW;
else             UnregisterClass :: UnregisterClassA;
#if UNICODE then GetClassInfo :: GetClassInfoW;
else             GetClassInfo :: GetClassInfoA;
#if UNICODE then RegisterClassEx :: RegisterClassExW;
else             RegisterClassEx :: RegisterClassExA;
#if UNICODE then GetClassInfoEx :: GetClassInfoExW;
else             GetClassInfoEx :: GetClassInfoExA;
#if UNICODE then CreateWindowEx :: CreateWindowExW;
else             CreateWindowEx :: CreateWindowExA;
#if UNICODE then CreateDialogParam :: CreateDialogParamW;
else             CreateDialogParam :: CreateDialogParamA;
#if UNICODE then CreateDialogIndirectParam :: CreateDialogIndirectParamW;
else             CreateDialogIndirectParam :: CreateDialogIndirectParamA;
#if UNICODE then DialogBoxParam :: DialogBoxParamW;
else             DialogBoxParam :: DialogBoxParamA;
#if UNICODE then DialogBoxIndirectParam :: DialogBoxIndirectParamW;
else             DialogBoxIndirectParam :: DialogBoxIndirectParamA;
#if UNICODE then SetDlgItemText :: SetDlgItemTextW;
else             SetDlgItemText :: SetDlgItemTextA;
#if UNICODE then GetDlgItemText :: GetDlgItemTextW;
else             GetDlgItemText :: GetDlgItemTextA;
#if UNICODE then SendDlgItemMessage :: SendDlgItemMessageW;
else             SendDlgItemMessage :: SendDlgItemMessageA;
#if UNICODE then DefDlgProc :: DefDlgProcW;
else             DefDlgProc :: DefDlgProcA;
#if UNICODE then CallMsgFilter :: CallMsgFilterW;
else             CallMsgFilter :: CallMsgFilterA;
#if UNICODE then CharToOem :: CharToOemW;
else             CharToOem :: CharToOemA;
#if UNICODE then OemToChar :: OemToCharW;
else             OemToChar :: OemToCharA;
#if UNICODE then CharToOemBuff :: CharToOemBuffW;
else             CharToOemBuff :: CharToOemBuffA;
#if UNICODE then OemToCharBuff :: OemToCharBuffW;
else             OemToCharBuff :: OemToCharBuffA;
#if UNICODE then CharUpper :: CharUpperW;
else             CharUpper :: CharUpperA;
#if UNICODE then CharUpperBuff :: CharUpperBuffW;
else             CharUpperBuff :: CharUpperBuffA;
#if UNICODE then CharLower :: CharLowerW;
else             CharLower :: CharLowerA;
#if UNICODE then CharLowerBuff :: CharLowerBuffW;
else             CharLowerBuff :: CharLowerBuffA;
#if UNICODE then CharNext :: CharNextW;
else             CharNext :: CharNextA;
#if UNICODE then CharPrev :: CharPrevW;
else             CharPrev :: CharPrevA;
#if UNICODE then IsCharAlpha :: IsCharAlphaW;
else             IsCharAlpha :: IsCharAlphaA;
#if UNICODE then IsCharAlphaNumeric :: IsCharAlphaNumericW;
else             IsCharAlphaNumeric :: IsCharAlphaNumericA;
#if UNICODE then IsCharUpper :: IsCharUpperW;
else             IsCharUpper :: IsCharUpperA;
#if UNICODE then LoadAccelerators :: LoadAcceleratorsW;
else             LoadAccelerators :: LoadAcceleratorsA;
#if UNICODE then CreateAcceleratorTable :: CreateAcceleratorTableW;
else             CreateAcceleratorTable :: CreateAcceleratorTableA;
#if UNICODE then CopyAcceleratorTable :: CopyAcceleratorTableW;
else             CopyAcceleratorTable :: CopyAcceleratorTableA;
#if UNICODE then TranslateAccelerator :: TranslateAcceleratorW;
else             TranslateAccelerator :: TranslateAcceleratorA;
#if UNICODE then LoadMenu :: LoadMenuW;
else             LoadMenu :: LoadMenuA;
#if UNICODE then LoadMenuIndirect :: LoadMenuIndirectW;
else             LoadMenuIndirect :: LoadMenuIndirectA;
#if UNICODE then ChangeMenu :: ChangeMenuW;
else             ChangeMenu :: ChangeMenuA;
#if UNICODE then GetMenuString :: GetMenuStringW;
else             GetMenuString :: GetMenuStringA;
#if UNICODE then InsertMenu :: InsertMenuW;
else             InsertMenu :: InsertMenuA;
#if UNICODE then AppendMenu :: AppendMenuW;
else             AppendMenu :: AppendMenuA;
#if UNICODE then ModifyMenu :: ModifyMenuW;
else             ModifyMenu :: ModifyMenuA;
#if UNICODE then InsertMenuItem :: InsertMenuItemW;
else             InsertMenuItem :: InsertMenuItemA;
#if UNICODE then GetMenuItemInfo :: GetMenuItemInfoW;
else             GetMenuItemInfo :: GetMenuItemInfoA;
#if UNICODE then SetMenuItemInfo :: SetMenuItemInfoW;
else             SetMenuItemInfo :: SetMenuItemInfoA;
#if UNICODE then SetProp :: SetPropW;
else             SetProp :: SetPropA;
#if UNICODE then GetProp :: GetPropW;
else             GetProp :: GetPropA;
#if UNICODE then RemoveProp :: RemovePropW;
else             RemoveProp :: RemovePropA;
#if UNICODE then EnumPropsEx :: EnumPropsExW;
else             EnumPropsEx :: EnumPropsExA;
#if UNICODE then EnumProps :: EnumPropsW;
else             EnumProps :: EnumPropsA;
#if UNICODE then SetWindowText :: SetWindowTextW;
else             SetWindowText :: SetWindowTextA;
#if UNICODE then GetWindowText :: GetWindowTextW;
else             GetWindowText :: GetWindowTextA;
#if UNICODE then GetWindowTextLength :: GetWindowTextLengthW;
else             GetWindowTextLength :: GetWindowTextLengthA;
#if UNICODE then MessageBox :: MessageBoxW;
else             MessageBox :: MessageBoxA;
#if UNICODE then MessageBoxEx :: MessageBoxExW;
else             MessageBoxEx :: MessageBoxExA;
#if UNICODE then MessageBoxIndirect :: MessageBoxIndirectW;
else             MessageBoxIndirect :: MessageBoxIndirectA;
#if UNICODE then GetWindowLong :: GetWindowLongW;
else             GetWindowLong :: GetWindowLongA;
#if UNICODE then SetWindowLong :: SetWindowLongW;
else             SetWindowLong :: SetWindowLongA;
#if UNICODE then GetWindowLongPtr :: GetWindowLongPtrW;
else             GetWindowLongPtr :: GetWindowLongPtrA;
#if UNICODE then SetWindowLongPtr :: SetWindowLongPtrW;
else             SetWindowLongPtr :: SetWindowLongPtrA;
#if UNICODE then GetClassLong :: GetClassLongW;
else             GetClassLong :: GetClassLongA;
#if UNICODE then SetClassLong :: SetClassLongW;
else             SetClassLong :: SetClassLongA;
#if UNICODE then GetClassLongPtr :: GetClassLongPtrW;
else             GetClassLongPtr :: GetClassLongPtrA;
#if UNICODE then SetClassLongPtr :: SetClassLongPtrW;
else             SetClassLongPtr :: SetClassLongPtrA;
#if UNICODE then FindWindow :: FindWindowW;
else             FindWindow :: FindWindowA;
#if UNICODE then FindWindowEx :: FindWindowExW;
else             FindWindowEx :: FindWindowExA;
#if UNICODE then GetClassName :: GetClassNameW;
else             GetClassName :: GetClassNameA;
#if UNICODE then SetWindowsHook :: SetWindowsHookW;
else             SetWindowsHook :: SetWindowsHookA;
#if UNICODE then SetWindowsHookEx :: SetWindowsHookExW;
else             SetWindowsHookEx :: SetWindowsHookExA;
#if UNICODE then LoadCursor :: LoadCursorW;
else             LoadCursor :: LoadCursorA;
#if UNICODE then LoadCursorFromFile :: LoadCursorFromFileW;
else             LoadCursorFromFile :: LoadCursorFromFileA;
#if UNICODE then LoadIcon :: LoadIconW;
else             LoadIcon :: LoadIconA;
#if UNICODE then PrivateExtractIcons :: PrivateExtractIconsW;
else             PrivateExtractIcons :: PrivateExtractIconsA;
#if UNICODE then LoadImage :: LoadImageW;
else             LoadImage :: LoadImageA;
#if UNICODE then GetIconInfoEx :: GetIconInfoExW;
else             GetIconInfoEx :: GetIconInfoExA;
#if UNICODE then IsDialogMessage :: IsDialogMessageW;
else             IsDialogMessage :: IsDialogMessageA;
#if UNICODE then DefFrameProc :: DefFrameProcW;
else             DefFrameProc :: DefFrameProcA;
#if UNICODE then DefMDIChildProc :: DefMDIChildProcW;
else             DefMDIChildProc :: DefMDIChildProcA;
#if UNICODE then CreateMDIWindow :: CreateMDIWindowW;
else             CreateMDIWindow :: CreateMDIWindowA;
#if UNICODE then SystemParametersInfo :: SystemParametersInfoW;
else             SystemParametersInfo :: SystemParametersInfoA;
#if UNICODE then GetWindowModuleFileName :: GetWindowModuleFileNameW;
else             GetWindowModuleFileName :: GetWindowModuleFileNameA;
#if UNICODE then RealGetWindowClass :: RealGetWindowClassW;
else             RealGetWindowClass :: RealGetWindowClassA;
#if UNICODE then GetAltTabInfo :: GetAltTabInfoW;
else             GetAltTabInfo :: GetAltTabInfoA;
#if UNICODE then RegisterClipboardFormat :: RegisterClipboardFormatW;
else             RegisterClipboardFormat :: RegisterClipboardFormatA;
#if UNICODE then GetClipboardFormatName :: GetClipboardFormatNameW;
else             GetClipboardFormatName :: GetClipboardFormatNameA;

// System libraries

#scope_file

USER32 :: #system_library "USER32";

